{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function () {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        var diff = this.orientation === 'Horizontal' ? (this.element.offsetWidth -\n            (this.allBars[0].offsetWidth * this.allBars.length)) - totalWidth :\n            (this.element.offsetHeight - (this.allBars[0].offsetHeight * this.allBars.length)) - totalWidth;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        this.updateSplitterSize();\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","diff","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate"],"mappings":"wPAAA,IAAIA,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAM5DM,EAAO,aACPC,EAAkB,wBAClBC,EAAgB,sBAChBC,EAAO,SACPC,EAAe,oBACfC,EAAe,kBACfC,EAAY,cACZC,EAAc,yBACdC,EAAc,uBACdC,EAAc,gBACdC,EAAc,eACdC,EAAa,mBACbC,EAAgB,wBAChBC,EAAkB,oBAClBC,EAAmB,qBACnBC,EAAe,iBAEfC,EAAW,aAGXC,EAAc,gBACdC,EAAiB,mBACjBC,EAAc,gBACdC,EAAa,eACbC,EAAW,aACXC,EAAa,eACbC,EAAY,gBACZC,EAAc,aACdC,EAAgB,cAChBC,EAAc,gBACdC,EAAiB,cAMjBC,EAAgC,SAAUC,GAE1C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KA0B/D,OA5BAX,EAAUyD,EAAgBC,GAI1B3C,GACI6C,cACDH,EAAe5C,UAAW,YAAQ,GACrCE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,mBAAe,GAC5CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,YAAS,IACVH,EAAe5C,UAAW,iBAAa,GAC1CE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,WAAS,OACVH,EAAe5C,UAAW,WAAO,GACpCE,GACI6C,cACDH,EAAe5C,UAAW,eAAW,GACxCE,GACI6C,WAAS,KACVH,EAAe5C,UAAW,gBAAY,GAClC4C,GACTI,iBAsBEC,EAA0B,SAAUJ,GAOpC,SAASI,EAASC,EAASC,GACvB,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAiBnD,OAhBAsD,EAAME,YACNF,EAAMG,aACNH,EAAMI,kBACNJ,EAAMK,WACNL,EAAMM,uBACNN,EAAMO,sBACNP,EAAMQ,2BAA4B,EAClCR,EAAMS,4BAA6B,EACnCT,EAAMU,mBACNV,EAAMW,OAAS,EACfX,EAAMY,qBAAuB,YAAa,WAAY,WAAY,mBAAoB,iBAAkB,eAAgB,kBACxHZ,EAAMa,wBAA0B,mBAAoB,aAAc,eAClEb,EAAMc,WAAa,IACnBd,EAAMe,mBACNf,EAAMgB,cAAe,EACrBhB,EAAMiB,YAAa,EACZjB,EAo9DX,OA5+DAjE,EAAU8D,EAAUJ,GAiCpBI,EAASjD,UAAUsE,kBAAoB,SAAUC,EAASC,GACtD,GAAK1E,KAAKqD,QAAQsB,UAAUC,SAAS1D,GAGrC,IAAK,IAAI2D,EAAK,EAAGC,EAAKrF,OAAOsF,KAAKN,GAAUI,EAAKC,EAAGnE,OAAQkE,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,SACD7E,KAAKgF,gBAAgBhF,KAAKqD,QAASoB,EAAQQ,OAAQ,UACnD,MACJ,IAAK,QACDjF,KAAKgF,gBAAgBhF,KAAKqD,QAASoB,EAAQS,MAAO,SAClD,MACJ,IAAK,WACDlF,KAAKmF,YAAYnF,KAAKqD,QAASoB,EAAQW,UACvC,MACJ,IAAK,UACDpF,KAAKqF,UAAUrF,KAAKsF,SACpB,MACJ,IAAK,gBACDtF,KAAKuF,iBAAiBd,EAAQe,eAC9B,MACJ,IAAK,cACDxF,KAAKyF,kBAAkBhB,EAAQiB,aAC/B,MACJ,IAAK,eACD,GAAMjB,EAAQkB,wBAAwB/F,OAAS8E,EAAQiB,wBAAwB/F,MAuC3EI,KAAK4F,sBACL5F,KAAK2D,WACL3D,KAAKwD,YACLxD,KAAK6F,gBAAgB7F,KAAKqD,SAC1BrD,KAAK8F,aAAa9F,KAAKqD,SACvBrD,KAAK+F,qBACL/F,KAAKgG,OAAOhG,KAAKiG,WACjBjG,KAAKkG,mBA5CL,IAAK,IADDC,EAAa1G,OAAOsF,KAAKN,EAAQkB,cAC5B3E,EAAI,EAAGA,EAAImF,EAAWxF,OAAQK,IAGnC,IAAK,IAFDoF,EAAQC,SAAS5G,OAAOsF,KAAKN,EAAQkB,cAAc3E,GAAI,IACvDsF,EAAoB7G,OAAOsF,KAAKN,EAAQkB,aAAaS,IAAQzF,OACxD4F,EAAI,EAAGA,EAAID,EAAmBC,IAAK,CACxC,IAAIC,EAAW/G,OAAOsF,KAAKN,EAAQkB,aAAaS,IAAQG,GACxD,OAAQC,GACJ,IAAK,UACD,IAAIC,EAAWhH,OAAOgF,EAAQkB,aAAaS,IAAQI,GAC9CE,oBAAkBD,KACnBzG,KAAKwD,SAAS4C,GAAOO,UAAY,GACjC3G,KAAK4G,YAAYH,EAAUzG,KAAKwD,SAAS4C,KAE7C,MACJ,IAAK,YACD,IAAIS,EAASpH,OAAOgF,EAAQkB,aAAaS,IAAQI,GACjDxG,KAAK8G,eAAeV,EAAOS,GAC3B,MACJ,IAAK,cACD7G,KAAK+G,uBAAuBX,GAC5B,MACJ,IAAK,YACD3B,EAAQkB,aAAaS,GAAOY,UAAYhH,KAAKkG,YAAYE,GAASpG,KAAKiH,kBAAkBb,GACzF,MACJ,IAAK,WACDpG,KAAKmF,YAAYnF,KAAKwD,SAAS4C,GAAQ3B,EAAQkB,aAAaS,GAAOhB,UACnE,MACJ,IAAK,OACD,IAAI8B,EAAazH,OAAOgF,EAAQkB,aAAaS,IAAQI,GAClC,KAAfU,GAAsBR,oBAAkBQ,IACxClH,KAAKmH,eAAeD,EAAYd,IAiBxD,MACJ,IAAK,YACDpG,KAAKgG,OAAOvB,EAAQwB,cAKpC9C,EAASjD,UAAUiH,eAAiB,SAAUD,EAAYd,GACtDpG,KAAKwD,SAAS4C,GAAOgB,MAAMC,UAAYH,EAIvC,IAAK,IAFDI,EADAC,KAEAC,EAAY,EACPxG,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,IACjChB,KAAK2F,aAAa3E,GAAGyG,MAAyC,KAA/BzH,KAAKwD,SAASxC,GAAG0G,UAI5C1H,KAAK2F,aAAa3E,GAAGyG,OAC1BH,EAAuC,eAArBtH,KAAK0F,YAA+B1F,KAAKwD,SAAS4C,GAAOuB,YAAc3H,KAAKwD,SAAS4C,GAAOwB,eAJ9GL,EAAgBC,GAAaxG,EAC7BwG,KAMRF,EAAuC,eAArBtH,KAAK0F,YAAgC1F,KAAK2D,QAAQ,GAAGgE,YAAc3H,KAAK2D,QAAQhD,OAAU2G,EACvGtH,KAAK2D,QAAQ,GAAGiE,aAAe5H,KAAK2D,QAAQhD,OAAU2G,EAI3D,IAAK,IADDO,IAFsC,eAArB7H,KAAK0F,YAA+B1F,KAAKqD,QAAQsE,YAAc3H,KAAKqD,QAAQuE,cAC3FN,EAAiC,EAAdtH,KAAKiE,QACKsD,EAAgB5G,OAC1C4F,EAAI,EAAGA,EAAIgB,EAAgB5G,OAAQ4F,IACxCvG,KAAKwD,SAAS+D,EAAgBhB,IAAIa,MAAMC,UAAYQ,EAAe,KAEvE7H,KAAKwD,SAAS4C,GAAOzB,UAAUmD,IAAInG,IAEvCwB,EAASjD,UAAU6H,UAAY,WAG3B,GAFA/H,KAAKgI,QAAUhI,KAAKqD,QAAQ4E,WAAU,GACtCjI,KAAKkI,cAAgBlI,KAAKqD,QAAQ8E,eAC7BnI,KAAKoI,cAAe,CACrBC,eAAarI,KAAKgI,UAAW,YAAa,QAAS9G,IACnD,IAAIoH,EAAqC,eAArBtI,KAAK0F,YAA+BvE,EAAkBC,EAC1EmH,YAAUvI,KAAKqD,SAAUiF,GAE7B,IACIE,EAAgB,SADTC,UAAQC,KAAKC,KACM,OAAS,GACvC3I,KAAKmF,YAAYnF,KAAKqD,QAASmF,GAC3BC,UAAQG,UACRL,YAAUvI,KAAKqD,SA/NT,qBAkOdF,EAASjD,UAAU2I,eAAiB,WAChC,OAAO7I,KAAK8I,kBAOhB3F,EAASjD,UAAU6I,cAAgB,WAC/B,MAAO,YAMX5F,EAASjD,UAAU8I,OAAS,WACnBhJ,KAAKoI,gBACNpI,KAAKiJ,sBACLjJ,KAAKmF,YAAYnF,KAAKqD,QAASrD,KAAKoF,UACpCpF,KAAKqF,UAAUrF,KAAKsF,SACpBtF,KAAKkJ,aAAalJ,KAAKmJ,UAAUnJ,KAAKqD,SAAUrD,KAAKoJ,SAASpJ,KAAKqD,WAEvErD,KAAK6F,gBAAgB7F,KAAKqD,SAC1BrD,KAAK8F,aAAa9F,KAAKqD,SACvBrD,KAAK+F,qBACL/F,KAAKqJ,kBACArJ,KAAKoI,eACNpI,KAAKgG,OAAOhG,KAAKiG,WAErBjG,KAAKsE,cAAe,EACpBtE,KAAKkG,cACLlG,KAAKsE,cAAe,EACpBgF,eAAaxB,IAAIyB,SAAU,mBAAoBvJ,KAAKwJ,gBAAiBxJ,MACrEA,KAAKyJ,iBACLC,OAAOC,iBAAiB,SAAU3J,KAAK4J,iBAAiBC,KAAK7J,OAAO,GACpEsJ,eAAaxB,IAAI9H,KAAKqD,QAAS,UAAWrD,KAAK8J,OAAQ9J,OAE3DmD,EAASjD,UAAUsJ,gBAAkB,SAAUO,GACtCA,EAAEzJ,OAAOqE,UAAUC,SAASpD,IAAekF,oBAAkB1G,KAAKgK,oBACnEhK,KAAKgK,iBAAiBrF,UAAUsF,OAAOlI,GACvC/B,KAAKgK,iBAAiBrF,UAAUsF,OAAOjI,KAG/CmB,EAASjD,UAAUgK,cAAgB,SAAUH,GACzC,IAAII,EACAC,EACAC,EAAe3D,oBAAkB1G,KAAKwF,eAhQ3B,EAgQ+DxF,KAAKwF,cAGnF,GAFA2E,EAAmC,eAArBnK,KAAK0F,YAA+B1F,KAAKsK,aAAa3C,YAAc3H,KAAKsK,aAAa1C,aACpGwC,EAAoC,eAArBpK,KAAK0F,YAA+B1F,KAAKuK,SAAS5C,YAAc3H,KAAKuK,SAAS3C,aACxF5H,KAAKsK,aAAalD,MAAMC,UAAUmD,QAAQ,KAAO,GAAKxK,KAAKuK,SAASnD,MAAMC,UAAUmD,QAAQ,KAAO,EAAI,CACxG,IAAIC,EAAoBzK,KAAK0K,oBAAoB1K,KAAKsK,cAClDK,EAAgB3K,KAAK0K,oBAAoB1K,KAAKuK,UAClDvK,KAAK4K,aAAeH,EAAoBE,EACxC3K,KAAK6K,WAAa7K,KAAK8K,yBAAyB9K,KAAK4K,aAAe,KACrD,YAAXb,EAAEgB,MAAwBrE,oBAAkBqD,EAAEiB,YAC3B,KAAdjB,EAAEiB,SAAiC,KAAdjB,EAAEiB,UAAoBZ,EAAe,GAC3DpK,KAAKsK,aAAalD,MAAMC,UAAaoD,EAAoB,EAAK,IAC9DzK,KAAKuK,SAASnD,MAAMC,UAAasD,EAAgB,EAAK,MAElC,KAAdZ,EAAEiB,SAAiC,KAAdjB,EAAEiB,UAAoBb,EAAc,IAC/DnK,KAAKsK,aAAalD,MAAMC,UAAaoD,EAAoB,EAAK,IAC9DzK,KAAKuK,SAASnD,MAAMC,UAAasD,EAAgB,EAAK,WAK9D3K,KAAK6K,WAAmC,eAArB7K,KAAK0F,YAAgC1F,KAAKsK,aAAa3C,YAAc3H,KAAKuK,SAAS5C,YAClG3H,KAAKsK,aAAa1C,aAAe5H,KAAKuK,SAAS3C,aACpC,YAAXmC,EAAEgB,MAAwBrE,oBAAkBqD,EAAEiB,YAC3B,KAAdjB,EAAEiB,SAAiC,KAAdjB,EAAEiB,UAAoBZ,EAAe,GAC3DpK,KAAKiL,qBACLjL,KAAKsK,aAAalD,MAAMC,UAAa8C,EAAcE,EAAgB,KACnErK,KAAKuK,SAASnD,MAAMC,UAAa+C,EAAeC,EAAgB,MAC3DD,EAAeC,EAAgB,OAEhB,KAAdN,EAAEiB,SAAiC,KAAdjB,EAAEiB,UAAoBb,EAAc,IAC/DnK,KAAKiL,qBACLjL,KAAKsK,aAAalD,MAAMC,UAAa8C,EAAcE,EAAgB,MAC9DF,EAAcE,EAAgB,KACnCrK,KAAKuK,SAASnD,MAAMC,UAAa+C,EAAeC,EAAgB,QAKhFlH,EAASjD,UAAU4J,OAAS,SAAUoB,GAClC,GAAIlL,KAAKwD,SAAS7C,OAAS,EAAG,CAC1B,IAAIyF,EAAQpG,KAAKmL,kBAAkBnL,KAAKgK,kBACpCoB,EAAsBpL,KAAKsK,aAAa3F,UAAUC,SAASjC,GAC3D0I,EAAqBrL,KAAKsK,aAAa3F,UAAUC,SAASlC,GAC1D4I,EAAsBtL,KAAKuK,SAAS5F,UAAUC,SAASjC,IAChC,eAArB3C,KAAK0F,aAAkD,KAAlBwF,EAAMF,SAAyC,eAArBhL,KAAK0F,aACpD,KAAlBwF,EAAMF,SACgB,eAArBhL,KAAK0F,aAAkD,KAAlBwF,EAAMF,SAAyC,eAArBhL,KAAK0F,aAAkD,KAAlBwF,EAAMF,YACtGK,IAAuBC,IAAwBF,GAAuB,IAAyBE,IACpG/B,SAASgC,cAAc5G,UAAUC,SAASpD,IAAexB,KAAK2F,aAAaS,GAAOoF,WAClFxL,KAAK2F,aAAaS,EAAQ,GAAGoF,WAC7BxL,KAAKkK,cAAcgB,GACnBlL,KAAKyL,gBAAgBP,IAEE,KAAlBA,EAAMF,SAAkBhL,KAAK2F,aAAaS,GAAOsF,aACtDnC,SAASgC,cAAc5G,UAAUC,SAASpD,KACrCxB,KAAKsK,aAAa3F,UAAUC,SAASjC,IAKtC3C,KAAK2L,OAAOvF,GACZmC,YAAUvI,KAAKgK,kBAAmBhI,KALlChC,KAAK4L,SAASxF,GACdmC,YAAUvI,KAAKgK,kBAAmBhI,OAalDmB,EAASjD,UAAU2L,eAAiB,SAAUC,GAC1C,GAAI9L,KAAK+L,oBAAqB,CAC1B,IAAIC,EAAOC,qBAAmBC,iBAK9BC,SAAOH,EAAMA,GAHTI,QAAQ,EACRC,OAAQ,OAGZrM,KAAKsM,QAAQ,qBAAsBN,GAC/BA,EAAKI,SAAW1F,oBAAkBsF,EAAKK,QACvCP,EAAQE,EAAKK,OAAOP,GAEdE,EAAKI,SACXN,EAAQG,qBAAmBM,eAAeP,EAAMF,IAGxD,OAAOA,GAEX3I,EAASjD,UAAU+I,oBAAsB,WAIrC,IAAK,IAHDuD,EACAV,EAEKW,EAAY,EAAGA,EAAYzM,KAAKmE,uBAAuBxD,OAAQ8L,IACpEX,EAAQ9L,KAAKqD,QAAQqJ,aAAa1M,KAAKmE,uBAAuBsI,IACzD/F,oBAAkBoF,KAGnB9L,KAFAwM,EAAMxM,KAAK2M,iBAAiB3M,KAAKmE,uBAAuBsI,KAE5CX,GAIpB,IAAK,IAAIc,EAAY,EAAGA,EAAY5M,KAAKqD,QAAQwJ,SAASlM,OAAQiM,IAC9D,IAAK,IAAIE,EAAW,EAAGA,EAAW9M,KAAKkE,oBAAoBvD,OAAQmM,IAE/D,GADAhB,EAAQ9L,KAAKqD,QAAQwJ,SAASD,GAAWF,aAAa1M,KAAKkE,oBAAoB4I,KAC1EpG,oBAAkBoF,GAAQ,CAE3BA,EAAiB,iBADjBU,EAAMxM,KAAK2M,iBAAiB3M,KAAKkE,oBAAoB4I,MACX,cAARN,EAAkC,SAAVV,EAAoBA,EAC1EpF,oBAAkB1G,KAAK2F,aAAaiH,MACpC5M,KAAK2F,aAAaiH,IACdnF,KAAM,GACNsF,IAAK,KACLC,IAAK,KACLC,QAAS,GACTzB,WAAW,EACXE,aAAa,EACb1E,WAAW,IAInB,IAAIkG,EAAUlN,KAAK2F,aAAaiH,GAAWJ,GAC/B,cAARA,GAA+B,gBAARA,GAAiC,cAARA,IAEhDxM,KAAK2F,aAAaiH,GAAWJ,GAAOV,IAEpCpF,oBAAkBwG,IAAwB,KAAZA,KAE9BlN,KAAK2F,aAAaiH,GAAWJ,GAAOV,KAMxD3I,EAASjD,UAAU0F,oBAAsB,cAClCuH,MAAM5J,KAAKvD,KAAKqD,QAAQwJ,UAAUO,QAAQ,SAAUC,GAAMC,SAAOD,KACpErN,KAAKuN,eAETpK,EAASjD,UAAUkI,YAAc,WAC7B,OAAOoF,cAAcxN,KAAKyN,kBAE9BtK,EAASjD,UAAUmJ,gBAAkB,WAajC,IAAK,IAZDqE,EAAa1N,KAAKwD,SAAS7C,OAC3BgN,KACAC,GACAnG,KAAM,GACNsF,IAAK,KACLC,IAAK,KACLC,QAAS,GACTzB,WAAW,EACXxE,WAAW,EACX0E,aAAa,EACbtG,SAAU,IAELpE,EAAI,EAAGA,EAAI0M,EAAY1M,IACxB0F,oBAAkB1G,KAAK2F,aAAa3E,IACpC2M,EAAe3M,GAAK4M,EAGpBD,EAAe3M,GAAKhB,KAAK2F,aAAa3E,GAG9ChB,KAAK6N,eAAgBlI,aAAgBgI,IAAkB,IAE3DxK,EAASjD,UAAU4N,WAAa,SAAUlB,EAAWmB,GACjD,OAAQ/N,KAAK2D,QAAQiJ,GAAWoB,cAAc,IAAM5L,EAAiB,IAAM2L,IAE/E5K,EAASjD,UAAUyM,iBAAmB,SAAUsB,GAC5C,OAAOA,EAAUd,MAAMc,EAAUC,YAAY,KAAO,IAExD/K,EAASjD,UAAU8F,OAAS,SAAUmI,GAClCA,EAAM5F,YAAUvI,KAAKqD,SAvbnB,SAuboCgF,eAAarI,KAAKqD,SAvbtD,UAybNF,EAASjD,UAAU8E,gBAAkB,SAAU3B,EAASoE,EAAMjB,GAC1D,IAAIY,EAAqB,UAAbZ,GAAyBtB,MAASkJ,aAAW3G,KAAYxC,OAAUmJ,aAAW3G,IAC1F4G,oBAAkBhL,EAAS+D,IAE/BjE,EAASjD,UAAU6F,mBAAqB,WACpC,IAAK,IAAIK,EAAQ,EAAGA,EAAQpG,KAAKwD,SAAS7C,OAAQyF,IACzB,eAArBpG,KAAK0F,YAA+B1F,KAAKgE,gBAAgBsK,KAAKtO,KAAKwD,SAAS4C,GAAOmI,wBAAwBrJ,OACvGlF,KAAKgE,gBAAgBsK,KAAKtO,KAAKwD,SAAS4C,GAAOmI,wBAAwBtJ,SAGnF9B,EAASjD,UAAUiF,YAAc,SAAU9B,EAASmL,GAC5CA,GACAjG,YAAUlF,GAAUmL,EAAUC,MAAMD,EAAUhE,QAAQ,MAAQ,EAAI,IAAM,OAGhFrH,EAASjD,UAAUwO,YAAc,SAAUpO,GACvCiI,YAAUoG,SAAO,IAAM9M,EAAYvB,IAAU2B,IAEjDkB,EAASjD,UAAU0O,YAAc,SAAUtO,IAClCoG,oBAAkB1G,KAAKsK,eAAiBtK,KAAKsK,aAAa3F,UAAUC,SAAS/B,KAC7E6D,oBAAkB1G,KAAKuK,WAAavK,KAAKuK,SAAS5F,UAAUC,SAAS/B,IACtEwF,eAAasG,SAAO,IAAM9M,EAAYvB,IAAU2B,IAGxDkB,EAASjD,UAAU4G,eAAiB,SAAUV,EAAOS,GACjD,IAAI+F,EACA5L,EAAIoF,EACRwG,EAAaxG,IAAWpG,KAAK2D,QAAc,OAAMyC,EAAQ,EAAKA,EAC9DkD,eAAaW,OAAOjK,KAAK2D,QAAQiJ,GAAY,YAAa5M,KAAK6O,aAC3DhI,GACAyC,eAAaxB,IAAI9H,KAAK2D,QAAQiJ,GAAY,YAAa5M,KAAK6O,YAAa7O,MACrEA,KAAK8O,gBACL9O,KAAK4O,YAAY5O,KAAK2D,QAAQiJ,IAC9BvE,eAAasG,SAAO,IAAM9M,EAAY7B,KAAK2D,QAAQiJ,KAAc3K,GACjEjC,KAAK2D,QAAQiJ,GAAWjI,UAAUmD,IAAIhG,GACrCsE,IAAWpG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAAS4C,GAAOzB,UAAUmD,IAAIjF,GACnE7C,KAAKwD,SAASoJ,GAAWjI,UAAUmD,IAAIjF,GAC3C7C,KAAK+O,qBAAqB/N,MAI9BhB,KAAK+O,qBAAqB/N,GAC1BhB,KAAK0O,YAAY1O,KAAK2D,QAAQiJ,IAC9B5M,KAAK2D,QAAQiJ,GAAWjI,UAAUsF,OAAOnI,GACxCsE,IAAWpG,KAAK2D,QAAc,OAAK3D,KAAKwD,SAAS4C,GAAOzB,UAAUsF,OAAOpH,GACtE7C,KAAKwD,SAASoJ,GAAWjI,UAAUsF,OAAOpH,KAGtDM,EAASjD,UAAU6G,uBAAyB,SAAUX,GAClD,IAAI4I,EACAC,EACArC,EACJA,EAAYxG,IAAWpG,KAAK2D,QAAc,OAAKyC,EAAQ,EAAKA,EAC5D4I,EAA+B,eAArBhP,KAAK0F,YAAgC1F,KAAK8N,WAAWlB,EAAWtK,GAActC,KAAK8N,WAAWlB,EAAWrK,GACnH0M,EAA+B,eAArBjP,KAAK0F,YAAgC1F,KAAK8N,WAAWlB,EAAWvK,GAAerC,KAAK8N,WAAWlB,EAAWpK,GACpHxC,KAAKkP,gBAAgBlP,KAAKwD,SAAS4C,GAAQA,GAC3CpG,KAAKmP,oBAAoBvC,EAAWqC,EAAQD,IAEhD7L,EAASjD,UAAUkP,cAAgB,SAAUC,EAAUC,GACnD,OAAOC,YAAU,IAAMD,EAAOtP,KAAK2D,QAAQ0L,IAAW,IAE1DlM,EAASjD,UAAUsP,kBAAoB,SAAUpJ,EAAOgJ,EAAeK,GACnE,IAAK/I,oBAAkBN,GAAQ,CAC3B,IACIsJ,EAAgBtJ,IAAUpG,KAAK2D,QAAQhD,OACvC0O,EAAWK,EAAetJ,EAAQ,EAAIA,IACrCsJ,GAAgB1P,KAAKwD,SAAS4C,EAAQ,GAAGzB,UAAUC,SAASjC,IAA4B,IAAVyD,EACnEpG,KAAKoP,cAAcC,EAAW,EAAGI,GAGjC,EAAiBzP,KAAKoP,cAAcC,EAAUI,GAAgBzP,KAAKoP,cAAcC,EAAUD,IAEjGO,UAGlBxM,EAASjD,UAAUgG,YAAc,SAAUE,GACvC,IAAI9C,EAAQtD,KACZ,GAAK0G,oBAAkBN,KAAUpG,KAAK2F,aAAaS,GAAOY,YACnDN,oBAAkB1G,KAAKwD,SAAS4C,GAAOzB,UAAUC,SAASjC,IADjE,CAKA,GADA3C,KAAKuE,YAAa,EACbmC,oBAAkBN,GA4ClB,CACD,IAAK,IAAIwJ,EAAI,EAAGA,EAAI5P,KAAKwD,SAAS7C,OAAQiP,KACjClJ,oBAAkB1G,KAAK2F,aAAaiK,KAAO5P,KAAK2F,aAAaiK,GAAG5I,WACjEhH,KAAKwP,kBAAkBI,EAAG5P,KAAK6P,eAAeT,cAAepP,KAAK6P,eAAeJ,cAGzF,IAASG,EAAI5P,KAAKwD,SAAS7C,OAAS,EAAGiP,GAAK,EAAGA,IAC3C,IAAKlJ,oBAAkB1G,KAAK2F,aAAaiK,KAAO5P,KAAK2F,aAAaiK,GAAG5I,YAChEhH,KAAKwD,SAASoM,GAAGjL,UAAUC,SAASjC,GAAgB,CACrD,IAAIyM,EAAqC,eAArBpP,KAAK0F,YAA+BrD,EAAcG,EACtE,GAAU,IAANoN,EAAS,CACO5P,KAAKoP,cAAcQ,EAAI,EAAGR,GAChCO,QAEd,IAAK3P,KAAKuK,SAAS5F,UAAUC,SAASjC,GAAgB,CAClC3C,KAAKoP,cAAcQ,EAAI,EAAGR,GAChCO,cA5DK,CAC3B3P,KAAKsE,cAAe,EACpB,IACIoL,EAAgBtJ,IAAUpG,KAAK2D,QAAQhD,OACvC0O,EAAWK,EAAetJ,EAAQ,EAAIA,EAQtC0J,GAAYxP,QAPXoP,GAAgB1P,KAAKwD,SAAS4C,EAAQ,GAAGzB,UAAUC,SAASjC,IAA4B,IAAVyD,EACnEpG,KAAKoP,cAAcC,EAAW,EAAGrP,KAAK6P,eAAeJ,cAGrD,EAAiBzP,KAAKoP,cAAcC,EAAUrP,KAAK6P,eAAeJ,cAC1EzP,KAAKoP,cAAcC,EAAUrP,KAAK6P,eAAeT,gBAGrDW,EAAY/P,KAAKgQ,aAAaF,GAClC9P,KAAKsM,QAAQ,iBAAkByD,EAAW,SAAUE,GAChD,IAAKA,EAAmB7D,OAAQ,CAC5B,IAAI8D,KACJA,EAAe,GAAK9J,EAEpB,IAAK,IADDG,EAAI,EACCvF,EAAI,EAAGA,EAAIsC,EAAME,SAAS7C,OAAQK,IACnCsC,EAAME,SAASxC,GAAG2D,UAAUC,SAASjC,KACrCuN,EAAe3J,GAAKvF,EACpBuF,KAGR2J,EAAiBA,EAAeC,OAChC7M,EAAMkM,kBAAkBpJ,EAAO9C,EAAMuM,eAAeT,cAAe9L,EAAMuM,eAAeJ,cACxF,IAASzO,EAAI,EAAGA,EAAIkP,EAAevP,OAAQK,IAClCsC,EAAME,SAAS0M,EAAelP,IAAI2D,UAAUC,SAASjC,IACtDW,EAAMkM,kBAAkBU,EAAelP,GAAIsC,EAAMuM,eAAeT,cAAe9L,EAAMuM,eAAeJ,cAG5G,IAASzO,EAAIkP,EAAevP,OAAQK,EAAI,EAAGA,IACvC,IAAKsC,EAAME,SAAS0M,EAAelP,EAAI,IAAI2D,UAAUC,SAASjC,GAAgB,CAC1E,IAAIoL,EAAczK,EAAMuM,eACxBvM,EAAMkM,kBAAkBU,EAAelP,EAAI,GAAI+M,EAAYqB,cAAerB,EAAY0B,cAG9F,IAAIW,EAAoB9M,EAAM+M,YAAYP,GAC1CxM,EAAMgJ,QAAQ,YAAa8D,GAC3B9M,EAAMgB,cAAe,KAyBjCtE,KAAKuE,YAAa,IAEtBpB,EAASjD,UAAU2P,aAAe,WAE9B,OADA7P,KAAKsQ,oBACIlB,cAAqC,eAArBpP,KAAK0F,YAAgCpD,EAAaC,EACvEkN,aAAoC,aAArBzP,KAAK0F,YAA8BlD,EAAaH,IAGvEc,EAASjD,UAAU+G,kBAAoB,SAAUb,GACxCM,oBAAkB1G,KAAK2F,aAAaS,KAAYM,oBAAkB1G,KAAK2F,aAAaS,GAAOY,aACzFhH,KAAKwD,SAAS4C,GAAOzB,UAAUC,SAASjC,IAC3C3C,KAAKwP,kBAAkBpJ,EAAOpG,KAAK6P,eAAeJ,aAAczP,KAAK6P,eAAeT,gBAG5FjM,EAASjD,UAAUmF,UAAY,SAAUC,GACrCA,EAAU+C,eAAarI,KAAKqD,SAAUnB,GAAYqG,YAAUvI,KAAKqD,SAAUnB,IAE/EiB,EAASjD,UAAUqF,iBAAmB,SAAUkC,GAG5C,IAAK,IAFD8I,EAAY7J,oBAAkBe,GAAQ,OAASA,EAAO,KACtD+I,EAAiC,eAArBxQ,KAAK0F,YAA+BjE,EAAcC,EACzD0E,EAAQ,EAAGA,EAAQpG,KAAK2D,QAAQhD,OAAQyF,IAAS,CACtD,IAAIqK,EAAWlB,YAAU,IAAMiB,EAAWxQ,KAAKqD,SAAS+C,GACpDsK,EAAYnB,YAAU,IAAM1N,EAAY4O,GAAU,GAC7B,eAArBzQ,KAAK0F,aACL+K,EAASrJ,MAAMlC,MAAQqL,EAClB7J,oBAAkBgK,KACnBA,EAAUtJ,MAAMlC,MAAQqL,KAI5BE,EAASrJ,MAAMnC,OAASsL,EACnB7J,oBAAkBgK,KACnBA,EAAUtJ,MAAMnC,OAASsL,MAKzCpN,EAASjD,UAAUuF,kBAAoB,SAAUC,GAC7C,IAAIiL,EAA6B,aAAhBjL,EACjB1F,KAAKqD,QAAQsB,UAAUsF,OAAO0G,EAAaxP,EAAkBC,GAC7DpB,KAAKqD,QAAQsB,UAAUmD,IAAI6I,EAAavP,EAAgBD,GACxD,IAAK,IAAIiF,EAAQ,EAAGA,EAAQpG,KAAKwD,SAAS7C,OAAQyF,IAC9CpG,KAAKwD,SAAS4C,GAAOzB,UAAUsF,OAAO0G,EAAarP,EAAeC,GAClEvB,KAAKwD,SAAS4C,GAAOzB,UAAUmD,IAAI6I,EAAapP,EAAeD,GAEnE,IAAS8E,EAAQ,EAAGA,EAAQpG,KAAK2D,QAAQhD,OAAQyF,IAC7CkH,SAAOtN,KAAK2D,QAAQyC,IAExBpG,KAAK2D,WACL3D,KAAK8F,aAAa9F,KAAKqD,UAE3BF,EAASjD,UAAU0Q,eAAiB,SAAUC,EAAYC,GAEtD,OADc9Q,KAAK+Q,aAAaF,EAAW1I,cAAc0E,UAAUiE,IAGvE3N,EAASjD,UAAU6Q,aAAe,SAAUC,GAExC,IAAK,IADDC,KACKjQ,EAAI,EAAGA,EAAIgQ,EAAWrQ,OAAQK,IAC/BgQ,EAAWhQ,GAAG2D,UAAUC,SAASvD,IACjC4P,EAAS3C,KAAK0C,EAAWhQ,IAGjC,OAAOiQ,GAEX9N,EAASjD,UAAUgR,YAAc,SAAUL,EAAYM,GACnD,OAAOnR,KAAK4Q,eAAeC,GAAcM,EAAQ,OAErDhO,EAASjD,UAAUkR,YAAc,SAAUP,EAAYM,GACnD,OAAOnR,KAAK4Q,eAAeC,GAAeM,EAAQ,GAAK,EAAK,IAEhEhO,EAASjD,UAAUmR,oBAAsB,SAAUC,GAC/C,IAAIf,EAAY7J,oBAAkB1G,KAAKwF,eAAiB,MAAQxF,KAAKwF,cAAgB,KAChE,eAArBxF,KAAK0F,YAAgC4L,EAAclK,MAAMlC,MAAQqL,EAAae,EAAclK,MAAMnC,OAASsL,GAE/GpN,EAASjD,UAAUqR,iBAAmB,SAAUV,GAC5C,IAAIS,EAAgBtR,KAAKwR,cAAc,OACvCjJ,YAAU+I,IAAiBzP,EAvpBrB,YAwpBN7B,KAAKqR,oBAAoBC,GACzBT,EAAWY,YAAYH,IAE3BnO,EAASjD,UAAUiJ,UAAY,SAAU7I,GACxBN,KAAKiF,OAElB,MADiC,KAAxB3E,EAAO8G,MAAMnC,QAAiC,SAAhBjF,KAAKiF,OAAoB3E,EAAO8G,MAAMnC,OAASjF,KAAKiF,QAG/F9B,EAASjD,UAAUkJ,SAAW,SAAU9I,GACxBN,KAAKkF,MAEjB,MAD+B,KAAvB5E,EAAO8G,MAAMlC,OAA+B,SAAflF,KAAKkF,MAAmB5E,EAAO8G,MAAMlC,MAAQlF,KAAKkF,OAG3F/B,EAASjD,UAAUgJ,aAAe,SAAUjE,EAAQC,GAChDmJ,oBAAkBrO,KAAKqD,SAAW4B,OAAUA,EAAQC,MAASA,KAEjE/B,EAASjD,UAAUiP,oBAAsB,SAAU/I,EAAO6I,EAAQD,GACzDtI,oBAAkB1G,KAAK2F,aAAaS,KAChCM,oBAAkB1G,KAAK2F,aAAaS,GAAOsF,eAC5C1L,KAAK2F,aAAaS,GAAOsF,YAAcrD,eAAa2G,IAAUvM,IAAc8F,YAAUyG,IAAUvM,IAC3FiE,oBAAkB1G,KAAK2F,aAAaS,EAAQ,MAC7CpG,KAAK2F,aAAaS,EAAQ,GAAGsF,YAAcrD,eAAa4G,IAAUxM,IAAc8F,YAAU0G,IAAUxM,KAEnGiE,oBAAkB1G,KAAK2F,aAAaS,EAAQ,KACxCpG,KAAK2F,aAAaS,EAAQ,GAAc,cACzCpG,KAAK2F,aAAaS,EAAQ,GAAGsF,YAAcrD,eAAa4G,IAAUxM,IAAc8F,YAAU0G,IAAUxM,OAMxHU,EAASjD,UAAUwR,gBAAkB,WACR,eAArB1R,KAAK0F,aACL1F,KAAK2R,UAAYrP,EACjBtC,KAAK4R,WAAavP,IAGlBrC,KAAK2R,UAAYpP,EACjBvC,KAAK4R,WAAapP,IAG1BW,EAASjD,UAAU2R,gBAAkB,SAAU7Q,GAC3C,IAAIwP,EAAYxQ,KAAKwR,cAAc,OACnCxR,KAAK2D,QAAQ2K,KAAKkC,GAClB,IAAIvB,EAASjP,KAAKwR,cAAc,UAC5BxC,EAAShP,KAAKwR,cAAc,UAChCvC,EAAO6C,aAAa,WAAY,MAChC9C,EAAO8C,aAAa,WAAY,MAChC7C,EAAO6C,aAAa,aAAc,qBAClC9C,EAAO8C,aAAa,aAAc,qBAClC7C,EAAO6C,aAAa,OAAQ,UAC5B9C,EAAO8C,aAAa,OAAQ,UAC5B,IAAIrK,EACAsK,EA+BJ,OA9BAtK,EAAOf,oBAAkB1G,KAAKwF,eAAiB,MAAQxF,KAAKwF,cAAgB,KACnD,eAArBxF,KAAK0F,aACL1F,KAAK0R,kBACLnJ,YAAUyG,IAAU5M,EAAgBE,EAAYG,IAChD8F,YAAU0G,IAAU7M,EAAgBC,EAAaI,IACjD8F,YAAUiI,IAAahP,EAAWC,IAClC+O,EAAUpJ,MAAMlC,MAAQuC,IAGxBc,YAAU0G,IAAU7M,EAAgBI,EAAYC,IAChD8F,YAAUyG,IAAU5M,EAAgBG,EAAUE,IAC9C8F,YAAUiI,IAAahP,EAAWE,IAClC1B,KAAK0R,kBACLlB,EAAUpJ,MAAMnC,OAASwC,GAE7BzH,KAAKgS,gBAAgBxB,GACrBA,EAAUiB,YAAYzC,GACtBhP,KAAKuR,iBAAiBf,GACtBA,EAAUiB,YAAYxC,GACtBjP,KAAKmP,oBAAoBnO,EAAGiO,EAAQD,GACpCwB,EAAUsB,aAAa,WAAY,KACnCC,EAAQ/R,KACRwQ,EAAU7G,iBAAiB,QAAS,WAChC6G,EAAU7L,UAAUmD,IAAI9F,GACxB+P,EAAM/H,iBAAmBwG,EACzBuB,EAAME,mBAEVzB,EAAU7G,iBAAiB,OAAQ,WAC/B6G,EAAU7L,UAAUsF,OAAOjI,KAExBwO,GAEXrN,EAASjD,UAAU6O,qBAAuB,SAAU3I,GAChDpG,KAAKiS,iBACLjS,KAAK8O,cAAgB9O,KAAKwD,SAAS4C,GAAOzB,UAAUmD,IAAIjF,GAAkB7C,KAAKwD,SAAS4C,GAAOzB,UAAUsF,OAAOpH,IAEpHM,EAASjD,UAAU4F,aAAe,SAAUxF,GACxC,IAGIkQ,EACAuB,EAJAzO,EAAQtD,KACR0N,EAAa1N,KAAKwD,SAAS7C,OAC3BuR,EAAY5R,EAAOuM,SAGvB,GAAI7M,KAAKoI,cACL,IAAK,IAAI7B,EAAI,EAAGA,EAAIvG,KAAKqD,QAAQwJ,SAASlM,OAAQ4F,IAC1CvG,KAAKqD,QAAQwJ,SAAStG,GAAG5B,UAAUC,SAASpD,IAC5CxB,KAAK2D,QAAQ2K,KAAKtO,KAAKqD,QAAQwJ,SAAStG,IAIpD,IAAK,IAAIvF,EAAI,EAAGA,EAAI0M,EAAY1M,IAC5B,GAAIA,EAAI0M,EAAa,GAiCjB,GAhCK1N,KAAKoI,gBACNoI,EAAYxQ,KAAK6R,gBAAgB7Q,GACjCqN,oBAAkBmC,GAAaW,MAAc,EAAJnQ,EAAS,IAClDhB,KAAK0D,eAAe4K,KAAU,EAAJtN,EAAS,GACnCkR,EAAUlR,GAAGmR,WAAWV,YAAYjB,GACpCxQ,KAAKgK,iBAAmBwG,EACxBA,EAAUsB,aAAa,OAAQ,aAC/BtB,EAAUsB,aAAa,mBAAoB9R,KAAK0F,YAAY0M,gBAE5DpS,KAAKoI,gBACL2J,EAAQ/R,KACRwQ,EAAYxQ,KAAK2D,QAAQ3C,GACzBhB,KAAK0R,mBAEJ1R,KAAKoI,eACNpI,KAAKqS,kBAELrS,KAAKoI,gBAAkB1B,oBAAkB8J,KACzCxQ,KAAKgK,iBAAmBwG,EACxBxQ,KAAKgS,gBAAgBxB,GACrBxQ,KAAKqS,kBACL7B,EAAU7G,iBAAiB,QAAS,WAC5BJ,SAASgC,cAAc5G,UAAUC,SAAS,iBAC1CmN,EAAM/H,iBAAmBT,SAASgC,cAClCwG,EAAM/H,iBAAiBrF,UAAUmD,IAAI9F,IAEzCsB,EAAM2O,mBAEVzB,EAAU7G,iBAAiB,OAAQ,WAC/BoI,EAAM/H,iBAAiBrF,UAAUsF,OAAOjI,OAG3C0E,oBAAkB8J,GACnB,GAAIxQ,KAAK8O,cAAe,CACpBxF,eAAaxB,IAAI0I,EAAW,YAAaxQ,KAAK6O,YAAa7O,MAC3D,IAAIsS,EAAmC,SAAtB7J,UAAQC,KAAKC,KAAmB,cAAgB,aACjEW,eAAaxB,IAAI0I,EAAW8B,EAAWtS,KAAK6O,YAAa7O,MACzDwQ,EAAU7L,UAAUmD,IAAIhG,GACxB9B,KAAK+O,qBAAqB/N,QAG1BuH,YAAUoG,SAAO,IAAM9M,EAAY2O,IAAavO,QAKpDuO,GACAjI,YAAUiI,GApyBf,cAsyBK9C,EAAa,GACb1N,KAAK+O,qBAAqB/N,GAItC,GAA0B,SAAtByH,UAAQC,KAAKC,KAER,CAAA,IADD4J,EAASvS,KAAKqD,QAAQmP,iBAAiB,iCAC3C,IAASxR,EAAI,EAAGA,EAAIuR,EAAO5R,OAAQK,IAAK,CACpC,IAAIyR,EAAU/L,oBAAkB1G,KAAKwF,eAAiB,EAAIxF,KAAKwF,cAC/D+M,EAAOvR,GAAGoG,MAAMsL,YAAcD,EAAU,EAAI,KAC5CF,EAAOvR,GAAGoG,MAAMuL,aAAeF,EAAU,EAAI,QAIzDtP,EAASjD,UAAU4O,YAAc,WAC7B,IAAItD,GAAY,EAQhB,QAPM9E,oBAAkB1G,KAAK2F,aAAa3F,KAAK4S,0BAC3C5S,KAAK2F,aAAa3F,KAAK4S,wBAAwBpH,YAC9C9E,oBAAkB1G,KAAK2F,aAAa3F,KAAK6S,sBAC1C7S,KAAK2F,aAAa3F,KAAK6S,oBAAoBrH,WAC3C9E,oBAAkB1G,KAAK2F,aAAa3F,KAAK6S,wBACzCrH,GAAY,GAETA,GAEXrI,EAASjD,UAAU8R,gBAAkB,SAAUxB,GAC3C,IACIsC,EACAC,EAFAzP,EAAQtD,KAGZwQ,EAAU7G,iBAAiB,aAAc,WAErCmJ,EAAQE,WAAW,WAAczK,YAAUiI,IAAazO,KAAsBuB,EAAMc,cAExFoM,EAAU7G,iBAAiB,aAAc,WACrCsJ,aAAaH,GACbzK,eAAamI,IAAazO,MAE9ByO,EAAU7G,iBAAiB,WAAY,WACnCsJ,aAAaF,KAEjBvC,EAAU7G,iBAAiB,YAAa,WAEpCoJ,EAAeC,WAAW,WAAczK,YAAUiI,IAAazO,KAAsBuB,EAAMc,eAGnGjB,EAASjD,UAAUgT,aAAe,SAAUnJ,GACxC,OAAQA,EAAES,QAAQ,UAAY,EAAK,QAAU,SAEjDrH,EAASjD,UAAUiT,uBAAyB,SAAU7S,GAClDN,KAAKgK,iBAAmBhK,KAAKoT,YAAY9S,GAAUA,EAAO6H,cAAgB7H,GAE9E6C,EAASjD,UAAUkT,YAAc,SAAU9S,GACvC,OAASA,EAAOqE,UAAUC,SAAS/C,KAAevB,EAAOqE,UAAUC,SAASpD,IAEhF2B,EAASjD,UAAUmT,aAAe,SAAUtJ,GACxC,IAAIuJ,GAAU,EAKd,OAJkC,UAA9BtT,KAAKkT,aAAanJ,EAAEgB,QAAuBrE,oBAAkBqD,EAAEwJ,cAC1B,UAArCvT,KAAKkT,aAAanJ,EAAEwJ,gBACpBD,GAAU,GAEPA,GAEXnQ,EAASjD,UAAUsT,qBAAuB,SAAUzJ,EAAGgB,GACnD,GAAI/K,KAAKqT,aAAatJ,GAClB/J,KAAKyT,mBAAoBC,EAAG3J,EAAE4J,MAAOC,EAAG7J,EAAE8J,OAAS9I,OAElD,CACD,IAAI+I,EAAkC,SAAtBrL,UAAQC,KAAKC,KAAkBoB,EAAEgK,QAAQ,GAAKhK,EAC9D/J,KAAKyT,mBAAoBC,EAAGI,EAAUH,MAAOC,EAAGE,EAAUD,OAAS9I,KAG3E5H,EAASjD,UAAUuT,kBAAoB,SAAUO,EAAajJ,GAC7C,aAATA,EACA/K,KAAK4D,oBAAsBoQ,EAG3BhU,KAAK6D,mBAAqBmQ,GAGlC7Q,EAASjD,UAAU0J,iBAAmB,WAGlC,IAAK,IAFDtG,EAAQtD,KACRiU,EAAYjU,KAAKwD,SAAS7C,OACrBK,EAAI,EAAGA,EAAIiT,EAAWjT,IAI3B,GAHI0F,oBAAkB1G,KAAK2F,aAAa3E,GAAGyG,OACvCzH,KAAKwD,SAASxC,GAAG2D,UAAUsF,OAAOtI,GAElCsS,EAAY,IAAMjT,EAAG,CACChB,KAAKqD,QAAQmP,iBAAiB,IAAM7Q,GAAahB,SAC/CsT,GACpB5L,eAAarI,KAAKwD,SAASxC,IAAKW,GAI5CqR,WAAW,WAAc1P,EAAM4Q,sBAAyB,MAE5D/Q,EAASjD,UAAUgU,mBAAqB,WAKpC,IAAK,IAJDrJ,EAAa,EACbtD,KACAC,EAAY,EACZqF,EAAW7M,KAAKqD,QAAQwJ,SACnB7L,EAAI,EAAGA,EAAI6L,EAASlM,OAAQK,IACjC6J,GAAmC,eAArB7K,KAAK0F,YAA+BmH,EAAS7L,GAAG2G,YAC1DkF,EAAS7L,GAAG4G,aAKf,IAHDuM,EAA4B,eAArBnU,KAAK0F,YAAgC1F,KAAKqD,QAAQsE,YACxD3H,KAAK2D,QAAQ,GAAGgE,YAAc3H,KAAK2D,QAAQhD,OAAWkK,EACtD7K,KAAKqD,QAAQuE,aAAgB5H,KAAK2D,QAAQ,GAAGiE,aAAe5H,KAAK2D,QAAQhD,OAAWkK,EACzF,IAAS7J,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,IACjChB,KAAK2F,aAAa3E,GAAGyG,MAAyC,KAA/BzH,KAAKwD,SAASxC,GAAG0G,YACjDH,EAAgBC,GAAaxG,EAC7BwG,KAIR,IAAK,IADDK,EAAesM,EAAO5M,EAAgB5G,OACjC4F,EAAI,EAAGA,EAAIgB,EAAgB5G,OAAQ4F,IACxCvG,KAAKwD,SAAS+D,EAAgBhB,IAAIa,MAAMC,UAAiC,eAArBrH,KAAK0F,YACpD1F,KAAKwD,SAAS+D,EAAgBhB,IAAIoB,YAAcE,EAAgB,KAChE7H,KAAKwD,SAAS+D,EAAgBhB,IAAIqB,aAAeC,EAAgB,MAG9E1E,EAASjD,UAAUkU,iBAAmB,WAClC9K,eAAaxB,IAAIyB,SAAU,YAAavJ,KAAKqU,YAAarU,MAC1DsJ,eAAaxB,IAAIyB,SAAU,UAAWvJ,KAAKsU,UAAWtU,MACtD,IAAIuU,EAAwC,SAAtB9L,UAAQC,KAAKC,KAAmB,cAAgB,YAClE6L,EAAuC,SAAtB/L,UAAQC,KAAKC,KAAmB,YAAc,WACnEW,eAAaxB,IAAIyB,SAAUgL,EAAgBvU,KAAKqU,YAAarU,MAC7DsJ,eAAaxB,IAAIyB,SAAUiL,EAAexU,KAAKsU,UAAWtU,OAE9DmD,EAASjD,UAAUuU,mBAAqB,WACpC/K,OAAOgL,oBAAoB,SAAU1U,KAAK4J,iBAAiBC,KAAK7J,OAChE,IAAIuU,EAAwC,SAAtB9L,UAAQC,KAAKC,KAAmB,cAAgB,YAClE6L,EAAuC,SAAtB/L,UAAQC,KAAKC,KAAmB,YAAc,WACnEW,eAAaW,OAAOV,SAAU,YAAavJ,KAAKqU,aAChD/K,eAAaW,OAAOV,SAAU,UAAWvJ,KAAKsU,WAC9ChL,eAAaW,OAAOV,SAAUgL,EAAgBvU,KAAKqU,aACnD/K,eAAaW,OAAOV,SAAUiL,EAAexU,KAAKsU,YAEtDnR,EAASjD,UAAUmS,gBAAkB,WACjC/I,eAAaxB,IAAI9H,KAAKgK,iBAAkB,mBAAoBhK,KAAK2U,aAAc3U,OAEnFmD,EAASjD,UAAUyU,aAAe,SAAU5K,GACxC,IAAKA,EAAEzJ,OAAOqE,UAAUC,SAASxC,GAAiB,CAC9C,IAAIwS,EAAYrF,YAAU,IAAMrO,EAAO,OAASM,EAAY,IAAMO,GAC9D6S,EAAUjU,OAAS,GACnB0H,cAAYuM,EAAW7S,GAE3BgI,EAAEzJ,OAAOqE,UAAUmD,IAAI/F,GAE3B,IAAI8S,EAAO9K,EAAEzJ,QACTuU,EAAKlQ,UAAUC,SAAStC,IAAeuS,EAAKlQ,UAAUC,SAASrC,KAC/DvC,KAAK8U,eAAe/K,IAEpB8K,EAAKlQ,UAAUC,SAASvC,IAAgBwS,EAAKlQ,UAAUC,SAASpC,KAChExC,KAAK+U,aAAahL,IAG1B5G,EAASjD,UAAU6U,aAAe,SAAUhL,GACxC,IAAIzG,EAAQtD,KACZA,KAAKgV,gBAAgBjL,GACrB,IAAIgG,EAAY/P,KAAKgQ,aAAajG,GAC9B/J,KAAKuE,WACLvE,KAAKsM,QAAQ,eAAgByD,EAAW,SAAUkF,GACzCA,EAAiB7I,QAClB9I,EAAM4R,WAAWnL,GAErB,IAAIoL,EAAkB7R,EAAM+M,YAAYtG,GACxCzG,EAAMgJ,QAAQ,WAAY6I,KAI9BnV,KAAKkV,WAAWnL,IAGxB5G,EAASjD,UAAUgV,WAAa,SAAUnL,GACtC,IAAIqL,EAAgBpV,KAAKqD,QAAQmP,iBAAiB,IAAM7P,GAAehC,OACnE0U,GAAerV,KAAKsK,aAAa3F,UAAUC,SAASjC,IACpD3C,KAAKsK,aAAa3F,UAAUC,SAASjD,KAAiB3B,KAAKuK,SAAS5F,UAAUC,SAASjC,KACtF3C,KAAKuK,SAAS5F,UAAUC,SAASlC,IAAgB1C,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASvD,KACrGrB,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjD,MAAkByT,IAAkBpV,KAAKwD,SAAS7C,OAAS,GAChH4U,GAAiB5S,EAAeC,GAC/B5C,KAAKsK,aAAa3F,UAAUC,SAASjC,IAUtC0F,eAAarI,KAAKsK,cAAeiL,GACjClN,eAAarI,KAAKuK,UAAW7H,GACzB1C,KAAKuE,YACLvE,KAAKwV,mBAAmBxV,KAAKyV,eAAe,KAZhDpN,eAAarI,KAAKuK,UAAW7H,GAC7B2F,eAAarI,KAAKsK,cAAeiL,GACjChN,YAAUvI,KAAKsK,cAAe5H,GAC9B6F,YAAUvI,KAAKuK,UAAWgL,GACtBvV,KAAKuE,YACLvE,KAAKwV,mBAAmBxV,KAAK0V,eAAe,IAUpD1V,KAAK2V,oBAAoB5L,GACzB/J,KAAKsK,aAAawH,aAAa,gBAAiB,QAChD9R,KAAKuK,SAASuH,aAAa,gBAAiB,SAC5C9R,KAAK4V,eAAe5V,KAAK6V,oBACrBR,IACArV,KAAKsK,aAAa3F,UAAUsF,OAAOvH,GACnC1C,KAAKsK,aAAalD,MAAM0O,SAAW,KAG3C3S,EAASjD,UAAU2V,iBAAmB,WAElC,IAAK,IADDE,GAAa,EACR/U,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,KACjChB,KAAKwD,SAASxC,GAAG2D,UAAUC,SAASjC,IAAkBoT,IAEnDA,IADA/V,KAAKwD,SAASxC,GAAG2D,UAAUC,SAASjD,IAQhD,OAAOoU,GAEX5S,EAASjD,UAAU0V,eAAiB,SAAUI,GAE1C,IAAK,IADDC,EAAQjW,KAAKwD,SACRxC,EAAI,EAAGA,EAAIiV,EAAMtV,OAAQK,IAC1BiV,EAAMjV,GAAG2D,UAAUC,SAASlC,GAC5BuT,EAAMjV,GAAGoG,MAAM0O,SAAW,IAErBG,EAAMjV,GAAG2D,UAAUC,SAASjC,GACjCsT,EAAMjV,GAAGoG,MAAM0O,SAAW,IAG1BG,EAAMjV,GAAGoG,MAAM0O,SAAW,GAE1BE,IAAWhW,KAAKuK,SAAS5F,UAAUC,SAASjC,KAC5C3C,KAAKuK,SAASnD,MAAM0O,SAAW,MAI3C3S,EAASjD,UAAUgW,kBAAoB,SAAUC,EAAWpI,GACxDxF,YAAUoG,SAAO,IAAMZ,EAAaoI,IAAa1T,IAErDU,EAASjD,UAAUkW,kBAAoB,SAAUD,EAAWpI,GACxD1F,eAAasG,SAAO,IAAMZ,EAAaoI,IAAa1T,IAExDU,EAASjD,UAAUmW,sBAAwB,SAAUtM,GACjD/J,KAAKsQ,mBACDtQ,KAAKsK,aAAa3F,UAAUC,SAASjC,KAAmB3C,KAAKuK,SAAS5F,UAAUC,SAASjC,IACzF4F,YAAUwB,EAAEzJ,QAASmC,GACjBzC,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACtC1L,KAAKsW,qBAETtW,KAAK8G,eAAe9G,KAAKuW,iBAAiB,IACtCvW,KAAKsK,aAAa3F,UAAUC,SAASjC,IAAmB3C,KAAKuK,SAAS5F,UAAUC,SAASjC,IACxF3C,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACvC1L,KAAKkW,kBAAkBlW,KAAKwW,QAASxW,KAAK4R,YAE1C5R,KAAKsK,aAAamM,yBAA2BzW,KAAKsK,aAAamM,uBAAuB9R,UAAUC,SAASjC,KACrG3C,KAAKsK,aAAa3F,UAAUC,SAASjC,IAAkB3C,KAAK2F,aAAa3F,KAAKyV,eAAe/J,YAC7F1L,KAAKoW,kBAAkBpW,KAAKwW,QAASxW,KAAK2R,WAEpC3R,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aAC5C1L,KAAKkW,kBAAkBlW,KAAKwW,QAASxW,KAAK2R,YAG7CjL,oBAAkB1G,KAAKwW,WACxBxW,KAAK8G,eAAe9G,KAAKuW,gBAAkB,GAAG,GAC9CvW,KAAKkW,kBAAkBlW,KAAKwW,QAASxW,KAAKsP,QAEzCtP,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACvC1L,KAAKkW,kBAAkBlW,KAAKgK,iBAAkBhK,KAAK4R,aAGjD5R,KAAK0W,cAAcC,mBAAsB3W,KAAK0W,cAAcE,mBAClE5W,KAAK8G,eAAe9G,KAAKuW,iBAAiB,GACrCvW,KAAK0W,cAAcG,gBAAgBlS,UAAUC,SAASjC,IACvD3C,KAAK8G,eAAe9G,KAAKuW,gBAAkB,GAAG,GAE7CvW,KAAK2F,aAAa3F,KAAKuW,iBAAiB7K,aACzCnD,YAAUwB,EAAEzJ,QAASmC,GAErBzC,KAAKsK,cAAuC,IAAvBtK,KAAKyV,eAAwBzV,KAAK2F,aAAa3F,KAAKyV,eAA0B,aACnGzV,KAAKoW,kBAAkBpW,KAAKgK,iBAAkBhK,KAAK2R,WAEnD3R,KAAKuK,UAAYvK,KAAK0V,gBAAkB1V,KAAKwD,SAAS7C,OAAS,GAAMX,KAAK2F,aAAa3F,KAAK0V,eAA0B,aACtH1V,KAAKoW,kBAAkBpW,KAAK8W,WAAW9W,KAAK0V,eAAgB1V,KAAK4R,aAE/D5R,KAAKsK,aAAa3F,UAAUC,SAASjC,IAAmB3C,KAAK2F,aAAa3F,KAAK0V,eAAehK,aAChG1L,KAAKoW,kBAAkBpW,KAAKgK,iBAAkBhK,KAAK4R,YAElDlL,oBAAkB1G,KAAK+W,WACpB/W,KAAKuK,SAAS+K,oBAAuBtV,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjC,IACzF3C,KAAK2F,aAAa3F,KAAK0V,cAAgB,GAAGhK,cACxC1L,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjC,IAClD3C,KAAK2F,aAAa3F,KAAK0V,eAAehK,YAC1C1L,KAAKoW,kBAAkBpW,KAAK+W,QAAS/W,KAAK2R,YAEpC3R,KAAK2F,aAAa3F,KAAK0W,cAAchB,cAAgB,GAAGhK,aAC9D1L,KAAK2F,aAAa3F,KAAKuW,kBACvBvW,KAAKkW,kBAAkBlW,KAAK+W,QAAS/W,KAAKsP,QAG5CtP,KAAK0V,gBAAkB1V,KAAKwD,SAAS7C,OAAS,IAAMX,KAAKuK,SAAS+K,oBACnEtV,KAAKuK,SAAS5F,UAAUC,SAASjC,IAAmB3C,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjC,IACrG3C,KAAK2F,aAAa3F,KAAK0V,cAAgB,GAAGhK,aAC9C1L,KAAKkW,kBAAkBlW,KAAK+W,QAAS/W,KAAK4R,cAItDzO,EAASjD,UAAU4U,eAAiB,SAAU/K,GAC1C,IAAIzG,EAAQtD,KACZA,KAAKgV,gBAAgBjL,GACrB,IAAIgG,EAAY/P,KAAKgQ,aAAajG,GAC9B/J,KAAKsE,aACLtE,KAAKgX,aAAajN,GAGlB/J,KAAKsM,QAAQ,iBAAkByD,EAAW,SAAUE,GAChD,IAAKA,EAAmB7D,OAAQ,CAC5B9I,EAAM0T,aAAajN,GACnB,IAAIqG,EAAoB9M,EAAM+M,YAAYtG,GAC1CzG,EAAMgJ,QAAQ,YAAa8D,OAK3CjN,EAASjD,UAAU8W,aAAe,SAAUjN,GACxC,IAAIqL,EAAgBpV,KAAKqD,QAAQmP,iBAAiB,IAAM7P,GAAehC,OACnE0U,EAAcrV,KAAKsK,aAAa3F,UAAUC,SAASjD,KAClD3B,KAAKsK,aAAa3F,UAAUC,SAASjC,KAAmB3C,KAAKuK,SAAS5F,UAAUC,SAASjC,IAC1F3C,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASvD,KACnDrB,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjD,KACpD3B,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjC,MACnDyS,IAAkBpV,KAAKwD,SAAS7C,OAAS,IAAQX,KAAKuK,SAAS5F,UAAUC,SAASjC,KACnF3C,KAAKsK,aAAa3F,UAAUC,SAASjD,IAAgB3B,KAAKuK,SAAS5F,UAAUC,SAASjD,GACvF4T,GAAiB5S,EAAeC,GAChC5C,KAAKuK,SAAS5F,UAAUC,SAASjC,IACjC0F,eAAarI,KAAKsK,cAAe5H,GACjC2F,eAAarI,KAAKuK,UAAWgL,GACxBvV,KAAKsE,cACNtE,KAAKwV,mBAAmBxV,KAAK0V,eAAe,KAIhDrN,eAAarI,KAAKsK,cAAe5H,GACjC2F,eAAarI,KAAKuK,UAAWgL,GAC7BhN,YAAUvI,KAAKuK,UAAW7H,GAC1B6F,YAAUvI,KAAKsK,cAAeiL,GACzBvV,KAAKsE,cACNtE,KAAKwV,mBAAmBxV,KAAKyV,eAAe,IAGpDzV,KAAKqW,sBAAsBtM,GAC3B/J,KAAKsK,aAAawH,aAAa,gBAAiB,SAChD9R,KAAKuK,SAASuH,aAAa,gBAAiB,QAC5C9R,KAAK4V,eAAe5V,KAAK6V,oBACrBR,IACArV,KAAKuK,SAAS5F,UAAUsF,OAAOvH,GAC/B1C,KAAKuK,SAASnD,MAAM0O,SAAW,KAGvC3S,EAASjD,UAAU8P,aAAe,SAAUjG,GAexC,OAdgByD,cACZnK,QAASrD,KAAKqD,QACd6H,MAAOnB,EACP3D,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,iBAChBoC,QAAQ,IAER/I,QAASrD,KAAKqD,QACd6H,MAAOnB,EACPkN,MAAOjX,KAAKsK,aAActK,KAAKuK,UAC/BnE,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,iBAChBoC,QAAQ,IAIhBjJ,EAASjD,UAAUsV,mBAAqB,SAAUpP,EAAOY,GACrDhH,KAAK2F,aAAaS,GAAOY,UAAYA,GAEzC7D,EAASjD,UAAUoQ,iBAAmB,WAClCtQ,KAAK0W,eACDH,gBAAiBvW,KAAKuW,gBACtBW,oBAAqBlX,KAAKuK,SAAS5F,UAAUC,SAASzC,GACtDgV,oBAAqBnX,KAAKsK,aAAa3F,UAAUC,SAASzC,GAC1DiV,iBAAkBpX,KAAKsK,aAAa3F,UAAUC,SAASlC,GACvDkU,iBAAkB5W,KAAKuK,SAAS5F,UAAUC,SAASlC,GACnD2U,kBAAmBrX,KAAKuK,SAAS5F,UAAUC,SAASjC,GACpDgU,kBAAmB3W,KAAKsK,aAAa3F,UAAUC,SAASjC,GACxD+S,cAAe1V,KAAK6S,mBACpB4C,cAAezV,KAAK4S,uBACpBiE,gBAAiB7W,KAAKuK,SAAS+K,mBAC/BgC,eAAgBtX,KAAKsK,aAAamM,yBAG1CtT,EAASjD,UAAUoW,mBAAqB,WACpCjO,eAAasG,SAAO,IAAM3O,KAAKsP,MAAOtP,KAAKgK,mBAAoBvH,IAEnEU,EAASjD,UAAUyV,oBAAsB,SAAU5L,GAC/C/J,KAAKsQ,mBACL/H,YAAUwB,EAAEzJ,QAASmC,GAChBzC,KAAK0W,cAAcU,kBAAqBpX,KAAK0W,cAAcW,kBAqCvDrX,KAAK0W,cAAcU,kBAAoBpX,KAAK0W,cAAcW,oBAC/DrX,KAAK8G,eAAe9G,KAAKuW,iBAAiB,GAC1CvW,KAAK8G,eAAe9G,KAAKuW,gBAAkB,GAAG,GAC1CvW,KAAK2F,aAAa3F,KAAK0V,eAAehK,aACtC1L,KAAKsW,qBAEJ5P,oBAAkB1G,KAAK+W,UACxB/W,KAAKkW,kBAAkBlW,KAAK+W,QAAS/W,KAAKsP,OAE1CtP,KAAKuK,UAAYvK,KAAK0V,gBAAkB1V,KAAKwD,SAAS7C,OAAS,IAAOX,KAAK2F,aAAa3F,KAAK0V,eAAehK,aAC5G1L,KAAK0W,cAAcW,mBACnBrX,KAAKkW,kBAAkBlW,KAAKgK,iBAAkBhK,KAAKsP,OAEjDtP,KAAK0V,gBAAkB1V,KAAKwD,SAAS7C,OAAS,GAAMX,KAAKuK,SAAS+K,oBACpEtV,KAAKuK,SAAS5F,UAAUC,SAASjC,KAChC3C,KAAKuK,SAAS+K,mBAAmB3Q,UAAUC,SAASjC,IAClD3C,KAAK2F,aAAa3F,KAAK0V,eAAehK,aACzC1L,KAAKoW,kBAAkBpW,KAAK+W,QAAS/W,KAAK4R,cArD1C5R,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACtC1L,KAAKsW,qBAELtW,KAAK2F,aAAa3F,KAAK0V,eAAehK,aACtCrD,eAAa0B,EAAEzJ,QAASmC,GAE5BzC,KAAK8G,eAAe9G,KAAKuW,iBAAiB,GACrC7P,oBAAkB1G,KAAKwW,UACvBxW,KAAK0W,cAAcY,eAAe3S,UAAUC,SAASjC,IAkBlD3C,KAAKsK,aAAamM,wBAA0BzW,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACjF1L,KAAKsK,aAAamM,uBAAuB9R,UAAUC,SAASjC,IACzD3C,KAAK2F,aAAa3F,KAAKyV,cAAgB,GAAG/J,aAC9C1L,KAAKoW,kBAAkBpW,KAAKwW,QAASxW,KAAK4R,YAEzC5R,KAAK2F,aAAa3F,KAAKuW,gBAAkB,GAAG7K,aAC7C1L,KAAKkW,kBAAkBlW,KAAKgK,iBAAkBhK,KAAK4R,cAvBvD5R,KAAK8G,eAAe9G,KAAKuW,gBAAkB,GAAG,GAC1CvW,KAAK2F,aAAa3F,KAAKyV,eAAe/J,aACtC1L,KAAKoW,kBAAkBpW,KAAKwW,QAASxW,KAAK4R,YAEzC5R,KAAK2F,aAAa3F,KAAKuW,gBAAkB,GAAG7K,YAOxC1L,KAAK2F,aAAa3F,KAAKuW,iBAAiB7K,cAC5C1L,KAAK2F,aAAa3F,KAAKuW,gBAAkB,GAAG7K,aAC7C1L,KAAKkW,kBAAkBlW,KAAKgK,iBAAkBhK,KAAK4R,aARnD5R,KAAKkW,kBAAkBlW,KAAKwW,QAASxW,KAAKsP,OACtCtP,KAAK2F,aAAa3F,KAAKuW,iBAAiB7K,cACvC1L,KAAK2F,aAAa3F,KAAKuW,gBAAkB,GAAG7K,aAC7C1L,KAAKkW,kBAAkBlW,KAAKgK,iBAAkBhK,KAAK4R,gBAwCvEzO,EAASjD,UAAUmQ,YAAc,SAAUtG,GAavC,OAZgByD,cACZnK,QAASrD,KAAKqD,QACd6H,MAAOnB,EACP3D,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,mBAEhB3G,QAASrD,KAAKqD,QACd6H,MAAOnB,EACPkN,MAAOjX,KAAKsK,aAActK,KAAKuK,UAC/BnE,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,mBAIxB7G,EAASjD,UAAUqX,aAAe,SAAUxN,GACxC/J,KAAKuW,gBAAkBvW,KAAKmL,kBAAkBpB,EAAEzJ,OAAO6H,gBAE3DhF,EAASjD,UAAUiL,kBAAoB,SAAU7K,GAC7C,IAAIkQ,EAAiC,eAArBxQ,KAAK0F,YAA+BjE,EAAcC,EAC9D1B,KAAKoI,eAAiBpI,KAAK2D,QAAQhD,OAAS,IAC5CX,KAAK2D,QAAU4L,YAAU,IAAMiB,EAAWxQ,KAAKqD,UAGnD,SADe8J,MAAM5J,KAAKvD,KAAK2D,SAClB6G,QAAQlK,IAEzB6C,EAASjD,UAAU4W,WAAa,SAAUjG,GAEtC,OADc7Q,KAAK2D,QAASkN,EAAa,IAG7C1N,EAASjD,UAAUsX,WAAa,SAAU3G,GAEtC,OADc7Q,KAAK2D,QAASkN,EAAa,IAG7C1N,EAASjD,UAAUuX,WAAa,SAAUrR,GACtCpG,KAAKwW,QAAUxW,KAAK8W,WAAW1Q,GAC/BpG,KAAK+W,QAAU/W,KAAKwX,WAAWpR,IAEnCjD,EAASjD,UAAU8U,gBAAkB,SAAUjL,GAClB,eAArB/J,KAAK0F,YACL1F,KAAKsP,MAAQvF,EAAEzJ,OAAOqE,UAAUC,SAAStC,GAAcD,EAAcC,EAGrEtC,KAAKsP,MAAQvF,EAAEzJ,OAAOqE,UAAUC,SAASrC,GAAYC,EAAaD,EAEtEvC,KAAKmT,uBAAuBpJ,EAAEzJ,QAC9BN,KAAKuX,aAAaxN,GAClB/J,KAAKyX,WAAWzX,KAAKuW,iBACrBvW,KAAKiS,kBAET9O,EAASjD,UAAUuL,gBAAkB,SAAU1B,GAC3C,IAAIgG,EAAYvC,cACZnK,QAASrD,KAAKqD,QACd6H,MAAOnB,EACP3D,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjCgC,UAAW1X,KAAK2X,gBAAiB3X,KAAK4X,mBACtCpH,UAAWxQ,KAAKgK,mBAEhB3G,QAASrD,KAAKqD,QACd6H,MAAOnB,EACPkN,MAAOjX,KAAKsK,aAActK,KAAKuK,UAC/BnE,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjCgC,UAAW1X,KAAK2X,gBAAiB3X,KAAK4X,mBACtCpH,UAAWxQ,KAAKgK,kBAEpBhK,KAAKsM,QAAQ,WAAYyD,IAE7B5M,EAASjD,UAAU2O,YAAc,SAAU9E,GACvC,IAAIzG,EAAQtD,KACZ+J,EAAE8N,iBACF,IAAIvX,EAASyJ,EAAEzJ,OACf,IAAIA,EAAOqE,UAAUC,SAASxC,GAA9B,CAGApC,KAAKmT,uBAAuB7S,GAC5BiI,YAAUvI,KAAKgK,kBAAmBhI,GAClChC,KAAKwT,qBAAqBzJ,EAAG,YAC7B/J,KAAKiS,iBAeL,IAAK,IAdDlC,EAAYvC,cACZnK,QAASrD,KAAKqD,QACd6H,MAAOnB,EACP3D,OAAQpG,KAAK4S,uBAAwB5S,KAAK6S,oBAC1CrC,UAAWxQ,KAAKgK,iBAChBoC,QAAQ,IAER/I,QAASrD,KAAKqD,QACd6H,MAAOnB,EACPkN,MAAOjX,KAAKsK,aAActK,KAAKuK,UAC/BnE,OAAQpG,KAAK4S,uBAAwB5S,KAAK6S,oBAC1CrC,UAAWxQ,KAAKgK,iBAChBoC,QAAQ,GAEHpL,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,UAAU7R,OAAQK,IAChEhB,KAAKqD,QAAQmP,iBAAiB,UAAUxR,GAAGoG,MAAM0Q,cAAgB,OAErE9X,KAAKsM,QAAQ,cAAeyD,EAAW,SAAUgI,GACxCA,EAAgB3L,SACjB9I,EAAM8Q,mBACN9Q,EAAM4G,cAAcH,QAIhC5G,EAASjD,UAAUwK,oBAAsB,SAAUuM,GAC/C,IAAIe,EACJ,GAAIf,EAAK7P,MAAMC,UAAUmD,QAAQ,KAAO,EACpCwN,EAAWhY,KAAKiY,qBAAqBhB,EAAK7P,MAAMC,gBAGhD,GAA6B,KAAzB4P,EAAK7P,MAAMC,UACX2Q,EAAWhY,KAAKkY,yBAAyBlY,KAAKmY,qBAAqBlB,EAAK7P,MAAMC,gBAE7E,CACD,IAAI+Q,EAA+B,eAArBpY,KAAK0F,YAAiCuR,EAAgB,YAAKA,EAAiB,aAC1Fe,EAAWhY,KAAKkY,yBAAyBE,GAGjD,OAAOJ,GAEX7U,EAASjD,UAAU+X,qBAAuB,SAAUnM,GAChD,OAAOuM,WAAWvM,EAAMqB,MAAM,EAAGrB,EAAMtB,QAAQ,QAEnDrH,EAASjD,UAAU4K,yBAA2B,SAAUgB,EAAOwM,GAC3D,IACIC,EADAC,EAAa1M,EAAM2M,WAEvB,GAAID,EAAWhO,QAAQ,MAAQ,EAAG,CAC9B+N,EAAiBF,WAAWG,EAAWrL,MAAM,EAAGqL,EAAWhO,QAAQ,OACnE,IAAIkO,OAAc,EAKdA,EAJChS,oBAAkB4R,GAIiB,eAArBtY,KAAK0F,YAAgC1F,KAAKqD,QAAQsE,YAAc3H,KAAKqD,QAAQuE,aAH9E5H,KAAKgE,gBAAgBhE,KAAKwD,SAASgH,QAAQ8N,IAK7DC,EAAiBI,KAAKC,KAAKF,GAAeH,EAAiB,WAG3DA,EAAiBlS,SAASmS,EAAY,IAE1C,OAAOD,GAEXpV,EAASjD,UAAUgY,yBAA2B,SAAUpM,GAEpD,OAAQA,GADgC,eAArB9L,KAAK0F,YAAgC1F,KAAKqD,QAAQsE,YAAc3H,KAAKqD,QAAQuE,cACjE,KAEnCzE,EAASjD,UAAUiY,qBAAuB,SAAUrM,GAChD,OAAIA,EAAMtB,QAAQ,MAAQ,EACf6N,WAAWvM,EAAMqB,MAAM,EAAGrB,EAAMtB,QAAQ,OAGxC6N,WAAWvM,IAG1B3I,EAASjD,UAAU2Y,iBAAmB,SAAUC,EAAWJ,GACvD,IAAIK,EACAvI,EAKJ,OAJAuI,EAAyC,eAArB/Y,KAAK0F,YAAgC1F,KAAK6D,mBAAmB6P,EAAIoF,EAChF9Y,KAAK6D,mBAAmB+P,EAAIkF,EACjCtI,EAAYuI,EAAoBL,GAChClI,EAAaA,EAAY,EAAK,EAAKA,EAAY,EAAK,EAAIA,GACrCkI,GAEvBvV,EAASjD,UAAU8Y,qBAAuB,SAAUjP,GAChD/J,KAAKwT,qBAAqBzJ,EAAG,WAC7B,IAAIkP,EAAkC,eAArBjZ,KAAK0F,YAAgC1F,KAAKqD,QAAQkL,wBAAwB2K,KACvFlZ,KAAKqD,QAAQkL,wBAAwB4K,IACrCC,EAA+B,eAArBpZ,KAAK0F,YAAgC1F,KAAKqD,QAAQsE,YAAc3H,KAAKqD,QAAQuE,aAC3F,OAAO5H,KAAK6Y,iBAAiBI,EAAWG,IAE5CjW,EAASjD,UAAUmZ,UAAY,SAAUzM,EAAWtM,EAAQgZ,GACxD,IAAIC,EAA2B,QAAdD,EAAsB,EAAI,KAEvC1L,EAAY,KAahB,MAZkB,QAAd0L,EACK5S,oBAAkB1G,KAAK2F,aAAaiH,KACpClG,oBAAkB1G,KAAK2F,aAAaiH,GAAWG,OAChDa,EAAY5N,KAAK2F,aAAaiH,GAAWG,KAIxCrG,oBAAkB1G,KAAK2F,aAAaiH,KACpClG,oBAAkB1G,KAAK2F,aAAaiH,GAAWI,OAChDY,EAAY5N,KAAK2F,aAAaiH,GAAWI,KAG7ChN,KAAK2F,aAAahF,OAAS,IAAM+F,oBAAkB1G,KAAK2F,aAAaiH,MACpElG,oBAAkBkH,IACfA,EAAUpD,QAAQ,KAAO,IACzBoD,EAAY5N,KAAK8K,yBAAyB8C,GAAW6K,YAElDzY,KAAKmY,qBAAqBvK,IAG1B2L,GAGfpW,EAASjD,UAAU0S,qBAAuB,WAEtC,OADqBvM,SAASrG,KAAKgK,iBAAiB5C,MAAM+J,MAAO,IAAM,GAAK,GAGhFhO,EAASjD,UAAU2S,iBAAmB,WAElC,OADqBxM,SAASrG,KAAKgK,iBAAiB5C,MAAM+J,MAAO,IAAM,KAChD,GAE3BhO,EAASjD,UAAU+R,eAAiB,WAChC,IAAIuH,EAAW,KACXjP,EAAW,KACfvK,KAAKmR,MAAQ9K,SAASrG,KAAKgK,iBAAiB5C,MAAM+J,MAAO,IACrDnR,KAAKwD,SAAS7C,OAAS,IACvB6Y,EAAWxZ,KAAKkR,YAAYlR,KAAKgK,iBAAkBhK,KAAKmR,OACxD5G,EAAWvK,KAAKoR,YAAYpR,KAAKgK,iBAAkBhK,KAAKmR,QAExDqI,GAAYjP,IACZvK,KAAKsK,aAAekP,EACpBxZ,KAAKuK,SAAWA,EAChBvK,KAAKyV,cAAgBzV,KAAK4S,uBAC1B5S,KAAK0V,cAAgB1V,KAAK6S,qBAMlC1P,EAASjD,UAAUuZ,cAAgB,SAAUxC,GACzC,MAA8B,eAArBjX,KAAK0F,YAAgCuR,EAAKtP,YAAY8Q,WAC3DxB,EAAKrP,aAAa6Q,YAE1BtV,EAASjD,UAAUwZ,YAAc,SAAU9M,GACvC,IAAI+M,GAAU,EAMd,OALKjT,oBAAkB1G,KAAK2F,aAAaiH,MACpClG,oBAAkB1G,KAAK2F,aAAaiH,GAAWnF,OAChDzH,KAAK2F,aAAaiH,GAAWnF,KAAK+C,QAAQ,MAAQ,IAClDmP,GAAU,GAEPA,GAEXxW,EAASjD,UAAU0Z,kBAAoB,WACnC5Z,KAAK6Z,wBAAiE,KAAtC7Z,KAAKsK,aAAalD,MAAMC,UAAoBrH,KAAKyZ,cAAczZ,KAAKsK,cAChGtK,KAAKsK,aAAalD,MAAMC,UAC5BrH,KAAK8Z,oBAAyD,KAAlC9Z,KAAKuK,SAASnD,MAAMC,UAAoBrH,KAAKyZ,cAAczZ,KAAKuK,UACxFvK,KAAKuK,SAASnD,MAAMC,UACpBrH,KAAK0Z,YAAY1Z,KAAKyV,iBACtBzV,KAAK6Z,wBAA0B7Z,KAAK8K,yBAAyB9K,KAAK6Z,yBAAyBpB,WAC3FzY,KAAK8D,2BAA4B,GAEjC9D,KAAK0Z,YAAY1Z,KAAK0V,iBACtB1V,KAAK8Z,oBAAsB9Z,KAAK8K,yBAAyB9K,KAAK8Z,qBAAqBrB,WACnFzY,KAAK+D,4BAA6B,GAEtC/D,KAAK2X,gBAAkB3X,KAAKmY,qBAAqBnY,KAAK6Z,wBAAwBpB,YAC9EzY,KAAK4X,kBAAoB5X,KAAKmY,qBAAqBnY,KAAK8Z,oBAAoBrB,aAEhFtV,EAASjD,UAAU6Z,iBAAmB,SAAUpG,EAAOE,GACnD,IAAImG,GAAqB,EAIzB,OAHKrG,IAAU3T,KAAK4D,oBAAoB8P,GAAKG,IAAU7T,KAAK4D,oBAAoBgQ,IAC5EoG,GAAqB,GAElBA,GAEX7W,EAASjD,UAAU+Z,cAAgB,SAAUlQ,GAWzC,MATkC,UAA9B/J,KAAKkT,aAAanJ,EAAEgB,QAAuBrE,oBAAkBqD,EAAEwJ,cAC1B,UAArCvT,KAAKkT,aAAanJ,EAAEwJ,aACNvT,KAAK+Z,iBAAiBhQ,EAAE4J,MAAO5J,EAAE8J,OAGV,SAAtBpL,UAAQC,KAAKC,KACxB3I,KAAK+Z,iBAAiBhQ,EAAEgK,QAAQ,GAAGJ,MAAO5J,EAAEgK,QAAQ,GAAGF,OACvD7T,KAAK+Z,iBAAiBhQ,EAAE4J,MAAO5J,EAAE8J,QAI7C1Q,EAASjD,UAAUga,UAAY,WAC3Bla,KAAKiE,OAAS,EACd,IAAIA,EAA8B,eAArBjE,KAAK0F,aAAiC1F,KAAKqD,QAAQsE,YAAc3H,KAAKqD,QAAQ8W,aAAe,GACrGna,KAAKqD,QAAQuE,aAAe5H,KAAKqD,QAAQ+W,cAAgB,EAC9Dpa,KAAKiE,OAA+B,WAAtBwE,UAAQC,KAAKC,KAAoB3I,KAAKiE,OAASA,GAEjEd,EAASjD,UAAUmU,YAAc,SAAUtK,GACvC,GAAK/J,KAAKia,cAAclQ,GAAxB,CAGA/J,KAAKiS,iBACLjS,KAAK4Z,oBACL5Z,KAAKyL,gBAAgB1B,GACrB,IACIsQ,EADAnB,EAAOlZ,KAAKsa,wBAAwBta,KAAKgZ,qBAAqBjP,GAAI/J,KAAK2X,gBAAiB3X,KAAK4X,mBAmCjG,GAjCA5X,KAAKka,YAEDG,EADqB,eAArBra,KAAK0F,YACmB1F,KAAKqD,QAAQkL,wBAAwB2K,KAAOA,EAChElZ,KAAKgK,iBAAiBuE,wBAAwB2K,KAAOlZ,KAAKiE,OAGtCjE,KAAKqD,QAAQkL,wBAAwB4K,IAAMD,EAC/DlZ,KAAKgK,iBAAiBuE,wBAAwB4K,IAAMnZ,KAAKiE,OAEjEjE,KAAK8Z,oBACsC,iBAA9B9Z,KAAwB,qBAAkBA,KAAK8Z,oBAAoBtP,QAAQ,MAAQ,EACxFxK,KAAKmY,qBAAqBnY,KAAK8Z,qBAAuBzT,SAASrG,KAAK8Z,oBAAqB,IACjG9Z,KAAKua,qBAAuBF,EAAuBra,KAAKmY,qBAAqBnY,KAAK6Z,yBAClF7Z,KAAKwa,qBAAuBxa,KAAK8Z,oBAAsBO,EACvDra,KAAKya,uBACDza,KAAKwa,qBAAuB,IAC5Bxa,KAAKwa,qBAAuB,GAG5Bxa,KAAKua,qBAAuB,IAC5Bva,KAAKua,qBAAuB,GAE3Bva,KAAKwa,qBAAuBxa,KAAKua,qBAAwBva,KAAK6K,aAC3D7K,KAAKwa,qBAAuBxa,KAAKua,qBACjCva,KAAKua,qBAAuBva,KAAKua,sBAAyBva,KAAKwa,qBAAuBxa,KAAKua,qBACrFva,KAAK6K,YAGX7K,KAAKwa,qBAAuBxa,KAAKwa,sBAAyBxa,KAAKwa,qBAAuBxa,KAAKua,qBACrFva,KAAK6K,aAId7K,KAAKwa,qBAAuBxa,KAAKua,qBAAwBva,KAAK6K,WAAY,CAC3E,IAAI6P,EAAa1a,KAAK6K,YAAe7K,KAAKwa,qBAAuBxa,KAAKua,sBACtEva,KAAKwa,qBAAuBxa,KAAKwa,qBAAuBE,EAE5D1a,KAAK2a,6BACL3a,KAAKiL,qBACLjL,KAAKsK,aAAalD,MAAMC,UAAYrH,KAAKua,qBACzCva,KAAKuK,SAASnD,MAAMC,UAAYrH,KAAKwa,qBACrCxa,KAAKkU,uBAET/Q,EAASjD,UAAU0a,iBAAmB,SAAUhO,EAAWiO,EAAkB5D,GACzE,IACI6D,EAEAC,EAHAC,EAAe,KAEfN,EAAa,EAkBjB,OAhBKhU,oBAAkB1G,KAAK2F,aAAaiH,KAAgBlG,oBAAkB1G,KAAK2F,aAAaiH,GAAWG,OACpGiO,EAAehb,KAAK2F,aAAaiH,GAAWG,IAAI0L,YAE/C/R,oBAAkBsU,KACfA,EAAaxQ,QAAQ,KAAO,IAC5BwQ,EAAehb,KAAK8K,yBAAyBkQ,GAAcvC,YAG3DoC,GADJC,EAAoB9a,KAAKmY,qBAAqB6C,MAE1CN,EAAcG,EAAmBC,GAAsB,EAAI,EACtDD,EAAmBC,EACxB9a,KAAK6K,WAAa7K,KAAK6K,WAAa6P,EACpC1a,KAAK4K,aAAe5K,KAAKkY,yBAAyBlY,KAAK6K,YACvDkQ,EAAeD,IAGhBpU,oBAAkBqU,GAAgBF,EAAmBE,GAEhE5X,EAASjD,UAAU+a,iBAAmB,SAAUrO,EAAWiO,EAAkB5D,GACzE,IACIiE,EACAH,EAFAI,EAAe,KAiBnB,OAdKzU,oBAAkB1G,KAAK2F,aAAaiH,KAAgBlG,oBAAkB1G,KAAK2F,aAAaiH,GAAWI,OACpGmO,EAAenb,KAAK2F,aAAaiH,GAAWI,IAAIyL,YAE/C/R,oBAAkByU,KACfA,EAAa3Q,QAAQ,KAAO,IAC5B2Q,EAAenb,KAAK8K,yBAAyBqQ,GAAc1C,YAG3DoC,GADJK,EAAoBlb,KAAKmY,qBAAqBgD,MAE1Cnb,KAAK6K,WAAa7K,KAAK6K,YAAcgQ,EAAmBK,GACxDlb,KAAK4K,aAAe5K,KAAKkY,yBAAyBlY,KAAK6K,YACvDkQ,EAAeG,IAGhBxU,oBAAkBqU,GAAgBF,EAAmBE,GAEhE5X,EAASjD,UAAUua,qBAAuB,WAEtCza,KAAKua,qBAAuBva,KAAK4a,iBAAiB5a,KAAKyV,cAAezV,KAAKua,qBAAsBva,KAAKsK,cAEtGtK,KAAKwa,qBAAuBxa,KAAK4a,iBAAiB5a,KAAK0V,cAAe1V,KAAKwa,qBAAsBxa,KAAKuK,UAEtGvK,KAAKua,qBAAuBva,KAAKib,iBAAiBjb,KAAKyV,cAAezV,KAAKua,qBAAsBva,KAAKsK,cAEtGtK,KAAKwa,qBAAuBxa,KAAKib,iBAAiBjb,KAAK0V,cAAe1V,KAAKwa,qBAAsBxa,KAAKuK,WAE1GpH,EAASjD,UAAUkb,iBAAmB,WAClC,IAAIV,EACC1a,KAAKua,qBAAuBva,KAAKwa,qBAAwBxa,KAAK4K,eAC/D8P,EAAc1a,KAAKua,qBAAuBva,KAAKwa,qBAAwBxa,KAAK4K,aAC5E5K,KAAKua,qBAAuBva,KAAKua,qBAAwBG,EAAa,EAAK,IAC3E1a,KAAKwa,qBAAuBxa,KAAKwa,qBAAwBE,EAAa,EAAK,KAE1E1a,KAAKua,qBAAuBva,KAAKwa,qBAAwBxa,KAAK4K,eAC/D8P,EAAa1a,KAAK4K,cAAgB5K,KAAKua,qBAAuBva,KAAKwa,sBACnExa,KAAKua,qBAAuBva,KAAKua,qBAAwBG,EAAa,EAAK,IAC3E1a,KAAKwa,qBAAuBxa,KAAKwa,qBAAwBE,EAAa,EAAK,MAGnFvX,EAASjD,UAAUya,2BAA6B,WACxC3a,KAAK8D,2BAA6B9D,KAAK+D,4BACvC/D,KAAKua,qBAAuB5B,KAAK0C,MAAMC,OAAO3C,KAAK0C,MAC7C,GADmDrb,KAAKkY,yBAAyBlY,KAAKua,uBAChF,KACZva,KAAKwa,qBAAuB7B,KAAK0C,MAAMC,OAAO3C,KAAK0C,MAC7C,GADmDrb,KAAKkY,yBAAyBlY,KAAKwa,uBAChF,KACsB,IAA9Bxa,KAAKua,uBACLva,KAAKwa,qBAAuBxa,KAAK4K,cAEH,IAA9B5K,KAAKwa,uBACLxa,KAAKua,qBAAuBva,KAAK4K,cAEjC5K,KAAKua,qBAAuBva,KAAKwa,uBAAyBxa,KAAK4K,aAC/D5K,KAAKob,oBAGLpb,KAAKua,qBAAuBva,KAAKua,qBAAuB,IACxDva,KAAKwa,qBAAuBxa,KAAKwa,qBAAuB,KAE5Dxa,KAAKua,qBAAwBva,KAA8B,0BAAIA,KAAKua,qBAChEva,KAAK8K,yBAAyB9K,KAAKua,sBAAwB,KAC/Dva,KAAKwa,qBAAwBxa,KAA+B,2BAAIA,KAAKwa,qBACjExa,KAAK8K,yBAAyB9K,KAAKwa,sBAAwB,KAC/Dxa,KAAK8D,2BAA4B,EACjC9D,KAAK+D,4BAA6B,IAGlC/D,KAAKua,qBAAuBva,KAAKua,qBAAuB,KACxDva,KAAKwa,qBAAuBxa,KAAKwa,qBAAuB,OAGhErX,EAASjD,UAAU+K,mBAAqB,WAC/BjL,KAAKsK,aAAa3F,UAAUC,SAASjD,IACtC3B,KAAKsK,aAAa3F,UAAUmD,IAAInG,GAE/B3B,KAAKuK,SAAS5F,UAAUC,SAASjD,IAClC3B,KAAKuK,SAAS5F,UAAUmD,IAAInG,IAGpCwB,EAASjD,UAAUoa,wBAA0B,SAAUiB,EAAYC,EAAqB1B,GACpF,IAAI2B,EAAyC,eAArBzb,KAAK0F,YAAgC1F,KAAKgK,iBAAiB0R,WAC/E1b,KAAKgK,iBAAiB2R,UACtBC,EAAeH,EAAmBD,EAClCK,EAAgB/B,EAAsB2B,EACtCK,EAAe9b,KAAKqZ,UAAUrZ,KAAKyV,cAAezV,KAAKsK,aAAc,OACrEyR,EAAe/b,KAAKqZ,UAAUrZ,KAAK0V,cAAe1V,KAAKuK,SAAU,OACjEyR,EAAehc,KAAKqZ,UAAUrZ,KAAKyV,cAAezV,KAAKsK,aAAc,OACrE2R,EAAejc,KAAKqZ,UAAUrZ,KAAK0V,cAAe1V,KAAKuK,SAAU,OACjE2R,EAAgBX,EAiBpB,OAhBIA,EAAaM,EAAgBE,EAC7BG,EAAgBL,EAAgBE,EAE3BR,EAAaK,EAAeE,IACjCI,EAAgBN,EAAeE,GAE9BpV,oBAAkBsV,GAKbtV,oBAAkBuV,IACpBV,EAAaM,EAAgBI,IAC7BC,EAAgBL,EAAgBI,GANhCV,EAAaK,EAAeI,IAC5BE,EAAgBN,EAAeI,GAQhCE,GAEX/Y,EAASjD,UAAUoU,UAAY,SAAUvK,GACrC1B,eAAarI,KAAKgK,kBAAmBhI,GACrChC,KAAKyU,qBAeL,IAAK,IAdD1E,EAAYvC,cACZtC,MAAOnB,EACP1G,QAASrD,KAAKqD,QACd+C,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,iBAChB0N,UAAW1X,KAAK2X,gBAAiB3X,KAAK4X,qBAEtC1M,MAAOnB,EACP1G,QAASrD,KAAKqD,QACd4T,MAAOjX,KAAKsK,aAActK,KAAKuK,UAC/BnE,OAAQpG,KAAKyV,cAAezV,KAAK0V,eACjClF,UAAWxQ,KAAKgK,iBAChB0N,UAAW1X,KAAK2X,gBAAiB3X,KAAK4X,oBAEjC5W,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,UAAU7R,OAAQK,IAChEhB,KAAKqD,QAAQmP,iBAAiB,UAAUxR,GAAGoG,MAAM0Q,cAAgB,OAErE9X,KAAKsM,QAAQ,aAAcyD,IAE/B5M,EAASjD,UAAUic,eAAiB,SAAU/V,EAAOgW,GACjD,IACI3U,EADAiG,EAAa0O,EAAMzb,OAEvB0F,SAASrG,KAAKmJ,UAAUnJ,KAAKqD,SAAU,IAClCqD,oBAAkB1G,KAAK2F,aAAaS,IAsBrCiI,oBAAkB+N,EAAMhW,IAAU+K,MAAiB,EAAR/K,IArBtCM,oBAAkB1G,KAAK2F,aAAaS,GAAOqB,OAgB5CzH,KAAKqc,UAAW,EAChBhO,oBAAkB+N,EAAMhW,IAAU+K,MAAiB,EAAR/K,MAhB3CqB,EAAOzH,KAAK2F,aAAaS,GAAOqB,KAC5BrB,EAAQsH,IACRW,oBAAkB+N,EAAMhW,IAAUkW,aAAc7U,EAAM0J,MAAiB,EAAR/K,IAC3DA,EAAQsH,EAAa,GAAuC,KAAlC1N,KAAK2F,aAAaS,GAAOqB,KACnDc,YAAU6T,EAAMhW,IAASzE,GAEnB3B,KAAKqc,WACXD,EAAMhW,GAAOgB,MAAMC,UAAY,MAE9BjB,IAAUsH,EAAa,GAAM1N,KAAKqc,UAA8C,KAAlCrc,KAAK2F,aAAaS,GAAOqB,MACxEc,YAAU6T,EAAMhW,IAASzE,KAYzC3B,KAAKyD,UAAU6K,KAAa,EAARlI,IAExBjD,EAASjD,UAAU0G,YAAc,SAAU2V,EAAUC,GACjDA,EAAU7V,UAAY,GACtB4V,EAAiC,mBAAWvc,KAAK6L,eAAe0Q,GAAYA,EAC5Evc,KAAKyc,gBAAgBD,EAAWD,IAGpCpZ,EAASjD,UAAUuc,gBAAkB,SAAUC,EAAKC,GAChD,IACIC,EAAU5c,KAAKwR,cAAc,OACjCxR,KAAK6c,eAAeD,EAASD,EAAK,WACA,IAA9BC,EAAQ5L,WAAWrQ,WAChBwM,MAAM5J,KAAKqZ,EAAQ5L,YAAY5D,QAAQ,SAAU0P,GAChDJ,EAAIjL,YAAYqL,MAI5B3Z,EAASjD,UAAU2c,eAAiB,SAAUH,EAAKK,EAAKC,GACpD,GACqB,mBACjB,GAAe,MAAXD,EAAI,IAAyB,MAAXA,EAAI,GAAY,CAClC,IAAIE,EAAS1T,SAASyE,cAAc+O,GACpC,IAAKrW,oBAAkBuW,GASnB,OARAjd,KAAKqE,gBAAgBiK,KAAK2O,GACG,SAAzBA,EAAO7V,MAAM8V,SACbD,EAAO7V,MAAM+V,eAAe,WAEK,KAAjCF,EAAOvQ,aAAa,UACpBuQ,EAAOG,gBAAgB,cAE3BV,EAAIjL,YAAYwL,GAIhBF,EAAMA,EAAIM,YAIdN,EAAMA,EAAIM,OAGlB,IAAIC,EAKAA,EAJC5W,oBAAkBqW,EAAIQ,WAIVC,UAAQT,GAHRS,UAAQT,EAAIQ,WAK7B,IAAIE,EACC/W,oBAAkB4W,KAEfG,EADAjQ,eAAexN,KAAK0d,iBACNJ,KAAetd,KAAMgd,EAAMhd,KAAKqD,QAAQsa,GAAK,UAAY3d,KAAKwD,SAAS7C,OAAO8X,WAAYzY,KAAK0d,kBAG/FJ,KAAetd,KAAMgd,EAAMhd,KAAKqD,QAAQsa,GAAK,UAAY3d,KAAKwD,SAAS7C,OAAO8X,YAAY,KAG3G/R,oBAAkB4W,IAAeG,EAAY9c,OAAS,MACpDwM,MAAM5J,KAAKka,GAAarQ,QAAQ,SAAUC,GACzCqP,EAAIjL,YAAYpE,MAI5BlK,EAASjD,UAAUgP,gBAAkB,SAAU+H,EAAM7Q,GACjDpG,KAAK2F,aAAaS,GAAOsF,YAAcnD,YAAU0O,GAAO9U,GAAekG,eAAa4O,GAAO9U,IAE/FgB,EAASjD,UAAU2F,gBAAkB,SAAUvF,GAC3C,IAAIoN,EAAapN,EAAOuM,SAASlM,OACjC,IAAKX,KAAKoI,cACN,IAAK,IAAIpH,EAAI,EAAGA,EAAIhB,KAAK2F,aAAahF,OAAQK,IAC1C,GAAI0M,EAAa1N,KAAK2F,aAAahF,OAAQ,CACvC,IAAIid,EAAe5d,KAAKwR,cAAc,OACtCxR,KAAKqD,QAAQoO,YAAYmM,GACzBlQ,GAA0B,EAItCA,EAAapN,EAAOuM,SAASlM,OAC7B,IAAIyb,KAAWjP,MAAM5J,KAAKjD,EAAOuM,UAEjC,GADA7M,KAAKqc,UAAW,EACZ3O,EAAa,EACb,IAAS1M,EAAI,EAAGA,EAAI0M,EAAY1M,IAEF,QAAtBob,EAAMpb,GAAG6c,UAA4C,SAAtBzB,EAAMpb,GAAG6c,WACpC7d,KAAKoI,eAAiBgU,EAAMpb,GAAG2D,UAAUC,SAASvD,GAClDrB,KAAKwD,SAAS8K,KAAK8N,EAAMpb,IAEnBhB,KAAKoI,eACXpI,KAAKwD,SAAS8K,KAAK8N,EAAMpb,IAExBhB,KAAKoI,gBACmB,eAArBpI,KAAK0F,aACL6C,YAAU6T,EAAMpb,KAAMK,EAAMC,EAAcM,IAC1C5B,KAAKmc,eAAenb,EAAGob,KAGvB7T,YAAU6T,EAAMpb,KAAMK,EAAME,EAAcK,IAC1C5B,KAAKmc,eAAenb,EAAGob,IAEtB1V,oBAAkB1G,KAAK2F,aAAa3E,KAAQ0F,oBAAkB1G,KAAK2F,aAAa3E,GAAGiM,UACpFjN,KAAK4G,YAAY5G,KAAK2F,aAAa3E,GAAGiM,QAASmP,EAAMpb,KAEpD0F,oBAAkB1G,KAAK2F,aAAa3E,KAAOhB,KAAK2F,aAAa3E,GAAGoE,UACjEpF,KAAKmF,YAAYiX,EAAMpb,GAAIhB,KAAK2F,aAAa3E,GAAGoE,UAE/CsB,oBAAkB1G,KAAK2F,aAAa3E,KACrChB,KAAKkP,gBAAgBkN,EAAMpb,GAAIA,MAavDmC,EAASjD,UAAUyL,OAAS,SAAUvF,GAClCpG,KAAKiH,kBAAkBb,GACvBpG,KAAKwV,mBAAmBpP,GAAO,IAOnCjD,EAASjD,UAAU0L,SAAW,SAAUxF,GACpCpG,KAAKkG,YAAYE,GACjBpG,KAAKwV,mBAAmBpP,GAAO,IAMnCjD,EAASjD,UAAU4d,QAAU,WACzB,IAAK9d,KAAK+d,YAAa,CAKnB,IAJK/d,KAAKoI,eACNrF,EAAO7C,UAAU4d,QAAQva,KAAKvD,MAElCsJ,eAAaW,OAAOV,SAAU,mBAAoBvJ,KAAKwJ,iBAChDxJ,KAAKqD,QAAQ2a,WAAWrd,OAAS,GACpCX,KAAKqD,QAAQ+Z,gBAAgBpd,KAAKqD,QAAQ2a,WAAW,GAAGrV,MAE5D,GAAI3I,KAAKoI,cAEL,IAAK,IADD6V,EAAaje,KAAKqD,QAAQwJ,SACrB7L,EAAIid,EAAWtd,OAAS,EAAGK,GAAK,EAAGA,IACxCsM,SAAO2Q,EAAWjd,QAGrB,CACDhB,KAAKqD,QAAQsD,UAAY3G,KAAKgI,QAAQrB,UACtC,IAAS3F,EAAI,EAAGA,EAAIhB,KAAKgI,QAAQgW,WAAWrd,OAAQK,IAChDhB,KAAKqD,QAAQyO,aAAa9R,KAAKgI,QAAQgW,WAAWhd,GAAG2H,KAAM3I,KAAKgI,QAAQgW,WAAWhd,GAAG8K,OAG1F9L,KAAKke,aACL3V,YAAUvI,KAAKqD,UAAW,YAAa,QAASnC,IAChDlB,KAAK2D,WACL3D,KAAKwD,aAETxD,KAAKuN,gBAGbpK,EAASjD,UAAUqN,YAAc,WAC7B,GAAIvN,KAAKqE,gBAAgB1D,OAAS,EAC9B,IAAK,IAAIK,EAAI,EAAGA,EAAIhB,KAAKqE,gBAAgB1D,OAAQK,IAC7ChB,KAAKqE,gBAAgBrD,GAAGoG,MAAM8V,QAAU,OACxC3T,SAAS4U,KAAK1M,YAAYzR,KAAKqE,gBAAgBrD,KAI3DmC,EAASjD,UAAUke,aAAe,SAAUnH,GAGxC,MAFqB,eAArBjX,KAAK0F,YAA+B6C,YAAU0O,IAAQ5V,EAAMC,EAAcM,IACtE2G,YAAU0O,IAAQ5V,EAAME,EAAcK,IACnCqV,GAEX9T,EAASjD,UAAUme,iBAAmB,SAAUC,GAE5C,IAAK,IADDrI,EAAQ1M,SAASiJ,iBAAiB,IAAM8L,GACnCtd,EAAI,EAAGA,EAAIiV,EAAMtV,OAAQK,IAC9BiV,EAAMjV,GAAGoG,MAAM+V,eAAe,UAGtCha,EAASjD,UAAUqe,aAAe,WAC9B,IAAK,IAAIvd,EAAI,EAAGA,EAAIhB,KAAKwD,SAAS7C,OAAQK,IACtChB,KAAKmc,eAAenb,EAAGhB,KAAKwD,WAGpCL,EAASjD,UAAUse,gBAAkB,WACjC,IAAK,IAAIxd,EAAI,EAAGA,EAAIhB,KAAK2D,QAAQhD,OAAQK,IACrCsM,SAAOtN,KAAK2D,QAAQ3C,IAExBhB,KAAK2D,YAETR,EAASjD,UAAUue,YAAc,WAC7Bze,KAAKue,eACLve,KAAKwe,kBACLxe,KAAK8F,aAAa9F,KAAKqD,UAQ3BF,EAASjD,UAAUwe,QAAU,SAAUC,EAAgBvY,GACnD,IAAIwY,EAAU5e,KAAKwR,cAAc,OACjCoN,EAAU5e,KAAKoe,aAAaQ,GAC5BxY,EAASA,EAAQpG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASyF,EACpE,IAAIyY,GACApX,KAAMf,oBAAkBiY,EAAelX,MAAQ,GAAKkX,EAAelX,KACnEsF,IAAKrG,oBAAkBiY,EAAe5R,KAAO,KAAO4R,EAAe5R,IACnEC,IAAKtG,oBAAkBiY,EAAe3R,KAAO,KAAO2R,EAAe3R,IACnEC,QAASvG,oBAAkBiY,EAAe1R,SAAW,GAAK0R,EAAe1R,QACzEzB,YAAW9E,oBAAkBiY,EAAenT,YAAoBmT,EAAenT,UAC/EE,aAAahF,oBAAkBiY,EAAejT,cAAuBiT,EAAejT,YACpF1E,WAAWN,oBAAkBiY,EAAe3X,YAAqB2X,EAAe3X,UAChF5B,SAAUsB,oBAAkBiY,EAAevZ,UAAY,GAAKuZ,EAAevZ,UAE/EpF,KAAK2F,aAAamZ,OAAO1Y,EAAO,EAAGyY,GACnC7e,KAAK6N,eAAgBlI,aAAgB3F,KAAK2F,eAAgB,GACjC,eAArB3F,KAAK0F,aACL1F,KAAKqD,QAAQ0b,aAAaH,EAAS5e,KAAKqD,QAAQmP,iBAAiB,IAAMlR,GAAc8E,IACrFpG,KAAKqe,iBAAiB/c,KAGtBtB,KAAKqD,QAAQ0b,aAAaH,EAAS5e,KAAKqD,QAAQmP,iBAAiB,IAAMjR,GAAc6E,IACrFpG,KAAKqe,iBAAiB9c,IAE1BvB,KAAKwD,SAASsb,OAAO1Y,EAAO,EAAGwY,GAC/B5e,KAAKye,cACLze,KAAK4G,YAAY5G,KAAK2F,aAAaS,GAAO6G,QAAS2R,GACnD5e,KAAKmF,YAAYnF,KAAKwD,SAAS4C,GAAQuY,EAAevZ,UACtDpF,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAGgE,UAAUsF,OAAOtI,IAO7DwB,EAASjD,UAAU8e,WAAa,SAAU5Y,GACtCA,EAASA,EAAQpG,KAAKwD,SAAS7C,OAAS,EAAKX,KAAKwD,SAAS7C,OAASyF,EACpE,IAAI6Y,EAAqC,eAArBjf,KAAK0F,YAAgCpE,EAAeC,EACpEmF,oBAAkB1G,KAAKqD,QAAQmP,iBAAiB,IAAMyM,GAAc7Y,MAGxEkH,SAAOtN,KAAKqD,QAAQmP,iBAAiB,IAAMyM,GAAc7Y,IACzDpG,KAAKwD,SAASsb,OAAO1Y,EAAO,GAC5BpG,KAAKqe,iBAAiBY,GACtBjf,KAAKye,cACLze,KAAK2F,aAAamZ,OAAO1Y,EAAO,GAChCpG,KAAK6N,eAAgBlI,aAAgB3F,KAAK2F,eAAgB,GACtD3F,KAAKwD,SAAS7C,OAAS,GACvBX,KAAKwD,SAASxD,KAAKwD,SAAS7C,OAAS,GAAGgE,UAAUsF,OAAOtI,KAGjEvB,GACI6C,WAAS,SACVE,EAASjD,UAAW,cAAU,GACjCE,GACI6C,WAAS,SACVE,EAASjD,UAAW,aAAS,GAChCE,GACI8e,gBAAepc,IAChBK,EAASjD,UAAW,oBAAgB,GACvCE,GACI6C,WAAS,eACVE,EAASjD,UAAW,mBAAe,GACtCE,GACI6C,WAAS,KACVE,EAASjD,UAAW,gBAAY,GACnCE,GACI6C,YAAS,IACVE,EAASjD,UAAW,eAAW,GAClCE,GACI6C,YAAS,IACVE,EAASjD,UAAW,2BAAuB,GAC9CE,GACI6C,WAAS,OACVE,EAASjD,UAAW,qBAAiB,GACxCE,GACI+e,WACDhc,EAASjD,UAAW,0BAAsB,GAC7CE,GACI+e,WACDhc,EAASjD,UAAW,eAAW,GAClCE,GACI+e,WACDhc,EAASjD,UAAW,mBAAe,GACtCE,GACI+e,WACDhc,EAASjD,UAAW,gBAAY,GACnCE,GACI+e,WACDhc,EAASjD,UAAW,kBAAc,GACrCE,GACI+e,WACDhc,EAASjD,UAAW,sBAAkB,GACzCE,GACI+e,WACDhc,EAASjD,UAAW,oBAAgB,GACvCE,GACI+e,WACDhc,EAASjD,UAAW,iBAAa,GACpCE,GACI+e,WACDhc,EAASjD,UAAW,gBAAY,GACnCiD,EAAW/C,GACPgf,yBACDjc,IAELkc,aC7lEEhgB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,IAAIH,IAV3C,GAaxCK,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HjB,EAAvHkB,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOf,OAAOoB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASzB,EAAIc,EAAWW,MAAIJ,GAAKH,EAAI,EAAIlB,EAAEqB,GAAKH,EAAI,EAAIlB,EAAEe,EAAQC,EAAKK,GAAKrB,EAAEe,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKnB,OAAOwB,eAAeX,EAAQC,EAAKK,GAAIA,GAO5D0e,EAAgB,YAChBC,EAAW,aAEXC,EAAO,SAGPC,EAAa,eAYbC,EAAe,kBACfC,EAAiB,oBAEjBC,EAAS,iBAKTC,EAAuB,SAAU9c,GAEjC,SAAS8c,IACL,OAAkB,OAAX9c,GAAmBA,EAAOC,MAAMhD,KAAMU,YAAcV,KA4C/D,OA9CAX,EAAUwgB,EAAO9c,GAIjB3C,GACI6C,WAAS,KACV4c,EAAM3f,UAAW,UAAM,GAC1BE,GACI6C,WAAS,KACV4c,EAAM3f,UAAW,gBAAY,GAChCE,GACI6C,WAAS,KACV4c,EAAM3f,UAAW,cAAU,GAC9BE,GACI6C,WAAS,KACV4c,EAAM3f,UAAW,eAAW,GAC/BE,GACI6C,YAAS,IACV4c,EAAM3f,UAAW,eAAW,GAC/BE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,WAAO,GAC3BE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,aAAS,GAC7BE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,gBAAY,GAChCE,GACI6C,WAAS,IACV4c,EAAM3f,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACV4c,EAAM3f,UAAW,gBAAY,GAChCE,GACI6C,WAAS,OACV4c,EAAM3f,UAAW,gBAAY,GAChCE,GACI6C,WAAS,MACV4c,EAAM3f,UAAW,cAAU,GACvB2f,GACT3c,iBAgBE4c,EAAiC,SAAU/c,GAE3C,SAAS+c,EAAgB1c,EAASC,GAC9B,IAAIC,EAAQP,EAAOQ,KAAKvD,KAAMoD,EAASC,IAAYrD,KAgBnD,OAfAsD,EAAMyc,KAAO,EACbzc,EAAM0c,QAAU,EAChB1c,EAAM2c,iBAAkB,EACxB3c,EAAM4c,cAAe,EACrB5c,EAAM6c,MAAQ,EACd7c,EAAM8c,MAAQ,EACd9c,EAAM+c,OAAS,KACf/c,EAAMgd,QAAU,IAChBhd,EAAMid,OAAS,EACfjd,EAAMkd,OAAS,EACfld,EAAMmd,OAAS,EACfnd,EAAMod,QAAU,EAChBpd,EAAMkK,UAAW,EACjBlK,EAAMqd,mBAAoB,EAC1Brd,EAAMsd,iBAAkB,EACjBtd,EAsqFX,OAxrFAjE,EAAUygB,EAAiB/c,GAwB3B+c,EAAgB5f,UAAU6H,UAAY,WAClC/H,KAAKwN,SAAYA,cAAcxN,KAAKyN,iBACpCzN,KAAK6gB,mBACL7gB,KAAK8gB,eACL9gB,KAAK+gB,uBACL/gB,KAAKghB,kBACLhhB,KAAKihB,uBACLjhB,KAAKkhB,0BACLlhB,KAAKmhB,oBACLnhB,KAAKohB,kBACLphB,KAAKqhB,YAAelI,IAAK,GAAID,KAAM,GAAIjU,OAAQ,GAAIC,MAAO,IAC1DlF,KAAKshB,cACLthB,KAAKuhB,YACLvhB,KAAKwhB,aACLxhB,KAAKyhB,oBACLzhB,KAAK0hB,eACL1hB,KAAK2hB,oBACL3hB,KAAK4hB,wBAA0BzU,MAAM5J,KAAKvD,KAAKqD,QAAQwJ,WAE3DiT,EAAgB5f,UAAUwhB,aAAe,WACrC,IAAK,IAAI1gB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAC/BhB,KAAK6hB,OAAO7gB,GAAG2c,KAChB3d,KAAK8hB,oBAAoB9hB,KAAK6hB,OAAO7gB,IAAM2c,GAAI,UAAY3d,KAAKggB,QAAQvH,aACxEzY,KAAKggB,QAAUhgB,KAAKggB,QAAU,GAElChgB,KAAKwhB,UAAUxhB,KAAK6hB,OAAO7gB,GAAG2c,KAAQoE,IAAK/hB,KAAK6hB,OAAO7gB,GAAG+gB,IAAKC,IAAKhiB,KAAK6hB,OAAO7gB,GAAGghB,MAG3FlC,EAAgB5f,UAAU+hB,mBAAqB,SAAU7c,EAAU8c,GAC/D,IAAIxF,EAAM1c,KAAKwR,cAAc,OAO7B,OANIpM,GACAmD,YAAUmU,IAAOtX,IAEjB8c,GACAxF,EAAI5K,aAAa,KAAMoQ,GAEpBxF,GAOXoD,EAAgB5f,UAAU8I,OAAS,WAC/BhJ,KAAKmiB,aACLniB,KAAKoiB,kBAAmB,EACpBpiB,KAAKqiB,gBAAkBriB,KAAKsiB,mBAC5BtiB,KAAKuiB,gBAETviB,KAAKwiB,iBACLxiB,KAAKyJ,iBACLzJ,KAAKyiB,yBAET3C,EAAgB5f,UAAUuiB,sBAAwB,WAC1CjV,cAAcxN,KAAKyN,mBACnBzN,KAAK6N,eAAgBgU,OAAQ7hB,KAAK6hB,SAAU,GAC5C7hB,KAAK0iB,wBAAyB,EAC9B1iB,KAAK2iB,mBAGb7C,EAAgB5f,UAAUqiB,cAAgB,WACtCviB,KAAK4iB,MAAQrZ,SAASiI,cAAc,SACpC,IAAIqR,EAAQtZ,SAASiI,cAAc,SACnCxR,KAAK4iB,MAAMje,UAAUmD,IAAI,8BACzB,IAAK,IAAI9G,EAAI,EAAGA,EAAIhB,KAAK8iB,SAAU9hB,IAAK,CAEpC,IAAK,IADD+hB,EAAKxZ,SAASiI,cAAc,MACvBjL,EAAI,EAAGA,EAAIvG,KAAKgjB,QAASzc,IAAK,CACnC,IAAI0c,EAAK1Z,SAASiI,cAAc,MAChCyR,EAAGte,UAAUmD,IAAI,wBACjB9H,KAAKkjB,eAAgBpX,OAASiW,IAAK/gB,EAAEyX,WAAYuJ,IAAKzb,EAAEkS,WAAY0K,MAAO,IAAKC,MAAO,MAASH,GAChGA,EAAGnR,aAAa,KAAM,GAAKvL,GAC3BvG,KAAKqjB,iBAAiBJ,EAAIjiB,EAAGuF,GAC7BvG,KAAKsjB,kBAAkBL,GAAMlB,IAAK/gB,EAAGghB,IAAKzb,EAAG4c,MAAO,EAAGC,MAAO,IAC9DL,EAAGtR,YAAYwR,GAEnBJ,EAAMpR,YAAYsR,GAEtB/iB,KAAK4iB,MAAMnR,YAAYoR,GACvB7iB,KAAKqD,QAAQoO,YAAYzR,KAAK4iB,QAElC9C,EAAgB5f,UAAUiiB,WAAa,WAEnC,GADAniB,KAAKujB,kBACDvjB,KAAKqD,QAAQmgB,kBAAoB,GAAKxjB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAS,KACpFX,KAAKwN,UAAYxN,KAAK6hB,OAAOlhB,OAAS,GAAI,CAC/C,IAAI8iB,KACJzjB,KAAK6N,eAAgBgU,YAAc,GACnC7hB,KAAK2gB,mBAAoB,EACzB,IAAK,IAAI3f,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAQK,IAClEyiB,EAAcnV,KAAMtO,KAAKqD,QAAQmP,iBAAiB,YAAYxR,IAElE,IAASA,EAAI,EAAGA,EAAIyiB,EAAc9iB,OAAQK,IAAK,CAC3C,IAAI0iB,EAAeD,EAAcziB,GAC7BhB,KAAKiG,WACLsC,YAAUmb,GAAe,SAE7B1jB,KAAK2jB,gBAAgBD,GACrB1jB,KAAK4jB,SACL5jB,KAAK8iB,SAET,IAAS9hB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAAK,CACrC0iB,EAAe1jB,KAAKqD,QAAQ2K,cAAc,IAAMhO,KAAK6hB,OAAO7gB,GAAG2c,IAEnE,GADA3d,KAAK6jB,gBAAgB7jB,KAAK6hB,OAAO7gB,IAC7BhB,KAAK8jB,eAAiB9jB,KAAK6hB,OAAO7gB,GAAGghB,KAAOhiB,KAAK8jB,eAAkB9jB,KAAK6hB,OAAO7gB,GAAGghB,IAAMhiB,KAAK6hB,OAAO7gB,GAAGmiB,MAAQ,CAC/G,IAAIY,EAAW/jB,KAAK8jB,eAAiB9jB,KAAK6hB,OAAO7gB,GAAGmiB,MACpDnjB,KAAK8hB,oBAAoB9hB,KAAK6hB,OAAO7gB,IAAMghB,IAAK+B,EAAW,EAAI,EAAIA,IAEvE/jB,KAAKgkB,gBAAgBN,EAAc1jB,KAAK6hB,OAAO7gB,IAC/ChB,KAAKwN,UAAW,EAChB,IAAIyW,EAAUjkB,KAAKkkB,aAAaR,EAAc1jB,KAAK6hB,OAAO7gB,GAAIhB,KAAK6hB,OAAO7gB,GAAG2c,IAAI,GACjF3d,KAAKwN,SAAYA,cAAcxN,KAAKyN,iBACpCzN,KAAK6gB,gBAAgBvS,KAAK2V,GAC1BjkB,KAAKsjB,kBAAkBI,EAAc1jB,KAAK6hB,OAAO7gB,IACjDhB,KAAKmkB,WAAankB,KACdA,KAAKokB,aAAe1a,OAAO2a,WAAW,IAAMrkB,KAAKokB,WAAa,KAAKE,UACnEtkB,KAAKqjB,iBAAiBK,EAAc1jB,KAAK6hB,OAAO7gB,GAAG+gB,IAAK/hB,KAAK6hB,OAAO7gB,GAAGghB,KACvEhiB,KAAKukB,YAAcb,EACnB1jB,KAAKwkB,kBAAkBd,EAAc1jB,KAAK6hB,OAAO7gB,IACjDhB,KAAKukB,YAAc,MAEvBvkB,KAAKykB,YAAYf,IAErB1jB,KAAK0kB,qBACD1kB,KAAKsiB,mBACLtiB,KAAK2kB,6BAIT3kB,KAAK4kB,qBAAqB5kB,KAAK6hB,SAE/B7hB,KAAK6kB,eAAkB7kB,KAAKokB,YAAc1a,OAAO2a,WAAW,IAAMrkB,KAAKokB,WAAa,KAAKE,SACzFtkB,KAAK8kB,sBAAsB9kB,KAAK6gB,iBAEpC7gB,KAAK+kB,cACL/kB,KAAKglB,aACLhlB,KAAKilB,eACLjlB,KAAKklB,yBACLllB,KAAKmlB,iBAAmBnlB,KAAK8jB,eACvB9jB,KAAKsiB,mBACPtiB,KAAKolB,wBAEJplB,KAAKwN,UACNxN,KAAKqlB,gBAGbvF,EAAgB5f,UAAUoiB,gBAAkB,WACxC,OAAQtiB,KAAKokB,YAAc1a,OAAO2a,WAAW,IAAMrkB,KAAKokB,WAAa,KAAKE,SAE9ExE,EAAgB5f,UAAUyhB,kBAAoB,WAC1C3hB,KAAKslB,YACAtlB,KAAKsiB,kBACNtiB,KAAKslB,SAAS,GAAKtlB,KAAKqD,QAAQ8E,eACzBwQ,KAAK4M,MAAOvlB,KAAKqD,QAAQ8E,cAAyB,aAAKnI,KAAKwlB,iBAGnExlB,KAAKslB,SAAS,GAAKtlB,KAAKqD,QAAQ8E,eAC5BwQ,KAAK4M,MAAOvlB,KAAKqD,QAAQ8E,cAAyB,aACtDnI,KAAKslB,SAAS,GAAKtlB,KAAKqD,QAAQ8E,eACzBwQ,KAAK4M,OAAOvlB,KAAKqD,QAAQ8E,cAAcR,aAAgB3H,KAAK4jB,SAAW,GAAK5jB,KAAKylB,YAAY,IACzFzlB,KAAK4jB,UAChB5jB,KAAKslB,SAAS,GAAKtlB,KAAKslB,SAAS,GAAKtlB,KAAKwlB,kBAGnD1F,EAAgB5f,UAAU4iB,OAAS,SAAU4C,GACzC,IAAI5C,EAAS,EACb,GAAI9iB,KAAK+f,KAAO,GAAKrZ,oBAAkBgf,GAEnC,OADA5C,EAAS9iB,KAAK+f,KAGlB,IAAK,IAAI/e,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAChChB,KAAK6hB,OAAO7gB,GAAGoiB,MAAQpjB,KAAK6hB,OAAO7gB,GAAG+gB,IAAMe,IAC5CA,EAAS9iB,KAAK6hB,OAAO7gB,GAAGoiB,MAAQpjB,KAAK6hB,OAAO7gB,GAAG+gB,KAMvD,OAH2B,IAAvB/hB,KAAK6hB,OAAOlhB,SACZmiB,EAAS9iB,KAAKgjB,SAEXF,GAEXhD,EAAgB5f,UAAU0jB,OAAS,WAC/B,IAAIA,EAAS,EAGb,OAFAA,EAAS5jB,KAAKgjB,QACdhjB,KAAK8jB,eAAiBF,EACfA,GAEX9D,EAAgB5f,UAAUwkB,mBAAqB,WAC3C,IAAK,IAAI1jB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAAK,CACzC,IAAI2c,EAAK3d,KAAK6hB,OAAO7gB,GAAG2c,GACxB,GAAIpU,SAASoc,eAAehI,GAA5B,CACI,IAAIoE,EAAM1b,SAASkD,SAASoc,eAAehI,GAAIjR,aAAa,YAAa,IACrEsV,EAAM3b,SAASkD,SAASoc,eAAehI,GAAIjR,aAAa,YAAa,IACzE1M,KAAKwhB,UAAUxhB,KAAK6hB,OAAO7gB,GAAG2c,KAAQoE,IAAKA,EAAKC,IAAKA,MAOjElC,EAAgB5f,UAAU0lB,iBAAmB,SAAUxgB,EAAU8c,EAAS1T,GACtE,IAAInL,EAAUrD,KAAKwR,cAAc,OAUjC,OATIhD,GACAjG,YAAUlF,IAAWmL,IAErBpJ,GACAmD,YAAUlF,IAAW+B,IAErB8c,GACA7e,EAAQyO,aAAa,KAAMoQ,GAExB7e,GAEXyc,EAAgB5f,UAAU2lB,eAAiB,SAAUtJ,GACjD,GAAIA,EACA,IACI,GAAIhT,SAASiJ,iBAAiB+J,GAAU5b,OACpC,OAAO6c,UAAQjU,SAASyE,cAAcuO,GAAU5V,UAAU0W,QAGlE,MAAOyI,GACH,IAAIC,EAAiB9Z,qBAAmB+Z,SAASzJ,GACjD,OAAOiB,UAASxd,KAAK+L,qBAA6C,mBAAYga,EAAiBxJ,KAK3GuD,EAAgB5f,UAAU+lB,eAAiB,SAAUhZ,EAASiZ,EAAenb,EAAM2S,GAG/E,IAAK,IADDyI,KACKthB,EAAK,EAAGC,EAFA9E,KAAK6lB,eAAe5Y,EAEfqQ,IAAe,KAAM,KAAMvS,EAAM2S,GAAmB7Y,EAAKC,EAAGnE,OAAQkE,IAAM,CAC5F,IAAImH,EAAOlH,EAAGD,GACdshB,EAAiB7X,KAAKtC,GAE1Boa,YAAUjZ,MAAM5J,KAAK4iB,GAAmBD,IAE5CpG,EAAgB5f,UAAUgkB,aAAe,SAAUmC,EAAaC,EAAYC,EAAS7I,GAajF,GAZK1d,KAAKwN,UACNjF,YAAU8d,IA7UV,UAKU,uBA0UdrmB,KAAK0f,aAAe2G,EAAYrY,cAAc,sBAC1CqY,EAAYrY,cAAc,sBAC1BhO,KAAK4lB,iBAAiBU,EAAWlhB,SAAUihB,EAAY1I,GAAK,WAAYgC,GACvE3f,KAAKwN,WACN6Y,EAAY5U,YAAYzR,KAAK0f,cACxB4G,EAAWhhB,SACZtF,KAAKwmB,aAAaH,IAGtBC,EAAW1G,OAAQ,CACnB,IAAI6G,EAAwBJ,EAAYrY,cAAc,mBAClDqY,EAAYrY,cAAc,mBAAqBhO,KAAK4lB,iBAAiB,GAAIS,EAAY1I,GAAK,WAAY,IAI1G,GAHK3d,KAAKwN,UACNjF,YAAUke,IAAyB7G,KAElCyG,EAAYrY,cAAc,qBAAuBhO,KAAKwN,SAAU,CACjE,IAAImQ,EAAK3d,KAAKqD,QAAQsa,GAAK,iBAAmB4I,EAC9CvmB,KAAKimB,eAAeK,EAAW1G,OAAQ6G,EAAuB9I,EAAID,GAClE1d,KAAK0f,aAAajO,YAAYgV,GAC9BC,uBAAqB/I,EAAI,iBAAkB2I,IAGnD,GAAIA,EAAWrZ,QAAS,CACpBjN,KAAK2mB,UAAYN,EAAYrY,cAAc,oBAAsBqY,EAAYrY,cAAc,oBACvFhO,KAAK4lB,iBAAiBU,EAAWlhB,SAAUihB,EAAY1I,GAAK,QAAS+B,GACzE,IAEIkH,EAAqB,iBAFN5mB,KAAK0f,aAAa1R,cAAc,mBAC/CtE,OAAOmd,iBAAiB7mB,KAAK0f,aAAa1R,cAAc,oBAAoB/I,OAAS,OAC/B,IAE1D,GADA6hB,oBAAS9mB,KAAK2mB,WAAa1hB,OAAQ2hB,KAC9BP,EAAYrY,cAAc,sBAAwBhO,KAAKwN,SAAU,CAC9DmQ,EAAK3d,KAAKqD,QAAQsa,GAAK,kBAAoB4I,EAC/CvmB,KAAKimB,eAAeK,EAAWrZ,QAASjN,KAAK2mB,UAAWhJ,EAAID,GAC5D1d,KAAK0f,aAAajO,YAAYzR,KAAK2mB,WACnCD,uBAAqB/I,EAAI,kBAAmB2I,IAGpD,OAAOD,GAEXvG,EAAgB5f,UAAUsmB,aAAe,SAAU9C,GAC/Cnb,YAAUmb,IAnXJ,gBAqXV5D,EAAgB5f,UAAUyjB,gBAAkB,SAAUD,GAClD,IAAIqD,GACA5D,MAAOO,EAAasD,aAAa,cAAgB3gB,SAASqd,EAAahX,aAAa,cAAe,IAAM,EACzG0W,MAAOM,EAAasD,aAAa,cAAgB3gB,SAASqd,EAAahX,aAAa,cAAe,IAAM,EACzGua,SAAUvD,EAAasD,aAAa,iBAAmB3gB,SAASqd,EAAahX,aAAa,iBAAkB,IAAM,EAClHwa,SAAUxD,EAAasD,aAAa,iBAAmB3gB,SAASqd,EAAahX,aAAa,iBAAkB,IAAM,EAClHya,SAAUzD,EAAasD,aAAa,iBAAmB3gB,SAASqd,EAAahX,aAAa,iBAAkB,IAAM,KAClH0a,SAAU1D,EAAasD,aAAa,iBAAmB3gB,SAASqd,EAAahX,aAAa,iBAAkB,IAAM,KAClHqV,IAAK2B,EAAasD,aAAa,YAAc3gB,SAASqd,EAAahX,aAAa,YAAa,IAAM,EACnGsV,IAAK0B,EAAasD,aAAa,YAAc3gB,SAASqd,EAAahX,aAAa,YAAa,IAAM,EACnGiR,GAAI+F,EAAahX,aAAa,MAC9B2a,OAAQ3D,EAAasD,aAAa,eAAiB3gB,SAASqd,EAAahX,aAAa,eAAgB,IAAM,IAC5GkT,OAAQ8D,EAAa1V,cAAc,oBAAsB,kBACzDf,QAASyW,EAAa1V,cAAc,qBAAuB,oBAE1D+Y,EAAMpJ,KACPoJ,EAAMpJ,GAAK,UAAY3d,KAAKggB,QAAQvH,WACpCiL,EAAa5R,aAAa,KAAMiV,EAAMpJ,IACtC3d,KAAKggB,QAAUhgB,KAAKggB,QAAU,GAE9BsH,cAAYP,EAAMzhB,WAClByhB,EAAMzhB,SAAU,GAEpBoe,EAAatc,MAAMigB,OAAS,GAAKN,EAAMM,OAEvC,IAAIE,EAAY,IAAI1H,EAAM7f,KAAM,SAAU+mB,GAAO,GACjD/mB,KAAK6hB,OAAOvT,KAAKiZ,IAErBzH,EAAgB5f,UAAUsnB,aAAe,WACrC,GAAIxnB,KAAKynB,cAEL,IAAK,IADDhE,EAAgBzjB,KAAKqD,QAAQmP,iBAAiB,yCACzCxR,EAAI,EAAGA,EAAIyiB,EAAc9iB,OAAQK,IAAK,CAC3C,IAAIsR,EAAmC,SAAtB7J,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3EW,eAAaxB,IAAI2b,EAAcziB,GAAIsR,EAAWtS,KAAK0nB,kBAAmB1nB,MAC5C,SAAtByI,UAAQC,KAAKC,MACbW,eAAaxB,IAAI2b,EAAcziB,GAAI,aAAchB,KAAK2nB,uBAAwB3nB,QAK9F8f,EAAgB5f,UAAU8kB,WAAa,WACnCtb,OAAOC,iBAAiB,SAAU3J,KAAK4nB,QAAQ/d,KAAK7J,OACpDA,KAAKwnB,gBAET1H,EAAgB5f,UAAUwnB,kBAAoB,SAAU3d,GACpD/J,KAAK6nB,YAAY9d,GACjB/J,KAAK8nB,WAAa/d,EAAE4J,MACpB3T,KAAK+nB,WAAahe,EAAE8J,MACpB,IAAImU,EAAuC,SAAtBvf,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Esf,EAAqC,SAAtBxf,UAAQC,KAAKC,KAAmB,oBAAsB,UACpE3I,KAAKkoB,mBACN5e,eAAaxB,IAAIyB,SAAUye,EAAehoB,KAAKmoB,kBAAmBnoB,MAClEA,KAAKkoB,kBAAmB,GAEvBloB,KAAKooB,iBACN9e,eAAaxB,IAAIyB,SAAU0e,EAAajoB,KAAKqoB,gBAAiBroB,MAC9DA,KAAKooB,gBAAiB,IAI9BtI,EAAgB5f,UAAU2nB,YAAc,SAAU9d,GAC9C/J,KAAKkgB,cAAe,EACpBlgB,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAChD,IAAIxU,EAAKmb,UAASze,EAAe,cAAG,YAChC0e,GAASvd,MAAOnB,EAAG1G,QAASgK,EAAIqb,cAAc,GAClD1oB,KAAKsM,QAAQ,cAAemc,GAC5BzoB,KAAK2oB,WAAa5e,EAAE6e,cACpB5oB,KAAK6oB,UAAYtf,SAASiI,cAAc,OACxCxR,KAAK6oB,UAAUlkB,UAAUmD,IAAI,YAC7BS,YAAUvI,KAAKqD,UAAWic,IAC1Btf,KAAKqD,QAAQoO,YAAYzR,KAAK6oB,WAC9B7oB,KAAK8oB,SAAWziB,SAASgH,EAAGjG,MAAM8R,KAAM,IACxClZ,KAAK+oB,SAAW1iB,SAASgH,EAAGjG,MAAM+R,IAAK,IACvCnZ,KAAKgpB,aAAe3b,EAAG1F,YACvB3H,KAAKipB,cAAgB5b,EAAGzF,aACxB5H,KAAKkpB,cAAgBlpB,KAAKmpB,gBAAgB9b,EAAGsQ,IAAIwF,MACjDnjB,KAAKopB,eAAiBppB,KAAKmpB,gBAAgB9b,EAAGsQ,IAAIyF,MAClDpjB,KAAKqpB,YAAcrpB,KAAKmpB,gBAAgB9b,EAAGsQ,IAAIoE,KAEnDjC,EAAgB5f,UAAUynB,uBAAyB,SAAU5d,GACzD/J,KAAK6nB,YAAY9d,GACjB/J,KAAK8nB,WAAa/d,EAAEuf,eAAe,GAAG3V,MACtC3T,KAAK+nB,WAAahe,EAAEuf,eAAe,GAAGzV,MACjC7T,KAAKkoB,mBACN5e,eAAaxB,IAAIyB,SAAU,YAAavJ,KAAKupB,uBAAwBvpB,MACrEA,KAAKkoB,kBAAmB,GAEvBloB,KAAKooB,iBACN9e,eAAaxB,IAAIyB,SAAU,WAAYvJ,KAAKqoB,gBAAiBroB,MAC7DA,KAAKooB,gBAAiB,IAG9BtI,EAAgB5f,UAAUspB,YAAc,WACpC,OAAQnjB,SAAUrG,KAAKslB,SAAS,GAAK,IAAKjf,SAASrG,KAAKslB,SAAS,GAAI,MAEzExF,EAAgB5f,UAAUupB,iBAAmB,SAAU1f,GACnD/J,KAAK0pB,WAAa1pB,KAAK2oB,WACvB,IACIF,GAASvd,MAAOnB,EAAG1G,QADdmlB,UAASxoB,KAAe,WAAG,YACA0oB,cAAc,GAClD1oB,KAAKsM,QAAQ,SAAUmc,IAE3B3I,EAAgB5f,UAAUypB,oBAAsB,SAAUtc,GACtDrN,KAAK4pB,QAAU5pB,KAAKqD,QAAQsE,YAAc,EAC1C3H,KAAKqgB,OAASrgB,KAAKslB,SAAS,GAAKtlB,KAAKsgB,QAAU,EAChDjY,eAAagF,GAAK,sBAClB9E,YAAU8E,IAAMkS,IAEhB,IAAK,IADDsK,GA5eD,SACA,SACC,UACA,UAII,eADA,eAEA,eACA,gBAoeC7oB,EAAI,EAAGA,EAAIhB,KAAK0pB,WAAW/kB,UAAUhE,OAAQK,KACS,IAAvD6oB,EAAYrf,QAAQxK,KAAK0pB,WAAW/kB,UAAU3D,MAC9ChB,KAAK8pB,YAAe9pB,KAAK0pB,WAAW/kB,UAAU3D,KAI1D8e,EAAgB5f,UAAUioB,kBAAoB,SAAUpe,GACpD/J,KAAKypB,iBAAiB1f,GACtB,IAAIsD,EAAKmb,UAASxoB,KAAe,WAAG,YACpC,GAAIA,KAAK8nB,aAAe/d,EAAE4J,OAAS3T,KAAK+nB,aAAehe,EAAE8J,MAAzD,CAGA7T,KAAK2pB,oBAAoBtc,GACzB,IAAIiZ,EAAatmB,KAAKmpB,gBAAgB9b,EAAGX,aAAa,OACtD1M,KAAKugB,OAASxW,EAAE4J,MAChB3T,KAAKwgB,OAASzW,EAAE8J,MAChB,IAAIkW,EAAQ/pB,KAAKwgB,OAASxgB,KAAK+nB,WAAa/nB,KAAKogB,MAC7C4J,EAAQhqB,KAAKugB,OAASvgB,KAAK8nB,WAAa9nB,KAAKmgB,MACjDngB,KAAKmgB,MAAQngB,KAAKogB,MAAQ,EAC1BpgB,KAAK+nB,WAAa/nB,KAAKwgB,OACvBxgB,KAAK8nB,WAAa9nB,KAAKugB,OACvBvgB,KAAKiqB,cAAc5c,EAAIiZ,EAAY0D,EAAOD,KAE9CjK,EAAgB5f,UAAUqpB,uBAAyB,SAAUxf,GACzD/J,KAAKypB,iBAAiB1f,GACtB,IAAIsD,EAAKmb,UAASxoB,KAAe,WAAG,YACpC,GAAIA,KAAK8nB,aAAe/d,EAAEuf,eAAe,GAAG3V,OAAS3T,KAAK+nB,aAAehe,EAAEuf,eAAe,GAAGzV,MAA7F,CAGA7T,KAAK2pB,oBAAoBtc,GACzB,IAAIiZ,EAAatmB,KAAKmpB,gBAAgB9b,EAAGX,aAAa,OACtD1M,KAAKugB,OAASxW,EAAEuf,eAAe,GAAG3V,MAClC3T,KAAKwgB,OAASzW,EAAEuf,eAAe,GAAGzV,MAClC,IAAImW,EAAQhqB,KAAKugB,OAASvgB,KAAK8nB,WAAa9nB,KAAKmgB,MAC7C4J,EAAQ/pB,KAAKwgB,OAASxgB,KAAK+nB,WAAa/nB,KAAKogB,MACjDpgB,KAAKmgB,MAAQngB,KAAKogB,MAAQ,EAC1BpgB,KAAK8nB,WAAa9nB,KAAKugB,OACvBvgB,KAAK+nB,WAAa/nB,KAAKwgB,OACvBxgB,KAAKiqB,cAAc5c,EAAIiZ,EAAY0D,EAAOD,KAG9CjK,EAAgB5f,UAAU+pB,cAAgB,SAAU5c,EAAIiZ,EAAY4D,EAAUC,GAC1E,IAAIC,EAAWpqB,KAAKmpB,gBAAgB9b,EAAGsQ,IAAIwF,MACvCkH,EAAWrqB,KAAKmpB,gBAAgB9b,EAAGsQ,IAAIyF,MACvCkH,EAAKH,EACLI,EAAKL,EACLlqB,KAAK8pB,YAAYtf,QAAQ,UAAY,IACjCxK,KAAKipB,cAAgBqB,EAAKtqB,KAAKwqB,aAAalE,IAC5C6D,EAAWnqB,KAAKipB,cAAgBjpB,KAAKwqB,aAAalE,GAClDtmB,KAAKogB,MAAQkK,EAAKH,GAEb7D,EAAWc,UAAYpnB,KAAKipB,cAAgBqB,EAAKtqB,KAAKyqB,aAAanE,IACxE6D,EAAWnqB,KAAKipB,cAAgBjpB,KAAKyqB,aAAanE,GAClDtmB,KAAKogB,MAAQkK,EAAKH,GAEbnqB,KAAK+oB,SAAWuB,EAAKtqB,KAAKygB,SAC/B0J,EAAWnqB,KAAKygB,OAASzgB,KAAK+oB,SAC9B/oB,KAAKogB,MAAQkK,EAAKH,GAEtBnqB,KAAK+oB,UAAYoB,EACjBnqB,KAAKipB,eAAiBkB,GAEtBnqB,KAAK8pB,YAAYtf,QAAQ,UAAY,IACjCxK,KAAKipB,cAAgBqB,EAAKtqB,KAAKwqB,aAAalE,IAC5C6D,EAAWnqB,KAAKwqB,aAAalE,GAActmB,KAAKipB,cAChDjpB,KAAKogB,MAAQkK,EAAKH,GAEb7D,EAAWc,UAAYpnB,KAAKipB,cAAgBqB,EAAKtqB,KAAKyqB,aAAanE,IACxE6D,EAAWnqB,KAAKyqB,aAAanE,GAActmB,KAAKipB,cAChDjpB,KAAKogB,MAAQkK,EAAKH,GAEbnqB,KAAK+oB,SAAW/oB,KAAKipB,cAAgBqB,EAAKtqB,KAAKqgB,SACpD8J,EAAWnqB,KAAKqgB,OAASrgB,KAAK+oB,SAAW/oB,KAAKipB,cAC9CjpB,KAAKogB,MAAQkK,EAAKH,GAEtBnqB,KAAKipB,eAAiBkB,GAEtBnqB,KAAK8pB,YAAYtf,QAAQ,SAAW,IAChCxK,KAAKgpB,aAAeuB,EAAKvqB,KAAK0qB,YAAYpE,IAC1C4D,EAAWlqB,KAAKgpB,aAAehpB,KAAK0qB,YAAYpE,GAChDtmB,KAAKmgB,MAAQoK,EAAKL,GAEb5D,EAAWa,UAAYnnB,KAAKgpB,aAAeuB,EAAKvqB,KAAK2qB,YAAYrE,IACtE4D,EAAWlqB,KAAKgpB,aAAehpB,KAAK2qB,YAAYrE,GAChDtmB,KAAKmgB,MAAQoK,EAAKL,GAEblqB,KAAK8oB,SAAWyB,EAAKvqB,KAAK0gB,UAC/BwJ,EAAWlqB,KAAK0gB,QAAU1gB,KAAK8oB,SAC/B9oB,KAAKmgB,MAAQoK,EAAKL,GAEtBlqB,KAAK8oB,UAAYoB,EACjBlqB,KAAKgpB,cAAgBkB,GAErBlqB,KAAK8pB,YAAYtf,QAAQ,SAAW,IAChCxK,KAAKgpB,aAAeuB,EAAKvqB,KAAK0qB,YAAYpE,IAC1C4D,EAAWlqB,KAAK0qB,YAAYpE,GAActmB,KAAKgpB,aAC/ChpB,KAAKmgB,MAAQoK,EAAKL,GAEb5D,EAAWa,UAAYnnB,KAAKgpB,aAAeuB,EAAKvqB,KAAK2qB,YAAYrE,IACtE4D,EAAWlqB,KAAK2qB,YAAYrE,GAActmB,KAAKgpB,aAC/ChpB,KAAKmgB,MAAQoK,EAAKL,GAEblqB,KAAK8oB,SAAW9oB,KAAKgpB,aAAeuB,EAAKvqB,KAAK4pB,UACnDM,EAAWlqB,KAAK4pB,QAAU5pB,KAAK8oB,SAAW9oB,KAAKgpB,aAC/ChpB,KAAKmgB,MAAQoK,EAAKL,GAEtBlqB,KAAKgpB,cAAgBkB,GAEzB7c,EAAGjG,MAAM+R,IAAMnZ,KAAK+oB,SAAW,KAC/B1b,EAAGjG,MAAM8R,KAAOlZ,KAAK8oB,SAAW,KAChCzb,EAAGjG,MAAMlC,MAAQlF,KAAKgpB,aAAe,KACrC3b,EAAGjG,MAAMnC,OAASjF,KAAKipB,cAAgB,KACvC,IAAIjd,EAAOhM,KAAK4qB,mBAAmBtE,EAAYtmB,KAAK0pB,YAQpD,GAPI1d,EAAKgW,IAAMhW,EAAKmX,MAAQnjB,KAAKgjB,SAC7BhjB,KAAK8hB,oBAAoB9V,GAAQmX,MAAOnX,EAAKmX,MAAQ,IAEzDnjB,KAAK6oB,UAAUzhB,MAAM+R,IAAQnN,EAAK+V,IAAM/hB,KAAKwpB,cAAc,GAAMxd,EAAK+V,IAAM/hB,KAAKylB,YAAY,GAAQ,KACrGzlB,KAAK6oB,UAAUzhB,MAAM8R,KAASlN,EAAKgW,IAAMhiB,KAAKwpB,cAAc,GAAQxd,EAAQ,IAAIhM,KAAKylB,YAAY,GAAO,KACxGzlB,KAAK6oB,UAAUzhB,MAAMnC,OAAW+G,EAAKoX,OAASpjB,KAAKwpB,cAAc,GAAMxpB,KAAKylB,YAAY,IAAS,KACjGzlB,KAAK6oB,UAAUzhB,MAAMlC,MAAU8G,EAAKmX,OAASnjB,KAAKwpB,cAAc,GAAMxpB,KAAKylB,YAAY,IAAS,KAC5F2E,IAAape,EAAKmX,OAASkH,IAAare,EAAKoX,MAAO,CACpDgH,EAAWpe,EAAKmX,MAChBkH,EAAWre,EAAKoX,MAChB,IAAI2D,EAAQ/mB,KAAKmpB,gBAAgB9b,EAAGsQ,IAChC7R,GACAkS,YACI+D,IAAKgF,EAAMhF,IAAItJ,WACfuJ,IAAK+E,EAAM/E,IAAIvJ,WACf0K,MAAO4D,EAAM5D,MAAM1K,WACnB2K,MAAO2D,EAAM3D,MAAM3K,aAG3BzY,KAAKkjB,cAAcpX,EAAOuB,GAC1BrN,KAAKukB,YAAclX,EACnBrN,KAAKwkB,kBAAkBnX,EAAIrN,KAAKmpB,gBAAgB9b,EAAGsQ,KACnD3d,KAAK0kB,qBACL1kB,KAAK+kB,gBAGbjF,EAAgB5f,UAAUmoB,gBAAkB,SAAUte,GAClD,IAAIrD,oBAAkB1G,KAAK2oB,YAA3B,CAGA3oB,KAAKyiB,wBACLziB,KAAK6qB,SAAW7qB,KAAK2oB,WACrB,IAAItb,EAAKmb,UAASxoB,KAAa,SAAG,YAC9ByoB,GAASvd,MAAOnB,EAAG1G,QAASgK,EAAIqb,cAAc,GAClD,GAAIrb,EAAI,CACJ9E,YAAU8E,GAAK,sBACf,IAAI2a,EAAuC,SAAtBvf,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3Esf,EAAqC,SAAtBxf,UAAQC,KAAKC,KAAmB,oBAAsB,UACzEW,eAAaW,OAAOV,SAAUye,EAAehoB,KAAKmoB,mBAClD7e,eAAaW,OAAOV,SAAU0e,EAAajoB,KAAKqoB,iBACtB,SAAtB5f,UAAQC,KAAKC,OACbW,eAAaW,OAAOV,SAAU,YAAavJ,KAAKupB,wBAChDjgB,eAAaW,OAAOV,SAAU,WAAYvJ,KAAKqoB,kBAEnDroB,KAAKooB,gBAAiB,EACtBpoB,KAAKkoB,kBAAmB,EACpBloB,KAAK6oB,WACLvb,SAAOtN,KAAK6oB,WAEhB7oB,KAAK6oB,UAAY,KACjB,IAAIvC,EAAatmB,KAAKmpB,gBAAgB9b,EAAGX,aAAa,OACtD1M,KAAKqjB,iBAAiBhW,EAAIiZ,EAAWvE,IAAKuE,EAAWtE,KACrDhiB,KAAKsjB,kBAAkBjW,EAAIiZ,GAE/Bje,eAAagF,IAAMkS,IACnBvf,KAAKsM,QAAQ,aAAcmc,GAC3BzoB,KAAKkgB,cAAe,EACpBlgB,KAAK8nB,WAAa9nB,KAAK+nB,gBAAa+C,EACpC9qB,KAAKmgB,MAAQngB,KAAKogB,MAAQ,EAC1BpgB,KAAKukB,YAAc,KACfvkB,KAAK+qB,eACL/qB,KAAKgrB,mBAEThrB,KAAKilB,eACLjlB,KAAKklB,yBACLllB,KAAKirB,iBAAgB,KAEzBnL,EAAgB5f,UAAU0qB,mBAAqB,SAAU5e,EAAMjC,GAC3D,IAAImhB,GAAY,EACZlJ,EAAMhW,EAAKgW,KAC+C,KAAzD,SAAU,gBAAgBxX,QAAQxK,KAAK8pB,eACxC9H,EAAMhiB,KAAKmrB,gBAAgBnrB,KAAK8oB,UAAU,IAE9C,IAAI/G,EAAM/V,EAAK+V,KACgC,KAA1C,WAAWvX,QAAQxK,KAAK8pB,eACzB/H,EAAM/hB,KAAKorB,aAAaprB,KAAK+oB,UAAU,GACnC/oB,KAAKqpB,cAAgBtH,IACrB/hB,KAAKqpB,YAActH,EACnBmJ,GAAY,IAGpB,IAAI/H,EAAQnX,EAAKmX,OACyC,KAArD,UAAW,WAAW3Y,QAAQxK,KAAK8pB,eACpC3G,EAAQnjB,KAAKmrB,gBAAgBnrB,KAAKgpB,aAAe,EAAUhpB,KAAKylB,YAAY,IAAI,IAEpF,IAAIrC,EAAQpX,EAAKoX,OACuC,KAAnD,SAAU,UAAU5Y,QAAQxK,KAAK8pB,eACT,YAArB9pB,KAAK8pB,aAA4BoB,KACjC9H,EAAQpjB,KAAKorB,aAAaprB,KAAKipB,cAAgB,EAAUjpB,KAAKylB,YAAY,IAAI,IAGlFzZ,EAAKgW,IAAMhW,EAAKmX,MAAQnjB,KAAKgjB,UAC7BhX,EAAKmX,MAAQnX,EAAKmX,MAAQ,GAO9B,OALgBpB,GAAO,GAAKC,GAAO,GAAKmB,EAAQnB,GAAOhiB,KAAK4jB,UAAYR,EAAQrB,GAAO/hB,KAAK8iB,UACK,IAA/E9iB,KAAKqrB,WAAWtJ,EAAKC,EAAKmB,EAAOC,EAAOpjB,KAAKsrB,aAAatf,EAAK2R,KAAKhd,SACzD,IAAtBX,KAAKurB,eACRvrB,KAAK8hB,oBAAoB9V,GAAQ+V,IAAKA,EAAKC,IAAKA,EAAKmB,MAAOA,EAAOC,MAAOA,IAEvEpX,GAEX8T,EAAgB5f,UAAUirB,gBAAkB,SAAUK,EAAQC,GAC1D,IAAIC,EAAc1rB,KAAKslB,SAAS,GAChC,OAAImG,EACO9S,KAAKC,KAAK4S,EAASE,GAGnB/S,KAAK4M,MAAMiG,EAASE,IAGnC5L,EAAgB5f,UAAUkrB,aAAe,SAAUI,EAAQC,GACvD,OAAIA,EACO9S,KAAK0C,MAAMmQ,EAASxrB,KAAKslB,SAAS,IAGlC3M,KAAK0C,MAAMmQ,GAAUxrB,KAAKslB,SAAS,GAAKtlB,KAAKylB,YAAY,MAGxE3F,EAAgB5f,UAAUwqB,YAAc,SAAU1e,GAC9C,OAAQA,EAAa,SAAIhM,KAAKwpB,cAAc,IAGhD1J,EAAgB5f,UAAUyqB,YAAc,SAAU3e,GAC9C,OAAQA,EAAa,SAAIhM,KAAKwpB,cAAc,IAGhD1J,EAAgB5f,UAAUsqB,aAAe,SAAUxe,GAC/C,OAAQA,EAAa,SAAIhM,KAAKwpB,cAAc,IAGhD1J,EAAgB5f,UAAUuqB,aAAe,SAAUze,GAC/C,OAAQA,EAAa,SAAIhM,KAAKwpB,cAAc,IAGhD1J,EAAgB5f,UAAU6kB,YAAc,WACpC/kB,KAAK8gB,eACL,IAAK,IAAI9f,EAAI,EAAG2qB,EAAI3rB,KAAK6gB,gBAAgBlgB,OAAQK,EAAI2qB,IAAK3qB,EACtDhB,KAAK4rB,SAAS5rB,KAAK6gB,gBAAgB7f,KAG3C8e,EAAgB5f,UAAU8qB,iBAAmB,WACzC,IAA2B,IAAvBhrB,KAAK+qB,cAAT,CAGA,IAAK,IAAIc,EAAW,EAAGF,EAAI3rB,KAAK8gB,YAAYngB,OAAQkrB,EAAWF,IAAKE,EAAU,CAC1E,IAAI7I,EAAUhjB,KAAK8gB,YAAY+K,GAC/B,GAAK7I,EAGL,IAAK,IAAI8I,EAAW,EAAGC,EAAM/I,EAAQriB,OAAQmrB,EAAWC,IAAOD,EAAU,CACrE,IAAI9f,EAAOgX,EAAQ8I,GACf9f,GACAhM,KAAKgsB,gBAAgBhgB,IAIjChM,KAAKisB,oBAGTnM,EAAgB5f,UAAU8rB,gBAAkB,SAAUhgB,GAClD,IAA2B,IAAvBhM,KAAK+qB,eAA2B/e,IAAShM,KAAKukB,YAAlD,CASA,IANA,IAAIuH,EAAW9rB,KAAKmpB,gBAAgBnd,EAAK2R,IAAIqE,IACzCoB,EAAQ/c,SAAS2F,EAAKU,aAAa,cAAe,IAClDyW,EAAQ9c,SAAS2F,EAAKU,aAAa,cAAe,IAClDwf,EAAe,KACfC,EAAkB,KAClBN,EAAWxlB,SAAS2F,EAAKU,aAAa,YAAa,IAAM,EACtDmf,GAAY,GAAG,CAElB,GAAqB,IADT7rB,KAAKqrB,WAAWQ,EAAUC,EAAU3I,EAAOC,EAAOpX,GACpDrL,OACN,MAEJurB,EAAeL,EACfM,EAAkBL,IAChBD,EAEe,OAAjBK,GACAlsB,KAAK4rB,SAAS5f,EAAMkgB,EAAcC,KAG1CrM,EAAgB5f,UAAU0rB,SAAW,SAAU5f,EAAMogB,EAAUC,EAAaC,GACxEtsB,KAAKghB,kBACL,IAAIuL,EAASlmB,SAAS2F,EAAKU,aAAa,YAAa,IACjDqV,EAAM1b,SAAS2F,EAAKU,aAAa,YAAa,IAKlD,GAJK1M,KAAK8gB,YAAYiB,KAClB/hB,KAAK8gB,YAAYiB,OAErB/hB,KAAK8gB,YAAYiB,GAAKwK,GAAUvgB,OACnB8e,IAAT9e,QAAmC8e,IAAbsB,QAA0CtB,IAAhBuB,EAA2B,CAC3E,QAAgCvB,IAA5B9qB,KAAKwhB,UAAUxV,EAAK2R,KAAqD,OAAhC3d,KAAKwhB,UAAUxV,EAAK2R,IAAIoE,UAC1B,IAAhC/hB,KAAKwhB,UAAUxV,EAAK2R,IAAIqE,IAAqB,CAEhD,IAAIwK,EAASxsB,KAAK8gB,YAAY9gB,KAAKwhB,UAAUxV,EAAK2R,IAAIoE,KAClD/hB,KAAKwhB,UAAUxV,EAAK2R,KAAO6O,EAAOxsB,KAAKwhB,UAAUxV,EAAK2R,IAAIqE,OAAShW,WAC5DwgB,EAAOxsB,KAAKwhB,UAAUxV,EAAK2R,IAAIqE,KACtChiB,KAAK0kB,qBACL1kB,KAAK+kB,eAIjB/kB,KAAKwhB,UAAUxV,EAAK2R,IAAIoE,IAAMqK,EAC9BpsB,KAAKwhB,UAAUxV,EAAK2R,IAAIoE,IAAMsK,EACzBrsB,KAAK8gB,YAAYiB,KAClB/hB,KAAK8gB,YAAYiB,OAErB/hB,KAAK8gB,YAAYiB,GAAKwK,GAAUvgB,GACK,IAAjChM,KAAKuhB,SAAS/W,QAAQwB,IACtBhM,KAAKuhB,SAASjT,KAAKtC,GAEvBhM,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBnd,EAAK2R,KAAOoE,IAAKqK,EAAUpK,IAAKqK,IAC9E,IAAI/F,EAAatmB,KAAKmpB,gBAAgBnd,EAAK2R,IAC3C3d,KAAKkjB,eAAgBpX,OAASkW,IAAKsE,EAAWtE,IAAIvJ,WAAYsJ,IAAKuE,EAAWvE,IAAItJ,aAAgBzM,GAClGhM,KAAKysB,aAAazgB,EAAMhM,KAAKmpB,gBAAgBnd,EAAK2R,OAG1DmC,EAAgB5f,UAAUusB,aAAe,SAAUppB,EAASijB,GACxDtmB,KAAKqjB,iBAAiBhgB,EAASijB,EAAWvE,IAAKuE,EAAWtE,KAC1DhiB,KAAKsjB,kBAAkBjgB,EAASijB,GAChCtmB,KAAKujB,kBACLvjB,KAAK+kB,eAGTjF,EAAgB5f,UAAU0nB,QAAU,WAEhC,GADA5nB,KAAKwiB,iBACDxiB,KAAKsiB,kBACLtiB,KAAK2kB,4BAEJ,CACD,GAAI3kB,KAAKqD,QAAQsB,UAAUC,SAAS6a,GAAa,CAC7CpX,eAAarI,KAAKqD,UAAWoc,IAC7B,IAAK,IAAIze,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAQK,IAAK,CACvE,IAAI0b,EAAM1c,KAAKqD,QAAQmP,iBAAiB,YAAYxR,GAChD0rB,EAAe1sB,KAAKmpB,gBAAgBzM,EAAIiB,IACxCoE,EAAM1b,SAASqW,EAAIhQ,aAAa,YAAa,IAC7CsV,EAAM3b,SAASqW,EAAIhQ,aAAa,YAAa,IACjD1M,KAAK8hB,oBAAoB4K,GAAgB3K,IAAKA,EAAKC,IAAKA,IACxDhiB,KAAKsjB,kBAAkB5G,EAAK1c,KAAKmpB,gBAAgBzM,EAAIiB,KACrD3d,KAAKqjB,iBAAiB3G,EAAKqF,EAAKC,GAChChiB,KAAKujB,mBAGbvjB,KAAKolB,wBACLplB,KAAKisB,kBAETjsB,KAAK2sB,oBAAoB3sB,KAAK6gB,iBAC9B7gB,KAAKykB,WAAWzkB,KAAK6gB,iBACrB7gB,KAAKwnB,eACLxnB,KAAK4sB,cAAc5sB,KAAKohB,iBAE5BtB,EAAgB5f,UAAU+rB,gBAAkB,WACpCjsB,KAAKqD,QAAQ2K,cAAc,iCACvBhO,KAAK4iB,OACLtV,SAAOtN,KAAK4iB,OAEhB5iB,KAAKuiB,kBAGbzC,EAAgB5f,UAAU0sB,cAAgB,SAAUxL,GAChD,GAAIphB,KAAKsiB,oBAAsBtiB,KAAK6kB,cAChC,IAAK,IAAI7jB,EAAI,EAAGA,EAAIogB,EAAezgB,OAAQK,IACvCogB,EAAepgB,GAAG8c,cAGrB,CACD,IAAS9c,EAAI,EAAGA,EAAIogB,EAAezgB,OAAQK,IACvCogB,EAAepgB,GAAG8c,UAEtB9d,KAAK8kB,sBAAsB9kB,KAAK6gB,mBAGxCf,EAAgB5f,UAAU2sB,WAAa,WAenC,IAAK,IAdD9F,KACA+F,EAAU,SAAU/K,GAQpB,IAAK,IAPDgL,EAAU,SAAU/K,GACpBgL,EAAOnL,OAAOoL,OAAO,SAAUC,GACvBA,EAAMnL,MAAQA,GAAOmL,EAAMlL,MAAQA,GACnC+E,EAAMzY,KAAK4e,MAIdlL,EAAM,EAAGA,EAAMgL,EAAOhK,QAAShB,IACpC+K,EAAQ/K,IAGZgL,EAAShtB,KACJ+hB,EAAM,EAAGA,GAAO/hB,KAAK+f,KAAMgC,IAChC+K,EAAQ/K,GAEZ,OAAOgF,GAEXjH,EAAgB5f,UAAUykB,sBAAwB,WAC9Cpc,YAAUvI,KAAKqD,UAAWoc,IAC1B,IAAI0N,EAAentB,KAAK6sB,aACxB7sB,KAAKotB,YAAcD,EAAaxsB,OAChC,IAAK,IAAIK,EAAI,EAAGA,EAAImsB,EAAaxsB,OAAQK,IAAK,CAC1C,IAAI0iB,EAAena,SAASoc,eAAewH,EAAansB,GAAG2c,IAC3D,GAAI+F,EAAc,CAMd,GALAoD,oBAASpD,GAAgBxe,MAAS,SAClCwe,EAAatc,MAAMnC,OAAS,KAAOjF,KAAKqD,QAAQ8E,eACzCnI,KAAKqD,QAAQ8E,cAAcR,YAAc3H,KAAKwlB,iBAAmB,KACxExlB,KAAKslB,SAAS,GAAKtlB,KAAKqD,QAAQ8E,eACxBnI,KAAKqD,QAAQ8E,cAAcR,YAAc3H,KAAKwlB,gBAClDxlB,KAAKqtB,gBAAkBrtB,KAAKwN,SAAU,CACtC,IAAI+Z,EAAYvnB,KAAKstB,oBAAoBH,EAAansB,IACtDumB,EAAUxF,IAAM/gB,EAChBumB,EAAUvF,IAAM,EAChBhiB,KAAK8hB,oBAAoBqL,EAAansB,GAAIumB,GAC1CvnB,KAAKqjB,iBAAiBK,EAAc1iB,EAAG,QAGvChB,KAAK8hB,oBAAoBqL,EAAansB,IAAM+gB,IAAK/gB,EAAGghB,IAAK,IACzDhiB,KAAKqjB,iBAAiBK,EAAcyJ,EAAansB,GAAG+gB,IAAKoL,EAAansB,GAAGghB,KAE7EhiB,KAAKykB,WAAWzkB,KAAK6gB,iBACrB7gB,KAAK4sB,cAAc5sB,KAAKohB,gBACxBphB,KAAK2sB,oBAAoB3sB,KAAK6gB,kBAGtC7gB,KAAKujB,mBAETzD,EAAgB5f,UAAUklB,sBAAwB,WAC9CplB,KAAKqD,QAAQsB,UAAUmD,IAAI,gBAC3B9H,KAAK2hB,oBACL,IAAK,IAAI3gB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAQK,IAAK,CACvE,IAAI0b,EAAM1c,KAAKqD,QAAQmP,iBAAiB,YAAYxR,GAChDslB,EAAatmB,KAAKmpB,gBAAgBzM,EAAIiB,IAC1C3d,KAAKsjB,kBAAkB5G,EAAK4J,GAEhC,IAAStlB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IACpChB,KAAKqjB,iBAAiB9Z,SAASoc,eAAe3lB,KAAK6hB,OAAO7gB,GAAG2c,IAAK3d,KAAK6hB,OAAO7gB,GAAG+gB,IAAK/hB,KAAK6hB,OAAO7gB,GAAGghB,KAEzGhiB,KAAKujB,mBAETzD,EAAgB5f,UAAUqjB,gBAAkB,WACxCvjB,KAAKutB,eACLvtB,KAAKwtB,kBAET1N,EAAgB5f,UAAUstB,eAAiB,WACvC,IAAIC,EACAC,EAEAD,EADAztB,KAAKsiB,kBACWtiB,KAAK8iB,UAChB9iB,KAAKqD,QAAQ8E,eAAiBwQ,KAAK4M,MAAOvlB,KAAKqD,QAAQ8E,cAAyB,aAAKnI,KAAKwlB,kBAC1FxlB,KAAK8iB,SAAW,GAAK9iB,KAAKylB,YAAY,GAAM,KAGjCzlB,KAAK8iB,UAChB9iB,KAAKslB,SAAS,GAAKtlB,KAAKwlB,kBAAoBxlB,KAAK8iB,SAAW,GAAK9iB,KAAKylB,YAAY,GAAM,KAEjGqB,oBAAS9mB,KAAKqD,SAAW4B,OAAUwoB,IACnCC,EAAahkB,OAAOmd,iBAAiB7mB,KAAKqD,SAAS6B,MACnD4hB,oBAAS9mB,KAAKqD,SAAW6B,MAASwoB,KAEtC5N,EAAgB5f,UAAUojB,kBAAoB,SAAUI,EAAc4C,GAClEQ,oBAASpD,GAAgBze,OAAUmJ,aAAWpO,KAAK2tB,gBAAgBrH,GAAY,MAC/EQ,oBAASpD,GAAgBxe,MAASkJ,aAAWpO,KAAK2tB,gBAAgBrH,GAAY,OAElFxG,EAAgB5f,UAAU0tB,WAAa,SAAUV,EAAOxP,EAAkBtX,GACtE,IAAIigB,EACJrmB,KAAKshB,WAAathB,KAAK2tB,gBAAgBT,GACnC5F,cAAY4F,EAAM5nB,WAClB4nB,EAAM5nB,SAAU,GAEhBtF,KAAKwN,SACL6Y,EAAc9c,SAASoc,eAAeuH,EAAMvP,KAGxC3d,KAAK4hB,qBAAqBjhB,OAAS,IAAM+F,oBAAkBN,IAC3DigB,EAAcrmB,KAAK4hB,qBAAqBxb,GACpC8mB,EAAM9nB,UACNmD,YAAU8d,IAAe6G,EAAM9nB,WAE/B8nB,EAAMvP,IACN0I,EAAYvU,aAAa,KAAMob,EAAMvP,KAIzC0I,EAAcrmB,KAAKiiB,mBAAmBiL,EAAM9nB,SAAU8nB,EAAMvP,IAEhE0I,EAAYjf,MAAMigB,OAAS,GAAK6F,EAAM7F,OACtCrnB,KAAKqD,QAAQoO,YAAY4U,IAE7B,IAAIwH,EAAgB7tB,KAAKkkB,aAAamC,EAAa6G,EAAOA,EAAMvP,GAAID,GAEpE,GADA1d,KAAK6gB,gBAAgBvS,KAAKuf,GACrB7tB,KAAKwN,SAGL,CACD,IAAIsgB,EAAczH,EAAYrY,cAAc,oBAC5C,GAAI8f,EAAa,CACb,IAEIlH,EAAqB,iBAFNP,EAAYrY,cAAc,mBACzCtE,OAAOmd,iBAAiBR,EAAYrY,cAAc,oBAAoB/I,OAAS,OACzB,IAC1D6hB,oBAASgH,GAAe7oB,OAAQ2hB,UARpC5mB,KAAKgkB,gBAAgBqC,EAAa6G,GAYtC,OADAltB,KAAKsjB,kBAAkB+C,EAAa6G,GAC7B7G,GAEXvG,EAAgB5f,UAAUmjB,iBAAmB,SAAUgD,EAAatE,EAAKC,GACrE,GAAKqE,EAAL,CAGA,IAAIoH,EAAcztB,KAAKwpB,cAAc,GACjCkE,EAAa1tB,KAAKwpB,cAAc,GAChCtQ,EAAe,IAAR8I,EAAY,EAAM,GAAS3b,SAASqnB,EAAWjV,WAAY,IAAMzY,KAAKylB,YAAY,IACzFtM,EAAc,IAAR4I,EAAY,EAAM,GAAS1b,SAASonB,EAAYhV,WAAY,IAAMzY,KAAKylB,YAAY,IAC7FqB,oBAAST,GAAenN,KAAQA,EAAO,KAAMC,IAAOA,EAAM,SAE9D2G,EAAgB5f,UAAUqtB,aAAe,WAErC,GADAvtB,KAAK+f,KAAO,KACR/f,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAS,IAAMX,KAAKotB,YAE9D,IAAK,IADD3J,EAAgBzjB,KAAKqD,QAAQmP,iBAAiB,YACzCxR,EAAI,EAAGA,EAAIyiB,EAAc9iB,OAAQK,IAAK,CAC3C,IAAI0iB,EAAeD,EAAcziB,GAC7BorB,EAAW/lB,SAASqd,EAAahX,aAAa,YAAa,IAC3DqhB,EAAS1nB,SAASqd,EAAahX,aAAa,cAAe,IAC/D1M,KAAK+f,KAAOpH,KAAK3L,IAAIhN,KAAK+f,KAAOqM,EAAW2B,OAG/C,CACG/tB,KAAKotB,cACLptB,KAAK+f,KAAO/f,KAAKotB,YACjBptB,KAAKotB,YAAc,MAEvB,IAASpsB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IACpChB,KAAK+f,KAAOpH,KAAK3L,IAAIhN,KAAK+f,KAAM/f,KAAK6hB,OAAO7gB,GAAG+gB,OAI3DjC,EAAgB5f,UAAU2jB,gBAAkB,SAAUqJ,IAC7CA,EAAM/J,OAAS+J,EAAM/J,MAAQ+J,EAAMjG,SACpCjnB,KAAK8hB,oBAAoBoL,GAAS/J,MAAO+J,EAAMjG,WAEzCiG,EAAM/F,UAAY+F,EAAM/J,MAAQ+J,EAAM/F,SAC5CnnB,KAAK8hB,oBAAoBoL,GAAS/J,MAAO+J,EAAM/F,WAE1C+F,EAAM/J,MAAQnjB,KAAKgjB,QACxBhjB,KAAK8hB,oBAAoBoL,GAAS/J,MAAOnjB,KAAKgjB,UAG9ChjB,KAAK8hB,oBAAoBoL,GAAS/J,MAAO+J,EAAM/J,SAE9C+J,EAAM9J,OAAS8J,EAAM9J,MAAQ8J,EAAMhG,SACpClnB,KAAK8hB,oBAAoBoL,GAAS9J,MAAO8J,EAAMhG,WAE1CgG,EAAM9F,UAAY8F,EAAM9J,MAAQ8J,EAAM9F,SAC3CpnB,KAAK8hB,oBAAoBoL,GAAS9J,MAAO8J,EAAM9F,WAG/CpnB,KAAK8hB,oBAAoBoL,GAAS9J,MAAO8J,EAAM9J,SAGvDtD,EAAgB5f,UAAU8tB,kBAAoB,SAAUd,GAChDA,EAAMlL,IAAMkL,EAAM/J,MAAQnjB,KAAKgjB,SAC/BhjB,KAAK8hB,oBAAoBoL,GAAS/J,MAAO+J,EAAM/J,OAASnjB,KAAKgjB,SAAWkK,EAAMlL,IAAMkL,EAAM/J,WAGlGrD,EAAgB5f,UAAU4hB,oBAAsB,SAAUoL,EAAOphB,GAC7D9L,KAAK0iB,wBAAyB,EAE9BwK,EAAMrf,cAAc/B,GAAO,IAE/BgU,EAAgB5f,UAAU0kB,qBAAuB,SAAUqJ,GACvD,GAAIjuB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAS,GAAKX,KAAK6hB,OAAOlhB,OAAS,EAC7E,IAAK,IAAI4F,EAAI,EAAGA,EAAI0nB,EAAMttB,OAAQ4F,IAAK,CACnCvG,KAAK+gB,oBAAoBzS,KAAK2f,EAAM1nB,IAC9BvG,KAAKwN,UAAYxN,KAAK6hB,OAAOlhB,OAAS,GACxCX,KAAK6jB,gBAAgBoK,EAAM1nB,KAE3BvG,KAAK8jB,eAAiBmK,EAAM1nB,GAAGyb,KAAOhiB,KAAK8jB,eAAkBmK,EAAM1nB,GAAGyb,IAAMiM,EAAM1nB,GAAG4c,QACrFnjB,KAAK8hB,oBAAoBmM,EAAM1nB,IAAMyb,IAAKhiB,KAAK8jB,eAAiBmK,EAAM1nB,GAAG4c,QAE7E,IAAI+K,EAAOluB,KAAK4tB,WAAWK,EAAM1nB,IAAI,EAAOA,GACvCvG,KAAKwN,WACFxN,KAAKiG,WACLsC,YAAU2lB,GAAO,SAErBluB,KAAKqD,QAAQoO,YAAYyc,IAEzBluB,KAAKsiB,mBAAqB/b,IAAM0nB,EAAMttB,OAAS,EAC/CX,KAAK2kB,yBAGL3kB,KAAKqjB,iBAAiB6K,EAAMD,EAAM1nB,GAAGwb,IAAKkM,EAAM1nB,GAAGyb,KACnDhiB,KAAKukB,YAAc2J,EACnBluB,KAAKwkB,kBAAkB0J,EAAMD,EAAM1nB,IACnCvG,KAAKukB,YAAc,MAI/BvkB,KAAKykB,WAAWzkB,KAAK6gB,kBAEzBf,EAAgB5f,UAAUmrB,WAAa,SAAUtJ,EAAKC,EAAKmB,EAAOC,EAAO+K,GACrE,IAAIC,KACCjL,GAAUC,IACXD,EAAQC,EAAQ,IAEhB+K,GAAYA,aAAkBvuB,QAC9BuuB,GAAUA,IAGd,IAAK,IADDniB,EACKqiB,EAAI,EAAGA,EAAIjL,IAASiL,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAInL,IAASmL,IACzBtiB,EAAOhM,KAAKuuB,SAASxM,EAAMsM,EAAGrM,EAAMsM,EAAGH,KACzBA,IAAgE,IAAtDA,EAAO3jB,QAAQjB,SAASoc,eAAe3Z,EAAK2R,OACX,IAArDyQ,EAAM5jB,QAAQjB,SAASoc,eAAe3Z,EAAK2R,MAC3CyQ,EAAM9f,KAAK/E,SAASoc,eAAe3Z,EAAK2R,KAIpD,OAAOyQ,GAGXtO,EAAgB5f,UAAUsuB,wBAA0B,SAAUC,EAAazM,EAAKtF,GAC5E,IAAIpZ,EAAQtD,KACRgjB,KACA0L,KAeJ,GAdAD,EAAYrhB,QAAQ,SAAU/J,GAC1B,IAAIgpB,EAAchmB,SAAShD,EAAQqJ,aAAa,YAAa,IACzDiiB,EAAatoB,SAAShD,EAAQqJ,aAAa,cAAe,IAC9D,GAAIsV,EAAM1e,EAAM0f,SAAWqJ,GAAerK,EACtC,GAAI2M,EAAa,EACb,IAAK,IAAI3tB,EAAIqrB,EAAarrB,EAAIqrB,EAAcsC,EAAY3tB,IACpDgiB,EAAQ1U,KAAKtN,QAIjBgiB,EAAQ1U,KAAK+d,KAIrBrJ,EAAQriB,OAAS,EACjB,IAAK,IAAIK,EAAIghB,EAAM,EAAGhhB,GAAKhB,KAAKgjB,QAAU,EAAGhiB,KACb,IAAxBgiB,EAAQxY,QAAQxJ,IAAaA,IAAMghB,IACD,IAA9B0M,EAAclkB,QAAQxJ,IACtB0tB,EAAcpgB,KAAKtN,GAKnC,IAAI4tB,EAAiB5uB,KAAK6uB,mBAAmBnS,EAAK,SAClDkS,EAAexhB,QAAQ,SAAU2W,GACzBA,EAAW/B,IAA4C,IAArC0M,EAAclkB,QAAQuZ,IACxC2K,EAAc5P,OAAO4P,EAAclkB,QAAQuZ,GAAW,KAW9D,OARwB/jB,KAAK6uB,mBAAmB7uB,KAAK8uB,gBAAiB,QACpD1hB,QAAQ,SAAU4U,GAC5BA,EAAM3b,SAASqW,EAAIhQ,aAAa,YAAa,MAAwC,IAAjCkiB,EAAepkB,QAAQwX,KAC3C,IAAhC0M,EAAclkB,QAAQwX,IACtB0M,EAAcpgB,KAAK0T,KAG3B0M,EAAgBA,EAAcve,KAAK,SAAU4e,EAAM/W,GAAY,OAAO+W,EAAO/W,KAGjF8H,EAAgB5f,UAAU2uB,mBAAqB,SAAUxrB,EAAS0H,GAI9D,IAAK,IAHDikB,KACA7L,EAAQ9c,SAAShD,EAAQqJ,aAAa,cAAe,IACrDsV,EAAM3b,SAAShD,EAAQqJ,aAAa,YAAa,IAC5C1L,EAAIghB,EAAMhhB,EAAIghB,EAAMmB,GAASniB,GAAKhB,KAAKgjB,QAAUhiB,IACtDguB,EAAc1gB,KAAKtN,GAEvB,OAAOguB,GAEXlP,EAAgB5f,UAAU+uB,uBAAyB,SAAUR,EAAazM,EAAKtF,GAC3E,IAAIpZ,EAAQtD,KACR0uB,KACA1L,KAeJ,GAdAyL,EAAYrhB,QAAQ,SAAU/J,GAC1B,IAAI0gB,EAAW1d,SAAShD,EAAQqJ,aAAa,YAAa,IACtDqhB,EAAS1nB,SAAShD,EAAQqJ,aAAa,cAAe,IAC1D,GAAIsV,GAAO1e,EAAM0f,SAAWe,GAAY/B,EACpC,GAAI+L,EAAS,EACT,IAAK,IAAI/sB,EAAI+iB,EAAU/iB,EAAI+iB,EAAWgK,EAAQ/sB,IAC1CgiB,EAAQ1U,KAAKtN,QAIjBgiB,EAAQ1U,KAAKyV,KAIrBf,EAAQriB,OAAS,EACjB,IAAK,IAAIK,EAAI,EAAGA,GAAKghB,EAAKhhB,KACM,IAAxBgiB,EAAQxY,QAAQxJ,IAAaA,IAAMghB,IACD,IAA9B0M,EAAclkB,QAAQxJ,IACtB0tB,EAAcpgB,KAAKtN,GAKnC,IAAI4tB,EAAiB5uB,KAAK6uB,mBAAmBnS,EAAK,QAClDkS,EAAexhB,QAAQ,SAAU2W,GACzBA,EAAW/B,IAA4C,IAArC0M,EAAclkB,QAAQuZ,IACxC2K,EAAc5P,OAAO4P,EAAclkB,QAAQuZ,GAAW,KAY9D,OATwB/jB,KAAK6uB,mBAAmB7uB,KAAK8uB,gBAAiB,QACpD1hB,QAAQ,SAAU4U,GAC5BA,EAAM3b,SAASqW,EAAIhQ,aAAa,YAAa,MAAwC,IAAjCkiB,EAAepkB,QAAQwX,KAC3C,IAAhC0M,EAAclkB,QAAQwX,IACtB0M,EAAcpgB,KAAK0T,KAG3B0M,EAAgBA,EAAcve,KAAK,SAAU4e,EAAMG,GAAQ,OAAOH,EAAOG,IACzER,EAAgBA,EAAcS,WAGlCrP,EAAgB5f,UAAUkvB,oBAAsB,SAAUrN,EAAKC,EAAKoB,EAAOD,EAAOzG,GAC9E1c,KAAKqvB,oBAAiBvE,EACtB9qB,KAAKsvB,qBAAkBxE,EACvB,IACIyE,EACAC,EAFAC,GAAe,EAGfC,KACJ1vB,KAAK2vB,mBAAgB7E,EACrB,IAAI8E,EAAWvpB,SAASqW,EAAIhQ,aAAa,cAAe,IACpDmjB,EAASxpB,SAASqW,EAAIhQ,aAAa,YAAa,IAoCpD,IAlCiC,KADjCgjB,EAAa1vB,KAAK8vB,eAAe9vB,KAAKqrB,WAAWtJ,EAAK,EAAG/hB,KAAKgjB,QAASI,QACxD5Y,QAAQkS,IACnBgT,EAAWphB,KAAKoO,IAEpB6S,EAAcvvB,KAAKivB,uBAAuBS,EAAY1N,EAAKtF,IAC3C/b,OAAS,GACrBX,KAAKqvB,eAAiBrvB,KAAK+vB,iBAAiBR,EAAa7S,EAAKqF,EAAKC,EAAKmB,EAAOC,GAC3EpjB,KAAKgwB,oBAAsBH,EAAS7vB,KAAKmpB,gBAAgBnpB,KAAK8uB,gBAAgBnR,IAAIwF,QAClFnjB,KAAKqvB,gBAAiB,GAEtBrvB,KAAKqvB,eACLrvB,KAAKsvB,iBAAkB,GAGvBtvB,KAAKqvB,gBAAiB,EACtBG,EAAexvB,KAAKwuB,wBAAwBkB,EAAY1N,EAAKtF,GAC7D1c,KAAKsvB,gBAAkBE,EAAa7uB,OAAS,GAAIX,KAAKiwB,kBAAkBT,EAAc9S,EAAKqF,EAAKC,EAAKmB,EAAOC,GACxGpjB,KAAKgwB,oBAAsBJ,EAAWC,IACtC7vB,KAAKsvB,iBAAkB,GAEtBtvB,KAAKsvB,kBACNtvB,KAAKsvB,iBAAkB,MAK/BE,EAAexvB,KAAKwuB,wBAAwBkB,EAAY1N,EAAKtF,GAC7D1c,KAAKsvB,gBAAkBE,EAAa7uB,OAAS,GAAIX,KAAKiwB,kBAAkBT,EAAc9S,EAAKqF,EAAKC,EAAKmB,EAAOC,GACxGpjB,KAAKgwB,oBAAsBJ,EAAWC,IACtC7vB,KAAKsvB,iBAAkB,GAEvBtvB,KAAKsvB,kBACLtvB,KAAKqvB,gBAAiB,KAGzBrvB,KAAKsvB,kBAAoBtvB,KAAKqvB,gBAAkBtN,EAAM,EAAG,CAC1D,IAAImO,EAASlwB,KAAKmpB,gBAAgBzM,EAAIiB,IAAIoE,IACtCoO,GAAW,EACXnwB,KAAKowB,WAAaF,IAClBC,GAAW,GAEf,IAAK,IAAI/D,EAAWrK,EAAKqK,GAAY,EAAGA,IAAY,CAChD,IAAI/oB,EAAWrD,KAAKmpB,gBAAgBzM,EAAIiB,IAAIyF,MAAQ,GAAK+M,EAAYnwB,KAAK8uB,gBAAkBpS,EACvF0P,IAAa8D,GAAY9D,IAAa8D,EAAS9M,GACiB,IAAjEpjB,KAAKqrB,WAAWe,EAAUpK,EAAKmB,EAAOC,EAAO/f,GAAS1C,SACtDwvB,GAAW,EACXnwB,KAAK2vB,eAAgB,EACrB3vB,KAAKqwB,eAAiB3pB,oBAAkB1G,KAAKqwB,gBAAkBjE,EAAWpsB,KAAKqwB,eAC/ErwB,KAAKgwB,kBAAoBhO,IAUrC,OANIhiB,KAAKsvB,iBAAmBtvB,KAAKqvB,gBAAkBrvB,KAAK2vB,iBACpDF,GAAe,EACX/oB,oBAAkB1G,KAAKqwB,kBACvBrwB,KAAKqwB,eAAiBtO,IAGvB0N,GAEX3P,EAAgB5f,UAAUowB,oBAAsB,SAAUC,EAASpN,GAG/D,IAAK,IAFDqN,GAAmB,EACnBC,KACKzvB,EAAI,EAAGA,EAAIuvB,EAAQ5vB,OAAQK,IAChC,GAAIuvB,EAAQvvB,EAAI,GAAKuvB,EAAQvvB,IAAO,GAAKuvB,EAAQvvB,EAAI,GAAKuvB,EAAQvvB,KAAQ,GAWtE,GAVAyvB,EAAkBniB,KAAKiiB,EAAQvvB,IACjB,IAAVmiB,GACAsN,EAAkBniB,KAAKiiB,EAAQvvB,EAAI,IAEnCA,IAAMuvB,EAAQ5vB,OAAS,IACvB8vB,EAAkBniB,KAAKiiB,EAAQvvB,EAAI,IAC/ByvB,EAAkB9vB,OAASwiB,GAC3BsN,EAAkB3R,QAAQ,IAG9B2R,EAAkB9vB,SAAWwiB,EAM7B,OALAqN,GAAmB,EACnBxwB,KAAKgwB,kBAAoBS,EAAkBtgB,KAAK,SAAU4e,EAAM/W,GAAY,OAAO+W,EAAO/W,IAAa,GACnGhY,KAAKgwB,kBAAoB,IACzBhwB,KAAKgwB,kBAAoB,GAEtBQ,OAIXC,KAIR,OAAOD,GAEX1Q,EAAgB5f,UAAU4vB,eAAiB,SAAUY,GAEjD,IAAK,IADDjC,KACKztB,EAAI,EAAGA,EAAI0vB,EAAK/vB,OAAQK,IAC7BytB,EAAYngB,KAAKoiB,EAAK1vB,IAE1B,OAAOytB,GAEX3O,EAAgB5f,UAAU6vB,iBAAmB,SAAUY,EAAQjU,EAAKqF,EAAKC,EAAKmB,EAAOC,GACjF,IAAIwN,EACJ,GAAc,IAAVzN,GAAyB,IAAVC,GAAeuN,EAAOhwB,OAAS,EAC9CX,KAAKgwB,kBAAoBW,EAAO,GAChCC,GAAmB,OAElB,GAAIzN,EAAQ,GAAe,IAAVC,EAClBwN,EAAmB5wB,KAAKswB,oBAAoBK,EAAQxN,QAEnD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAI0N,OAAU,EAId,GAHIF,EAAOhwB,QAAU,IACjBkwB,GAAU,GAEVA,EACA,IAAK,IAAI7vB,EAAI,EAAGA,EAAI2vB,EAAOhwB,OAAQK,IAAK,CAEpC,GAA8B,IADThB,KAAKqrB,WAAWtJ,EAAK4O,EAAO3vB,GAAImiB,EAAOC,EAAOpjB,KAAK8uB,iBACrDnuB,OAGf,OAFAX,KAAKgwB,kBAAoBW,EAAO3vB,GAChC4vB,GAAmB,EAInBA,GAAmB,QAM/BA,EAAmB5wB,KAAK8wB,WAAWH,EAAQxN,EAAOpB,EAAKqB,EAAO1G,GAGtE,OAAOkU,GAEX9Q,EAAgB5f,UAAU+vB,kBAAoB,SAAUM,EAAS7T,EAAKqF,EAAKC,EAAKmB,EAAOC,GACnF,IAAI2N,EACJ,GAAc,IAAV5N,GAAyB,IAAVC,GAAemN,EAAQ5vB,OAAS,EAC/CX,KAAKgwB,kBAAoBO,EAAQ,GACjCQ,GAAoB,OAEnB,GAAI5N,EAAQ,GAAe,IAAVC,EAClB2N,EAAoB/wB,KAAKswB,oBAAoBC,EAASpN,QAErD,GAAIC,EAAQ,EACb,GAAc,IAAVD,EAAa,CACb,IAAI0N,OAAU,EAId,GAHIN,EAAQ5vB,QAAU,IAClBkwB,GAAU,GAEVA,EACA,IAAK,IAAI7vB,EAAI,EAAGA,EAAIuvB,EAAQ5vB,OAAQK,IAAK,CAErC,IAAK,IADDgwB,EAAiBhxB,KAAKqrB,WAAWtJ,EAAKwO,EAAQvvB,GAAImiB,EAAOC,EAAOpjB,KAAK8uB,iBAChEmC,EAAY,EAAGA,EAAYD,EAAerwB,OAAQswB,IACnD5qB,SAASqW,EAAIhQ,aAAa,YAAa,MAAQ6jB,EAAQvvB,IACvDgwB,EAAelS,OAAOkS,EAAexmB,QAAQwmB,EAAeC,IAAa,GAGjF,GAA8B,IAA1BD,EAAerwB,OAGf,OAFAowB,GAAoB,EACpB/wB,KAAKgwB,kBAAoBO,EAAQvvB,GAC1B+vB,EAGPA,GAAoB,QAMhCA,EAAoB/wB,KAAK8wB,WAAWP,EAASpN,EAAOpB,EAAKqB,EAAO1G,GAGxE,OAAOqU,GAEXjR,EAAgB5f,UAAU4wB,WAAa,SAAUP,EAASpN,EAAOpB,EAAKqB,EAAO1G,GAGzE,IAAK,IAFDqU,EACAG,KACK3qB,EAAI,EAAGA,EAAIgqB,EAAQ5vB,OAAQ4F,IAAK,CAErC,GADcvG,KAAKswB,oBAAoBC,EAASpN,GACnC,CACT,IAAIgO,KAGJ,GAFAA,EAAW7iB,KAAKtO,KAAK8uB,iBACrBqC,EAAW7iB,KAAKoO,GACgB,IAA5BwU,EAAiBvwB,OAGjB,OAFAowB,GAAoB,EACpB/wB,KAAKgwB,kBAAoBhwB,KAAKgwB,kBACvBe,EAGPA,GAAoB,GAIhC,OAAOA,GAEXjR,EAAgB5f,UAAUkxB,mBAAqB,SAAUC,GAsBrD,IAAK,IApBD5C,EADAyC,KAEAI,EAAU,SAAUvP,GACpB0M,KACA4C,EAAejkB,QAAQ,SAAU/J,GACzBA,GAAWA,EAAQqJ,aAAa,cAAgBqV,EAAItJ,YACpDgW,EAAYngB,KAAKjL,KAUzB,IAAK,IAPDkuB,EAAU,SAAUhF,GACpBkC,EAAYrhB,QAAQ,SAAUpB,GACtBA,GAAQA,EAAKU,aAAa,cAAgB6f,EAAO9T,YACjDyY,EAAiB5iB,KAAKtC,MAIzBugB,EAASiF,EAAOxO,QAAU,EAAGuJ,GAAU,EAAGA,IAC/CgF,EAAQhF,IAGZiF,EAASxxB,KACJ+hB,EAAM/hB,KAAK+f,KAAO,EAAGgC,GAAO,EAAGA,IACpCuP,EAAQvP,GAEZ,OAAOmP,GAEXpR,EAAgB5f,UAAUuxB,cAAgB,SAAUJ,EAAgB/K,EAAY5J,GAC5E,IAAIpZ,EAAQtD,KACR0xB,KAwBJ,OAvBK1xB,KAAKukB,aACNvkB,KAAK+kB,cAETsM,EAAejkB,QAAQ,SAAU/J,GAC7BC,EAAMwrB,gBAAkBzrB,EACxB,IAAI0jB,EAAQzjB,EAAM6lB,gBAAgB9lB,EAAQsa,IACtCgU,GAAUruB,EAAM8rB,oBAAoBrI,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM3D,MAAO2D,EAAM5D,MAAOzG,GACxF,GAAIqK,EAAM5D,MAAQ,GAAKwO,EACnB,IAAK,IAAIvF,EAAWrF,EAAMhF,IAAKqK,EAAW9F,EAAWvE,IAAMuE,EAAWlD,MAAOgJ,IAAY,CACpE9oB,EAAM+nB,WAAWe,EAAUrF,EAAM/E,IAAK+E,EAAM5D,MAAO4D,EAAM3D,MAAO/f,GACtE+J,QAAQ,SAAUpB,GACrBqlB,EAAe7mB,QAAQwB,IAAS,IAA0C,IAArC0lB,EAAkBlnB,QAAQwB,IAC/D0lB,EAAkBpjB,KAAKtC,QAM3C0lB,EAAkBtkB,QAAQ,SAAUpB,GAC5B0lB,EAAkBlnB,QAAQwB,IAAS,GACnCqlB,EAAevS,OAAOuS,EAAe7mB,QAAQwB,GAAO,KAGrDqlB,GAEXvR,EAAgB5f,UAAU0xB,YAAc,SAAU7K,EAAO1jB,GACrD,IAAIgoB,EAAarrB,KAAKqrB,WAAWtE,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM5D,MAAO4D,EAAM3D,MAAOpjB,KAAKukB,aACtF,IAAKvkB,KAAKukB,aAAevkB,KAAKqtB,gBAAkBrtB,KAAKkgB,cAAgBlgB,KAAKigB,gBACtE,OAAOoL,EAEX,GAAIrrB,KAAKukB,aAAevkB,KAAKwhB,YAAcxhB,KAAK6xB,YAC5C,IAAK,IAAI7wB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAAK,CACzC,IAAI8wB,EAAYvoB,SAASoc,eAAe3lB,KAAK6hB,OAAO7gB,GAAG2c,IACvD,GAAImU,IAAc9xB,KAAKukB,YAAvB,CAGA,IAAI6H,EAAWpsB,KAAK6xB,YAAYC,EAAUnU,IAAIoE,IAC1CgC,EAAW/jB,KAAK6xB,YAAYC,EAAUnU,IAAIqE,IAC9ChiB,KAAKqjB,iBAAiByO,EAAW1F,EAAUrI,GAC3C/jB,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgB2I,EAAUnU,KAAOoE,IAAKqK,EAAUpK,IAAK+B,IACnF/jB,KAAKkjB,eAAgBpX,OAASkW,IAAK+B,EAAStL,WAAYsJ,IAAKqK,EAAS3T,aAAgBqZ,GACtF9xB,KAAK0kB,sBAWb,OARA1kB,KAAK8gB,YAAc9gB,KAAK+xB,WACxB1G,EAAarrB,KAAKqrB,WAAWtE,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM5D,MAAO4D,EAAM3D,MAAOpjB,KAAKukB,aAClFvkB,KAAK+kB,cACL/kB,KAAK0kB,qBACD1kB,KAAKgyB,gBAAkBhyB,KAAKgyB,eAAerxB,OAAS,IAAqD,IAAhD0qB,EAAW7gB,QAAQxK,KAAKgyB,eAAe,KAChGhyB,KAAK6xB,YAAY7xB,KAAKgyB,eAAe,GAAGrU,IAAIoE,MAAQgF,EAAMhF,KAC1DsJ,EAAW/c,KAAKtO,KAAKgyB,eAAe,IAEjC3G,GAEXvL,EAAgB5f,UAAU+xB,iBAAmB,SAAU5G,EAAYhoB,GAG/D,IAAK,IAFD6uB,GAAY,EACZC,EAAWnyB,KAAKmpB,gBAAgB9lB,EAAQsa,IACnCyU,EAAQ,EAAGA,EAAQ/G,EAAW1qB,OAAQyxB,IAE3C,IAAK,IADDC,EAAeryB,KAAKmpB,gBAAgBkC,EAAW+G,GAAOzU,IACjD3c,EAAI,EAAGA,EAAImxB,EAAS/O,MAAOpiB,IAAK,CACrC,IAAIsxB,KACJA,EAAWhkB,KAAKjL,GAChBivB,EAAWhkB,KAAK+c,EAAW+G,IAG3B,GADYpyB,KAAKqrB,WAAW8G,EAASpQ,IAAM/gB,EAAGqxB,EAAarQ,IAAKqQ,EAAalP,MAAOkP,EAAajP,MAAOkP,GAC1F3xB,OAAS,EAEnB,OADAuxB,GAAY,GACL,EAOnB,OAAOA,GAEXpS,EAAgB5f,UAAUqyB,iBAAmB,SAAUlH,EAAYhoB,EAASijB,GACxE,IAAKtmB,KAAKukB,aAAqC,IAAtB8G,EAAW1qB,OAChC,OAAO,EAEX,IAAI6xB,EACAC,EAAapsB,SAASglB,EAAW,GAAG3e,aAAa,YAAa,IAOlE,GANI1M,KAAKowB,SAAWqC,EAChBD,EAAY,EAEPxyB,KAAKowB,SAAWqC,IACrBD,EAAY,IAEXxyB,KAAKiyB,iBAAiB5G,EAAYhoB,GACnC,OAAO,EAGX,IAAK,IADDqvB,GAAc,EACTC,EAAS,EAAGA,EAAStH,EAAW1qB,OAAQgyB,IAC7C,GAAItH,EAAW1qB,QAAU,GAAKX,KAAK6xB,YAAY7xB,KAAKukB,YAAY5G,IAAIoE,MAAQ/hB,KAAKwhB,UAAUxhB,KAAKukB,YAAY5G,IAAIoE,IAC5G,OAAO,EAMf,IAAK,IAHD6Q,EAA2B,IAAdJ,EACbxyB,KAAKmpB,gBAAgBnpB,KAAKukB,YAAY5G,IAAIoE,IAAM/hB,KAAKmpB,gBAAgBnpB,KAAKukB,YAAY5G,IAAIyF,MACxFpjB,KAAKowB,SACFgC,EAAQ,EAAGA,EAAQ/G,EAAW1qB,OAAQyxB,IAAS,CACpD,IAAIS,EAAkB7yB,KAAKmpB,gBAAgBkC,EAAW+G,GAAOzU,IACzDmV,EAAkB9yB,KAAKmpB,gBAAgB9lB,EAAQsa,IAC/CwQ,KACJ,GAA8B,IAA1B0E,EAAgBzP,QAAsD,IAAvC+K,EAAO3jB,QAAQ6gB,EAAW+G,IACzDjE,EAAO7f,KAAK+c,EAAW+G,SAEtB,GAAIS,EAAgBzP,MAAQ,IAA4C,IAAvC+K,EAAO3jB,QAAQ6gB,EAAW+G,IAC5D,GAAkB,IAAdI,GAAmBM,EAAgB/Q,MAAS/hB,KAAK6xB,YAAYgB,EAAgBlV,IAAIoE,IAAM8Q,EAAgBzP,MAAQ,EAC/G+K,EAAO7f,KAAK+c,EAAW+G,QAEtB,CAAA,GAAkB,IAAdI,GAAmBM,EAAgB/Q,MAAS/hB,KAAK6xB,YAAYgB,EAAgBlV,IAAO,IAIzF,OAAO,EAHPwQ,EAAO7f,KAAK+c,EAAW+G,IAM3BS,EAAgBzP,OAAS0P,EAAgB1P,QAAgD,IAAvC+K,EAAO3jB,QAAQ6gB,EAAW+G,KAC5EjE,EAAO7f,KAAK+c,EAAW+G,IAK3B,GAFAjE,EAAO7f,KAAKtO,KAAKukB,aACDvkB,KAAKqrB,WAAWuH,EAAYC,EAAgB7Q,IAAK6Q,EAAgB1P,MAAO0P,EAAgBzP,MAAO+K,GAC7FxtB,OAAS,EAEvB,OADA+xB,GAAc,EAIVN,IAAU/G,EAAW1qB,OAAS,IAC9B+xB,GAAc,GAK1B,OAAOA,GAEX5S,EAAgB5f,UAAU6yB,UAAY,SAAU1H,EAAYhoB,EAASijB,GACjE,IACIkM,EADAlvB,EAAQtD,KAERgzB,KACJA,EAAgB1kB,KAAKjL,GACrB,IAAIovB,EAAapsB,SAASglB,EAAW,GAAG3e,aAAa,YAAa,IAC9D1M,KAAKowB,SAAWqC,EAChBD,EAAY,EAEPxyB,KAAKowB,SAAWqC,IACrBD,EAAY,GAEhB,IAAIS,EAAkC,IAAdT,EAAkBC,EAAanM,EAAWlD,MAAQpjB,KAAKowB,SAC/E,IAAKpwB,KAAKigB,gBAAiB,CACvB,IAAIiT,EAAoBlzB,KAAKmpB,gBAAgBkC,EAAW,GAAG1N,IAC3D3d,KAAK8hB,oBAAoBwE,GAAcvE,IAAmB,IAAdyQ,EAAkBC,EAAaQ,EAAoBC,EAAkB9P,QAErH,IAAK,IAAIgP,EAAQ,EAAGA,EAAQ/G,EAAW1qB,OAAQyxB,IAC3CY,EAAgB1kB,KAAK+c,EAAW+G,IAChCpyB,KAAKqjB,iBAAiBgI,EAAW+G,GAAQa,EAAoBjzB,KAAKmpB,gBAAgBkC,EAAW+G,GAAOzU,IAAKqE,KACzGhiB,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBkC,EAAW+G,GAAOzU,KAAOoE,IAAKkR,IAC5E5H,EAAW+G,GAAOtgB,aAAa,WAAYmhB,EAAkBxa,YAEjEpV,EAAQyO,aAAa,WAAYwU,EAAWvE,IAAItJ,YAChDzY,KAAKqjB,iBAAiBrjB,KAAK6oB,UAAWvC,EAAWvE,IAAKuE,EAAWtE,KACjE,IAAK,IAAIhhB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IACpChB,KAAKwhB,UAAUxhB,KAAK6hB,OAAO7gB,GAAG2c,KAAQoE,IAAK/hB,KAAK6hB,OAAO7gB,GAAG+gB,IAAKC,IAAKhiB,KAAK6hB,OAAO7gB,GAAGghB,KAEvFhiB,KAAKowB,SAAW9J,EAAWvE,IAC3B/hB,KAAK0kB,qBACLsO,EAAgB5lB,QAAQ,SAAUpB,GAC9B1I,EAAMuuB,YAAY7lB,EAAK2R,IAAMra,EAAMke,UAAUxV,EAAK2R,IAElD,IAAK,IADDwV,EAAY7vB,EAAM6lB,gBAAgBnd,EAAK2R,IAClC3c,EAAI,EAAGA,EAAIsC,EAAMwd,YAAYngB,OAAQK,IAC1C,GAAKsC,EAAMwd,YAAY9f,GAGvB,IAAK,IAAIuF,EAAI,EAAGA,EAAIjD,EAAMwd,YAAY9f,GAAGL,OAAQ4F,IACzCjD,EAAMwd,YAAY9f,GAAGuF,KAAOyF,IAC5B1I,EAAMwd,YAAY9f,GAAGuF,QAAKukB,GAIjCxnB,EAAMwd,YAAYqS,EAAUpR,OAC7Bze,EAAMwd,YAAYqS,EAAUpR,SAEhCze,EAAMwd,YAAYqS,EAAUpR,KAAKoR,EAAUnR,KAAOhW,EAClD1I,EAAMyuB,WAAazuB,EAAMwd,eAGjChB,EAAgB5f,UAAUskB,kBAAoB,SAAUnhB,EAASijB,GAC7DtmB,KAAKmhB,oBACL,IAAIiS,KAEAC,KAQJ,IALID,EADApzB,KAAKukB,aAAevkB,KAAKoiB,iBACVpiB,KAAK4xB,YAAYtL,EAAYjjB,GAG7BrD,KAAKqrB,WAAW/E,EAAWvE,IAAKuE,EAAWtE,IAAKsE,EAAWnD,MAAOmD,EAAWlD,MAAO/f,IAEtF1C,OAAS,EAItB,GAHAyyB,EAAepzB,KAAKoxB,mBAAmBgC,GACvCA,EAAepzB,KAAKyxB,cAAc2B,EAAc9M,EAAYjjB,IACvCqD,oBAAkB1G,KAAKowB,WAAYpwB,KAAKuyB,iBAAiBa,EAAc/vB,EAASijB,GAEjGtmB,KAAK+yB,UAAUK,EAAc/vB,EAASijB,QAGtC,IAAK,IAAItlB,EAAI,EAAGA,EAAIoyB,EAAazyB,OAAQK,IAAK,CAC1C,IAAI+lB,EAAQ/mB,KAAKmpB,gBAAgBiK,EAAapyB,GAAG2c,IAKjD,GAJA3d,KAAK8uB,gBAAkBsE,EAAapyB,GACpChB,KAAKqwB,eAAiB,KACtBrwB,KAAKgwB,kBAAoB,KACJhwB,KAAKovB,oBAAoBrI,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM3D,MAAO2D,EAAM5D,MAAO9f,KACnEqD,oBAAkB1G,KAAKgwB,mBAAoB,CAClEhwB,KAAKqjB,iBAAiB+P,EAAapyB,GAAIhB,KAAKqwB,eAAgBrwB,KAAKgwB,mBACjEhwB,KAAKwhB,UAAW4R,EAAapyB,GAAK,KAAO+gB,IAAK/hB,KAAKqwB,eAAgBrO,IAAKhiB,KAAKgwB,mBAC7E,IAAIlkB,GACAkS,YACI+D,IAAK/hB,KAAKqwB,eAAe5X,WACzBuJ,IAAKhiB,KAAKgwB,kBAAkBvX,aAWpC,GARAzY,KAAKkjB,cAAcpX,EAAOsnB,EAAapyB,IACvChB,KAAK8hB,oBAAoBiF,GAAS/E,IAAKhiB,KAAKgwB,kBAAmBjO,IAAK/hB,KAAKqwB,iBAErErwB,KAAK2vB,eAAiB3vB,KAAK+qB,gBAC3B/qB,KAAKilB,eACLjlB,KAAKklB,0BAETllB,KAAKqwB,eAAiB,KAClBrvB,EAAIoyB,EAAazyB,OACjB,cAIJ0yB,EAAgB/kB,KAAK8kB,EAAapyB,IAKlD,GAAIqyB,EAAgB1yB,OAAS,EAAG,CAC5B,IAAI2yB,EAAUtzB,KACdqzB,EAAgBjmB,QAAQ,SAAUmmB,IACiB,IAA3CD,EAAQtS,eAAexW,QAAQ+oB,IAC/BD,EAAQtS,eAAe1S,KAAKilB,KAGhCvzB,KAAKghB,iBAA4D,IAA1ChhB,KAAKghB,eAAexW,QAAQnH,IACnDrD,KAAKghB,eAAelC,OAAO9e,KAAKghB,eAAexW,QAAQnH,GAAU,GAEjEgwB,EAAgB1yB,OAAS,IACzBX,KAAKwzB,gBAAgBlN,EAAWvE,IAAK/hB,KAAKghB,eAAgB3d,GAC1DrD,KAAKyzB,2BAGRzzB,KAAK0zB,YACN1zB,KAAK+kB,cAET/kB,KAAKujB,kBACLvjB,KAAKisB,mBAETnM,EAAgB5f,UAAUuzB,wBAA0B,WAChD,IAAK,IAAIzyB,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IACpC,GAAIhB,KAAKmhB,iBAAiBnhB,KAAK6hB,OAAO7gB,GAAG2c,KAAoD,OAA7C3d,KAAKmhB,iBAAiBnhB,KAAK6hB,OAAO7gB,GAAG2c,IAAc,CAC/F3d,KAAKghB,gBAAkBhhB,KAAKmhB,iBAAiBnhB,KAAK6hB,OAAO7gB,GAAG2c,IAAIjB,KAChE,IAAInc,EAAMP,KAAK6hB,OAAO7gB,GAAG2c,GACzB3d,KAAKwzB,gBAAgBxzB,KAAKmhB,iBAAiB5gB,GAAKwhB,IAAK/hB,KAAKghB,eAAgBhhB,KAAKmhB,iBAAiB5gB,GAAKozB,UAIjH7T,EAAgB5f,UAAU0zB,uBAAyB,SAAU5nB,GACzD,IAAK,IAAIomB,EAAQ,EAAGA,EAAQ3yB,OAAOsF,KAAK/E,KAAKmhB,kBAAkBxgB,OAAQyxB,IACnEpyB,KAAKmhB,iBAAiBnV,EAAK2R,IAAM,MAGzCmC,EAAgB5f,UAAUszB,gBAAkB,SAAUzR,EAAKrF,EAAKiX,GAC5D,GAAKA,EAAL,CAGA,IAAIE,EAAWxtB,SAASstB,EAAOjnB,aAAa,cAAe,IACvDonB,EAASztB,SAASstB,EAAOjnB,aAAa,YAAa,IACvD1M,KAAKihB,qBAAsBjhB,KAAKghB,gBAAmBhhB,KAAK+zB,eAAiB/zB,KAAKghB,gBAC9E,IAAK,IAAIhgB,EAAI,EAAGA,EAAIhB,KAAKihB,oBAAoBtgB,OAAQK,IAAK,CACtD,GAAwC,IAApChB,KAAKihB,oBAAoBtgB,OACzB,OAEJ,IAAK,IAAIqzB,EAAM,EAAGA,EAAMh0B,KAAKihB,oBAAoBtgB,OAAQqzB,IACrDh0B,KAAKmhB,iBAAiBnhB,KAAKihB,oBAAoB+S,GAAKrW,KAChDjB,IAAK1c,KAAKihB,oBAAoB+S,GAC9BjS,IAAKA,EACL4R,OAAQA,GAGhB,IAAIf,EAAakB,EAASD,EACtBI,EAAa5tB,SAASrG,KAAKihB,oBAAoBjgB,GAAG0L,aAAa,cAAe,IAC9EwnB,EAAe7tB,SAASrG,KAAKihB,oBAAoBjgB,GAAG0L,aAAa,YAAa,IAC9EynB,EAAa9tB,SAASrG,KAAKihB,oBAAoBjgB,GAAG0L,aAAa,cAAe,IAC9EqX,OAAW,EACXsP,OAAkB,EAOtB,IANqD,IAAjDrzB,KAAKkhB,uBAAuB1W,QAAQmpB,IACpC3zB,KAAKkhB,uBAAuB5S,KAAKqlB,IAEqC,IAAtE3zB,KAAKkhB,uBAAuB1W,QAAQxK,KAAKihB,oBAAoBjgB,KAC7DhB,KAAKkhB,uBAAuB5S,KAAKtO,KAAKihB,oBAAoBjgB,IAE1DizB,EAAa,GAAKE,EAAa,EAAG,CAClC,IAAIC,EAAsBp0B,KAAKmpB,gBAAgBnpB,KAAKihB,oBAAoBjgB,GAAG2c,IAC3EoG,EAAWqQ,EAAoBpS,IAE/B,IAAK,IADDqS,EAAQ9qB,SAASoc,eAAeyO,EAAoBzW,IAC/C2W,EAAIF,EAAoBrS,IAAKuS,EAAIR,EAASD,EAAUS,IAAK,CAC9Dt0B,KAAK0zB,YAAa,EAClB1zB,KAAK8hB,oBAAoBsS,GAAuBrS,IAAKqS,EAAoBrS,IAAM,IAC/EsS,EAAMviB,aAAa,WAAYsiB,EAAoBrS,IAAItJ,YACvDzY,KAAKqjB,iBAAiBgR,EAAOD,EAAoBrS,IAAKgC,GACtD/jB,KAAK4zB,uBAAuBS,GAC5Br0B,KAAKwhB,UAAW6S,EAAQ,KAAOtS,IAAKqS,EAAoBrS,IAAKC,IAAK+B,GAClE,IAAIuC,EAAatmB,KAAKmpB,gBAAgBkL,EAAM1W,IAC5C3d,KAAK8hB,oBAAoBwE,GAActE,IAAK+B,EAAUhC,IAAKqS,EAAoBrS,MAC/E,IAAIwS,EAAWluB,SAASguB,EAAM3nB,aAAa,YAAa,IACpDmjB,EAASxpB,SAASguB,EAAM3nB,aAAa,YAAa,IAClDyW,EAAQ9c,SAASguB,EAAM3nB,aAAa,cAAe,IACnD0W,EAAQ/c,SAASguB,EAAM3nB,aAAa,cAAe,IACnD8nB,KACJA,EAAgBlmB,KAAK+lB,GACrBG,EAAgBlmB,KAAKqlB,GACrBN,EAAkBrzB,KAAKqrB,WAAWkJ,EAAU1E,EAAQ1M,EAAOC,EAAOoR,GAC9Dx0B,KAAKukB,cAA8D,IAA/C8O,EAAgB7oB,QAAQxK,KAAKukB,cACjD8O,EAAgBvU,OAAOuU,EAAgB7oB,QAAQxK,KAAKukB,aAAc,GAEtEvkB,KAAKy0B,eAAepB,EAAiBxD,EAAQ0E,EAAUF,GAE3Dr0B,KAAK0zB,YAAa,MAEjB,CACG1zB,KAAKqtB,iBACLrtB,KAAKqtB,gBAAiB,GAE1BrtB,KAAKihB,oBAAoBjgB,GAAG8Q,aAAa,WAAY8gB,EAAWna,YAChE,IAAI6Z,KACJA,EAAWhkB,KAAKtO,KAAKihB,oBAAoBjgB,IACzCsxB,EAAWhkB,KAAKqlB,GAChBN,EAAkBrzB,KAAKqrB,WAAWuH,EAAYsB,EAAcC,EAAYF,EAAY3B,GAChFtyB,KAAKukB,cAA8D,IAA/C8O,EAAgB7oB,QAAQxK,KAAKukB,cACjD8O,EAAgBvU,OAAOuU,EAAgB7oB,QAAQxK,KAAKukB,aAAc,GAEtER,EAAW1d,SAASrG,KAAKihB,oBAAoBjgB,GAAG0L,aAAa,YAAa,IAC1E1M,KAAKqjB,iBAAiBrjB,KAAKihB,oBAAoBjgB,GAAI4xB,EAAY7O,GAC/D/jB,KAAK4zB,uBAAuB5zB,KAAKihB,oBAAoBjgB,IACrDhB,KAAKwhB,UAAWxhB,KAAKihB,oBAAoBjgB,GAAK,KAAO+gB,IAAK6Q,EAAY5Q,IAAK+B,GACvEuC,EAAatmB,KAAKmpB,gBAAgBnpB,KAAKihB,oBAAoBjgB,GAAG2c,IAClE3d,KAAK8hB,oBAAoBwE,GAActE,IAAK+B,EAAUhC,IAAK6Q,IAC3D5yB,KAAKy0B,eAAepB,EAAiBtP,EAAU6O,EAAY5yB,KAAKihB,oBAAoBjgB,QAIhG8e,EAAgB5f,UAAUu0B,eAAiB,SAAUpB,EAAiBtP,EAAU6O,EAAY8B,GACxF,IAAIpO,EAAatmB,KAAKmpB,gBAAgBuL,EAAM/W,IAE5C,GADA3d,KAAK8hB,oBAAoBwE,GAAcvE,IAAK6Q,EAAY5Q,IAAK+B,IACzDsP,EAAgB1yB,OAAS,EAAG,CAC5B,IAAIg0B,EAAU30B,KACdA,KAAKghB,kBACLhhB,KAAK+zB,gBAAiB,EACtBV,EAAgBjmB,QAAQ,SAAUmmB,GAC9BoB,EAAQ3T,eAAe1S,KAAKilB,KAGhC,IAAK,IADDqB,EAAqBvuB,SAASquB,EAAMhoB,aAAa,YAAa,IACzDkD,EAAI,EAAGA,EAAI5P,KAAKghB,eAAergB,OAAQiP,IAC5C5P,KAAKwzB,gBAAgBoB,EAAoB50B,KAAKghB,eAAgB0T,GAElE10B,KAAK+zB,gBAAiB,MAErB,CAID,GAHK/zB,KAAKqtB,gBACNrtB,KAAK+kB,cAEL/kB,KAAKkhB,uBAAuBvgB,OAAS,EAoBrC,IAAK,IAnBDk0B,EAAU,SAAUh1B,GACpB,IAAIi1B,EAASzuB,SAAS0uB,EAAO7T,uBAAuBrhB,GAAG6M,aAAa,YAAa,IAC7EsoB,EAAa3uB,SAAS0uB,EAAO7T,uBAAuBrhB,GAAG6M,aAAa,YAAa,IACjFyW,EAAQ9c,SAAS0uB,EAAO7T,uBAAuBrhB,GAAG6M,aAAa,cAAe,IAC9E0W,EAAQ/c,SAAS0uB,EAAO7T,uBAAuBrhB,GAAG6M,aAAa,cAAe,IAC9EuoB,OAAmB,EACvBA,EAAmBF,EAAO1J,WAAWyJ,EAAQE,EAAY7R,EAAOC,EAAO2R,EAAO7T,wBAC1E6T,EAAOxQ,cAAiE,IAAlD0Q,EAAiBzqB,QAAQuqB,EAAOxQ,cACtD0Q,EAAiBnW,OAAOmW,EAAiBzqB,QAAQuqB,EAAOxQ,aAAc,GAE1E,IAAIxS,EAAQgjB,EACZE,EAAiB7nB,QAAQ,SAAUmmB,GAC/BxhB,EAAMiP,eAAe1S,KAAKilB,KAE1B0B,EAAiBt0B,OAAS,GAC1Bo0B,EAAOvB,gBAAgBsB,EAAQC,EAAO/T,eAAgB+T,EAAO7T,uBAAuBrhB,KAGxFk1B,EAAS/0B,KACJH,EAAI,EAAGA,EAAIG,KAAKkhB,uBAAuBvgB,OAAQd,IACpDg1B,EAAQh1B,GAGhBG,KAAKkhB,4BAGbpB,EAAgB5f,UAAUysB,oBAAsB,SAAUlJ,GACtD,IAAK,IAAIziB,EAAI,EAAGA,EAAIyiB,EAAc9iB,OAAQK,IAGtC,IAAK,IADDk0B,EADUzR,EAAcziB,GACEwR,iBAAiB,aACtC2iB,EAAM,EAAGA,EAAMD,EAAgBv0B,OAAQw0B,IAC5C7nB,SAAO4nB,EAAgBC,KAInCrV,EAAgB5f,UAAUk1B,WAAa,WACnCp1B,KAAK4sB,cAAc5sB,KAAKohB,gBACxB,IAAIiU,EAAar1B,KAAKqD,QAAQmP,iBAAiB,IAAMgN,GACrDnX,cAAYgtB,GAAa7V,IACzBxf,KAAKykB,WAAWzkB,KAAK6gB,kBAEzBf,EAAgB5f,UAAUukB,WAAa,SAAU5D,GAC7C,IAAK,IAAI7f,EAAI,EAAGA,EAAI6f,EAAgBlgB,OAAQK,IAAK,CAC7C,IAAIqC,EAAUwd,EAAgB7f,GAC1Bs0B,EAAezU,EAAgB7f,GAAGgN,cAAc,sBAChDhO,KAAK6kB,gBACD7kB,KAAKu1B,iBAAmBlyB,EAAQmP,iBAAiBxS,KAAKu1B,iBAAiB,GACvEhtB,YAAUlF,EAAQmP,iBAAiBxS,KAAKu1B,iBAAiB,KAAM/V,IAG/DjX,YAAUlF,IAAWmc,KAGzBxf,KAAKynB,eACLznB,KAAKokB,aAAepkB,KAAKsiB,mBACzBtiB,KAAKw1B,iBAAiBnyB,EAASiyB,KAI3CxV,EAAgB5f,UAAUs1B,iBAAmB,SAAU9Y,EAAK+Y,GACxDz1B,KAAKyhB,iBAAmBzhB,KAAK01B,iBAC7B,IAAK,IAAInvB,EAAI,EAAGA,EAAIvG,KAAKyhB,iBAAiB9gB,OAAQ4F,IAAK,CACnD,IAAIovB,EAAU31B,KAAKwR,cAAc,QAC7BokB,OAAgB,EACpBH,EAAUhkB,YAAYkkB,GAGlBC,EAF6B,WAA7B51B,KAAKyhB,iBAAiBlb,IAAgD,WAA7BvG,KAAKyhB,iBAAiBlb,IAClC,YAA7BvG,KAAKyhB,iBAAiBlb,IAAiD,YAA7BvG,KAAKyhB,iBAAiBlb,GAl2DnE,WACA,WAu2DDgC,YAAUotB,IAAWC,EAAe51B,KAAKyhB,iBAAiBlb,GA/2DzD,WACI,gBAi3DbuZ,EAAgB5f,UAAU8jB,gBAAkB,SAAU3gB,EAASijB,GAC3D,IAAIxa,GACAA,OACIqX,MAAOmD,EAAWnD,MAAM1K,WACxB2K,MAAOkD,EAAWlD,MAAM3K,WACxBwO,SAAUX,EAAWW,SAASxO,WAC9ByO,SAAUZ,EAAWY,SAASzO,WAC9B0O,SAAWzgB,oBAAkB4f,EAAWa,eAA6C2D,EAAjCxE,EAAWa,SAAS1O,WACxE2O,SAAW1gB,oBAAkB4f,EAAWc,eAA6C0D,EAAjCxE,EAAWc,SAAS3O,WACxEsJ,IAAKuE,EAAWvE,IAAItJ,WACpBuJ,IAAKsE,EAAWtE,IAAIvJ,aAG5BzY,KAAKkjB,cAAcpX,EAAOzI,IAE9Byc,EAAgB5f,UAAUytB,gBAAkB,SAAUrH,GAClD,IAEIoH,EACAmI,EAHAC,EAAa91B,KAAKwpB,cAAc,GAChCuM,EAAY/1B,KAAKwpB,cAAc,GAenC,OAXIkE,EADApH,GAAqC,oBAA0C,iBAAtBA,EAAgB,OAAkBA,EAAWnD,MAAQ,EAChGmD,EAAWnD,MAAQ4S,GAAczP,EAAWnD,MAAQ,GAAKnjB,KAAKylB,YAAY,GAG3EsQ,EAGbF,EADAvP,GAAsC,oBAAYA,EAAWlD,MAAQ,GAAmC,iBAAtBkD,EAAgB,MACnFA,EAAWlD,MAAQ0S,GAAexP,EAAWlD,MAAQ,GAAKpjB,KAAKylB,YAAY,GAG5ErX,aAAW0nB,IAErBD,EAAanI,IAEzB5N,EAAgB5f,UAAU81B,uBAAyB,SAAUvN,GACzD,IACIwN,EAAa5vB,SAASoiB,EAAKplB,QAAQ+D,MAAM+R,IAAK,IAC9C+c,EAAc7vB,SAASoiB,EAAKplB,QAAQ+D,MAAM8R,KAAM,IAIpD,OAHUP,KAAK0C,MAAM4a,GAAcj2B,KAAKwpB,cAAc,GAAKxpB,KAAKylB,YAAY,KAClE9M,KAAK0C,MAAM6a,GAAel2B,KAAKwpB,cAAc,KAAMxpB,KAAKylB,YAAY,OAIlF3F,EAAgB5f,UAAU+qB,gBAAkB,SAAUvC,EAAcyN,EAAOC,GACvE,IAAIC,KACJ,GAAIr2B,KAAK4gB,gBACLyV,UAGA,IAAK,IAAIr1B,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,KAC7B0F,oBAAkByvB,IAAUn2B,KAAK6hB,OAAO7gB,GAAG2c,KAAOwY,EAAM,GAAGxY,KAC5DjX,oBAAkB0vB,IAAYp2B,KAAK6hB,OAAO7gB,GAAG2c,KAAOyY,EAAQ,GAAGzY,IAChE3d,KAAK6hB,OAAO7gB,GAAG+gB,MAAQ/hB,KAAKsoB,mBAAmBtnB,GAAG+gB,KAAO/hB,KAAK6hB,OAAO7gB,GAAGghB,MAAQhiB,KAAKsoB,mBAAmBtnB,GAAGghB,KAC5GqU,EAAc/nB,KAAKtO,KAAK6hB,OAAO7gB,IAI3C,GAAIq1B,EAAc11B,OAAS,GAAKX,KAAK4gB,gBAAiB,CAClD,IAAI0V,GACAD,cAAeA,EAAe3N,aAAcA,EAC5C6N,YAAc7vB,oBAAkByvB,MAASA,EAAYK,cAAgB9vB,oBAAkB0vB,MAAWA,GAEtGp2B,KAAKsM,QAAQ,SAAUgqB,KAG/BxW,EAAgB5f,UAAU4kB,sBAAwB,SAAU2R,GAExD,IAAK,IADDnzB,EAAQtD,KACHgB,EAAI,EAAGA,EAAIy1B,EAAY91B,OAAQK,IAAK,CACzC,IAAIqlB,EAAcoQ,EAAYz1B,GAE1BhB,KAAK02B,QAAU,IAAIC,YAAUtQ,GACzBxO,gBAAgB,EAChB6c,OAAO,EACPkC,SAAU52B,KAAKqD,QACfwzB,cAAc,EACdC,OAAQ92B,KAAKu1B,gBAAkBv1B,KAAKu1B,gBAAkB,WACtDwB,MAAO,YACPC,UAAWh3B,KAAKi3B,gBAAgBptB,KAAK7J,MACrCk3B,SAAU,SAAUzO,GAChB,IAAI1B,EAAQzjB,EAAM6lB,gBAAgB7lB,EAAMihB,YAAY5G,IAChDra,EAAMioB,cACNjoB,EAAM+nB,WAAWtE,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM5D,MAAO4D,EAAM3D,MAAO9f,EAAMihB,aAAa5jB,OAAS,GAC7F2C,EAAM6zB,kBAAkB1O,GACxBnlB,EAAM+f,iBAAiB/f,EAAMihB,YAAawC,EAAMhF,IAAKgF,EAAM/E,KAC3D1e,EAAMkhB,kBAAkBlhB,EAAMihB,YAAawC,IAG3CzjB,EAAM+f,iBAAiB/f,EAAMihB,YAAawC,EAAMhF,IAAKgF,EAAM/E,KAE/D1e,EAAMihB,YAAc,KACpB,IAAIvY,EAAO1I,EAAMgoB,aAAa7C,GAC1BnlB,EAAMulB,WACNvb,SAAOhK,EAAMulB,WAEjBxgB,eAAa/E,EAAMD,UAAWic,IAC9BjX,eAAaogB,EAAKplB,UAAWkc,IAC7Bjc,EAAMulB,UAAY,KAClBJ,EAAKplB,QAAQsB,UAAUsF,OAAO,cAC9B,IAAI8X,EAAMze,EAAM0yB,uBAAuBvN,GAAM,GACzCzG,EAAM1e,EAAM0yB,uBAAuBvN,GAAM,GACzCnC,EAAahjB,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,IAChDra,EAAMioB,cACsG,IAA5GjoB,EAAM+nB,WAAWtJ,EAAKC,EAAKsE,EAAWnD,MAAOmD,EAAWlD,MAAO7Z,SAASoc,eAAe3Z,EAAK2R,KAAKhd,QACjG2C,EAAMwe,oBAAoBxe,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,KAAOoE,IAAKA,EAAKC,IAAKA,IACnF1e,EAAMke,UAAUiH,EAAKplB,QAAQsa,IAAIoE,IAAMA,EACvCze,EAAMke,UAAUiH,EAAKplB,QAAQsa,IAAIqE,IAAMA,EACvC1e,EAAM4f,eAAgBpX,OAASkW,IAAKA,EAAIvJ,WAAYsJ,IAAKA,EAAItJ,aAAgBgQ,EAAKplB,SAClFC,EAAMyhB,gBAGNzhB,EAAMwe,oBAAoBxe,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,KACzDoE,IAAKze,EAAMke,UAAUiH,EAAKplB,QAAQsa,IAAIoE,IACtCC,IAAK1e,EAAMke,UAAUiH,EAAKplB,QAAQsa,IAAIqE,MAE1CyG,EAAKplB,QAAQyO,aAAa,WAAYxO,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,IAAIqE,IAAIvJ,YACjFgQ,EAAKplB,QAAQyO,aAAa,WAAYxO,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,IAAIoE,IAAItJ,YACjFnV,EAAMyhB,eAEV,IAAIqS,EAAgB9zB,EAAM6lB,gBAAgBV,EAAKplB,QAAQsa,IACvDra,EAAM+f,iBAAiBoF,EAAKplB,QAAS+zB,EAAcrV,IAAKqV,EAAcpV,KACtE1e,EAAM2hB,eACN3hB,EAAMmf,wBACNnf,EAAM4hB,yBACN5hB,EAAM2nB,iBAAgB,GACtB3nB,EAAM+zB,mBAAsBnsB,MAAOud,EAAKvd,MAAO7H,QAASolB,EAAKplB,SAC7DC,EAAMgJ,QAAQ,WAAYmc,GAC1BnlB,EAAMkkB,eACNlkB,EAAMyc,KAAOzc,EAAMwf,QAAO,GAC1Bxf,EAAMkqB,iBACNlqB,EAAMkf,kBAEVhD,KAAM,SAAUiJ,GACZnlB,EAAMg0B,kBACFpsB,MAAOud,EAAKvd,MACZ7H,QAASolB,EAAKplB,QACd/C,OAAQkoB,UAASC,EAAW,OAAG,aAEnCnlB,EAAMgJ,QAAQ,OAAQhJ,EAAMg0B,kBAC5Bh0B,EAAMi0B,YAAY9O,OAGyB,IAA/CzoB,KAAKohB,eAAe5W,QAAQxK,KAAK02B,UACjC12B,KAAKohB,eAAe9S,KAAKtO,KAAK02B,WAM9C5W,EAAgB5f,UAAU+kB,aAAe,WACrCjlB,KAAKgrB,mBACLhrB,KAAK0kB,qBACL1kB,KAAK+kB,eAETjF,EAAgB5f,UAAUsiB,eAAiB,WACvCxiB,KAAKohB,eAAehU,QAAQ,SAAUspB,GAElCA,EAAQc,iBAGhB1X,EAAgB5f,UAAUu3B,iBAAmB,SAAU1V,EAAKqB,EAAOsU,GAC3D3V,EAAMqB,GAASpjB,KAAK+f,OACpB/f,KAAK+f,KAAO/f,KAAK+f,KAAO2X,EACxB13B,KAAKwtB,mBAGb1N,EAAgB5f,UAAU+2B,gBAAkB,SAAUxO,GAClD,IAAIkP,EAAWlP,EACfzoB,KAAKsM,QAAQ,YAAaqrB,EAAU,SAAUA,GACtCnqB,cACAmqB,EAAS3S,WAAWyD,EAAKplB,WAGjCrD,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAChD7hB,KAAKukB,YAAckE,EAAKplB,QACxBrD,KAAK6xB,YAAc+F,KAAKC,MAAMD,KAAKE,UAAU93B,KAAK6xB,cAClD,IAAIkG,EAAc/3B,KAAKowB,SAAW/pB,SAASoiB,EAAKplB,QAAQqJ,aAAa,YAAa,IAClF1M,KAAKg4B,SAAW3xB,SAASoiB,EAAKplB,QAAQqJ,aAAa,YAAa,IAChE,IAAImnB,EAAWxtB,SAASoiB,EAAKplB,QAAQqJ,aAAa,cAAe,IACjE1M,KAAKy3B,iBAAiBM,EAAalE,EAAUA,GAC7C7zB,KAAKwiB,iBACLxiB,KAAK6oB,UAAYtf,SAASiI,cAAc,OACxCxR,KAAK6oB,UAAUlkB,UAAUmD,IAAI,YAC7B9H,KAAK6oB,UAAUlkB,UAAUmD,IAAI,uBAC7Bgf,oBAAS9mB,KAAK6oB,WAAaoP,SAAY,aACvC1vB,YAAUvI,KAAKqD,UAAWic,IAC1B/W,YAAUkgB,EAAKplB,UAAWkc,IAC1Bvf,KAAKqD,QAAQoO,YAAYzR,KAAK6oB,WAC9B7oB,KAAK6oB,UAAYtf,SAASyE,cAAc,aACxChO,KAAK6oB,UAAUzhB,MAAMnC,OAAUjF,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,IAAIyF,MAAQpjB,KAAKslB,SAAS,GAAM,KACjGtlB,KAAK6oB,UAAUzhB,MAAMlC,MAASlF,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,IAAIwF,MAAQnjB,KAAKslB,SAAS,GAAM,KAChG,IAAI8R,EAAgBp3B,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,IACtD3d,KAAKqjB,iBAAiBrjB,KAAK6oB,UAAWuO,EAAcrV,IAAKqV,EAAcpV,MAI3ElC,EAAgB5f,UAAUqoB,YAAc,SAAU2P,EAAQ53B,QACvCwqB,IAAXxqB,IACAA,MAEJ,IAAK,IAAIU,EAAI,EAAGA,EAAIk3B,EAAOv3B,OAAQK,IAAK,CAE/BV,EAAOU,KACRV,EAAOU,OAGX,IAAK,IAAIszB,KAAK4D,EAAOl3B,GACjBV,EAAOU,GAAGszB,GAAK4D,EAAOl3B,GAAGszB,GAGjC,OAAOh0B,GAGXwf,EAAgB5f,UAAUq3B,YAAc,SAAU9O,GAC9C,IAAI0P,EACAjI,EACAkI,EACApW,EAAMoW,EAAUp4B,KAAKg2B,uBAAuBvN,GAAM,GAClD1G,EAAM/hB,KAAKg2B,uBAAuBvN,GAAM,GAC5C,KAAIzG,EAAM,GAAKD,EAAM,GAArB,CAGA/hB,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,KAAOoE,IAAKA,EAAKC,IAAKA,IACjF,IAAIsE,EAAatmB,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,IAGnD,GAFA3d,KAAKy3B,iBAAiBnR,EAAWvE,IAAKuE,EAAWlD,MAAO,GACxDpjB,KAAKwiB,iBACDxiB,KAAKurB,eACLvrB,KAAKkjB,eAAgBpX,OAASkW,IAAKA,EAAIvJ,WAAYsJ,IAAKA,EAAItJ,aAAgBgQ,EAAKplB,SACjFrD,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,KAAOoE,IAAKA,EAAKC,IAAKA,IACjFmW,EAASn4B,KAAKwhB,UAAWiH,EAAKplB,QAAU,IAAG2e,IAC3CkO,EAASlwB,KAAKwhB,UAAWiH,EAAKplB,QAAU,IAAG0e,IAC3C/hB,KAAKwhB,UAAWiH,EAAKplB,QAAU,KAAO0e,IAAKA,EAAKC,IAAKA,GACrDhiB,KAAK0kB,sBACD1kB,KAAKg4B,WAAaG,GAAUn4B,KAAKowB,WAAaF,KAC9ClwB,KAAKm3B,kBAAkB1O,GACnBzoB,KAAKg4B,WAAaG,IAClBn4B,KAAKowB,SAAWF,GAEhBlwB,KAAKowB,WAAaF,IAClBlwB,KAAKg4B,SAAWG,GAEhBn4B,KAAKurB,eAAc,CACnBvrB,KAAKukB,YAAckE,EAAKplB,QACxB,IAAI0jB,EAAQT,EACZtmB,KAAKgyB,eAAiBhyB,KAAKqrB,WAAWtE,EAAMhF,IAAKgF,EAAM/E,IAAK+E,EAAM5D,MAAO4D,EAAM3D,MAAOqF,EAAKplB,SACvFijB,EAAWtE,KAAOhiB,KAAKmlB,mBACvBnlB,KAAKgyB,mBAEThyB,KAAKwkB,kBAAkBiE,EAAKplB,QAASijB,GACrCtmB,KAAKgrB,oBAIS,IAAtBhrB,KAAKurB,cACLvrB,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,KAAOoE,IAAKA,EAAKC,IAAKA,IAEjFhiB,KAAKwhB,UAAUiH,EAAKplB,QAAQsa,IAAIoE,MAAQA,GAAO/hB,KAAKwhB,UAAUiH,EAAKplB,QAAQsa,IAAIqE,MAAQA,IACvFhiB,KAAK8hB,oBAAoB9hB,KAAKmpB,gBAAgBV,EAAKplB,QAAQsa,KAAOoE,IAAKA,EAAKC,IAAKA,IACjFhiB,KAAKkjB,eAAgBpX,OAASkW,IAAKA,EAAIvJ,WAAYsJ,IAAKA,EAAItJ,aAAgBgQ,EAAKplB,UAEjFrD,KAAKg4B,WAAaI,IAClBp4B,KAAKg4B,SAAWG,EAChBn4B,KAAKgrB,oBAEJhrB,KAAKurB,cACNvrB,KAAKm3B,kBAAkB1O,GAE3BzoB,KAAK2sB,oBAAoB3sB,KAAK6gB,iBAC9B7gB,KAAKykB,WAAWzkB,KAAK6gB,iBACjB7gB,KAAKurB,eAIbzL,EAAgB5f,UAAUorB,aAAe,SAAU7C,GAE/C,IAAK,IADDzc,EACKhL,EAAI,EAAGA,EAAIhB,KAAK6gB,gBAAgBlgB,OAAQK,IACzChB,KAAK6gB,gBAAgB7f,GAAG2c,MAAS8K,EAAKplB,SACnColB,EAAKplB,QAAQsa,IAAO8K,KACvBzc,EAAOhM,KAAK6gB,gBAAgB7f,IAGpC,OAAOgL,GAEX8T,EAAgB5f,UAAUquB,SAAW,SAAUxM,EAAKwK,EAAQ8L,IACpDA,GAAkBA,aAAwBz4B,QAC1Cy4B,GAAgBA,IAGpB,IADA,IAAIjV,EAAQ,EACLrB,GAAO,GAAG,CAGb,IAFA,IAAIoB,EAAQ,EACRnB,EAAMuK,EACHvK,GAAO,GAAG,CACb,IAAIoM,EAAQpuB,KAAK8gB,YAAYiB,GAC7B,GAAIqM,EAAO,CACP,IAAIpiB,EAAOoiB,EAAMpM,GACjB,GAAIhW,KAAUqsB,IACsB,IAAhCA,EAAa7tB,QAAQwB,KAAiB3F,SAAS2F,EAAKU,aAAa,cAAe,KAAOyW,GACpF9c,SAAS2F,EAAKU,aAAa,cAAe,KAAO0W,EACpD,OAAOpX,IAGbmX,IACAnB,IAEJD,IACAqB,EAEN,OAAO,MAGXtD,EAAgB5f,UAAUi3B,kBAAoB,SAAU1O,GACpD,IAAI6P,EACAC,EACAnV,EAAQ/c,SAASoiB,EAAKplB,QAAQqJ,aAAa,cAAe,IAC1DsV,EAAM3b,SAASoiB,EAAKplB,QAAQqJ,aAAa,YAAa,IACtDqV,EAAM1b,SAASoiB,EAAKplB,QAAQqJ,aAAa,YAAa,IACtDyW,EAAQ9c,SAASoiB,EAAKplB,QAAQqJ,aAAa,cAAe,IAC1DghB,EAAa1tB,KAAKwpB,cAAc,GAChCiE,EAAcztB,KAAKwpB,cAAc,GACjCrQ,EAAc,IAAR4I,EAAY,EAAM,GAAS1b,SAASonB,EAAYhV,WAAY,IAAMzY,KAAKylB,YAAY,IACzFvM,EAAe,IAAR8I,EAAY,EAAM,GAAS3b,SAASqnB,EAAWjV,WAAY,IAAMzY,KAAKylB,YAAY,IAC7F6S,EAAct4B,KAAKwpB,cAAc,GACjC+O,EAAev4B,KAAKwpB,cAAc,GAClCxpB,KAAKqhB,WAAWlI,IAAMnZ,KAAK6oB,UAAUzhB,MAAM+R,IAAMA,EAAM,KACvDnZ,KAAKqhB,WAAWnI,KAAOlZ,KAAK6oB,UAAUzhB,MAAM8R,KAAOA,EAAO,KAC1DlZ,KAAKqhB,WAAWpc,OAASjF,KAAK6oB,UAAUzhB,MAAMnC,OAAWme,EAAQkV,GAAiBlV,EAAQ,GAAKpjB,KAAKylB,YAAY,GAAO,KACvHzlB,KAAKqhB,WAAWnc,MAAQlF,KAAK6oB,UAAUzhB,MAAMlC,MAAUie,EAAQoV,GAAkBpV,EAAQ,GAAKnjB,KAAKylB,YAAY,GAAO,MAG1H3F,EAAgB5f,UAAUipB,gBAAkB,SAAUjH,GAElD,IAAK,IADDsW,EACKx3B,EAAI,EAAGA,EAAIhB,KAAK6hB,OAAOlhB,OAAQK,IAChChB,KAAK6hB,OAAO7gB,GAAG2c,KAAOuE,IACtBsW,EAAsBx4B,KAAK6hB,OAAO7gB,IAG1C,OAAOw3B,GAQX1Y,EAAgB5f,UAAUu4B,SAAW,SAAUvL,GAC3CltB,KAAK0iB,wBAAyB,EAC9B1iB,KAAK4jB,SACAsJ,EAAMjG,WACPiG,EAAMjG,SAAW,GAEhBiG,EAAMhG,WACPgG,EAAMhG,SAAW,GAEhBgG,EAAMvP,KACPuP,EAAMvP,GAAK,UAAY3d,KAAKggB,QAAQvH,WACpCzY,KAAKggB,QAAUhgB,KAAKggB,QAAU,GAGlC,IAAIuH,EAAY,IAAI1H,EAAM7f,KAAM,SAAUktB,GAAO,GACjDltB,KAAK6hB,OAAOvT,KAAKiZ,GACjBvnB,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAChD7hB,KAAK6jB,gBAAgB0D,IACjBvnB,KAAK8jB,eAAiByD,EAAUvF,KAAOhiB,KAAK8jB,eAAkByD,EAAUvF,IAAMuF,EAAUpE,QACxFnjB,KAAK8hB,oBAAoByF,GAAavF,IAAKhiB,KAAK8jB,eAAiByD,EAAUpE,QAE/E,IAAI+K,EAAOluB,KAAK4tB,WAAWrG,GAAW,EAAM,MAoC5C,GAnCAvnB,KAAKwhB,UAAU+F,EAAU5J,KAAQoE,IAAKwF,EAAUxF,IAAKC,IAAKuF,EAAUvF,KACpEhiB,KAAK6xB,YAAYtK,EAAU5J,KAAQoE,IAAKwF,EAAUxF,IAAKC,IAAKuF,EAAUvF,KACtEhiB,KAAK0kB,qBACL1kB,KAAKqD,QAAQq1B,sBAAsB,aAAcxK,GACjDluB,KAAKqtB,gBAAiB,EAClBrtB,KAAKsiB,mBACLtiB,KAAK2kB,wBACD3kB,KAAKwN,UACL0gB,EAAK9mB,MAAM+V,eAAe,cAE9Bnd,KAAK2sB,oBAAoB3sB,KAAK6gB,mBAG9B7gB,KAAKukB,YAAc2J,EACdluB,KAAKgyB,iBACNhyB,KAAKgyB,mBAEThyB,KAAKqjB,iBAAiB6K,EAAM3G,EAAUxF,IAAKwF,EAAUvF,KACjDhiB,KAAKwN,UACL0gB,EAAK9mB,MAAM+V,eAAe,cAE9Bnd,KAAKwkB,kBAAkB0J,EAAM3G,IAEjCvnB,KAAKqtB,gBAAiB,EAClBrtB,KAAK6kB,eACL7kB,KAAKokB,aAAepkB,KAAKsiB,mBACzBtiB,KAAK8kB,uBAAuBvb,SAASoc,eAAe4B,EAAU5J,MAElE3d,KAAKykB,YAAYyJ,IACbluB,KAAK+qB,eACL/qB,KAAKgrB,mBAEThrB,KAAK0kB,qBACL1kB,KAAK+kB,cACL/kB,KAAKklB,yBACDllB,KAAKynB,cACL,IAAK,IAAIzmB,EAAI,EAAGA,EAAIktB,EAAK1b,iBAAiB,aAAa7R,OAAQK,IAAK,CAChE,IAAIsR,EAAmC,SAAtB7J,UAAQC,KAAKC,KAAmB,wBAA0B,YAC3EW,eAAaxB,IAAIomB,EAAK1b,iBAAiB,aAAaxR,GAAIsR,EAAWtS,KAAK0nB,kBAAmB1nB,MACjE,SAAtByI,UAAQC,KAAKC,MACbW,eAAaxB,IAAIomB,EAAK1b,iBAAiB,aAAaxR,GAAI,aAAchB,KAAK2nB,uBAAwB3nB,MAI/GA,KAAKirB,iBAAgB,GAAQ1D,IAC7BvnB,KAAK0iB,wBAAyB,EAC9B1iB,KAAK2iB,kBAQT7C,EAAgB5f,UAAUy4B,YAAc,SAAUzL,GAC9C,GAAKA,EAAMvP,GAAX,CAGA,IAAIyZ,EAAgBp3B,KAAKmpB,gBAAgB+D,EAAMvP,IAC/C,GAAKyZ,EAAL,CAGAp3B,KAAK4jB,SACLsJ,EAAMlL,IAAOkL,EAAMlL,IAAM,EAAK,EAAMkL,EAAMlL,IAAMhiB,KAAKgjB,QAAYhjB,KAAKgjB,QAAU,EAAIkK,EAAMlL,IACtFtb,oBAAkBwmB,EAAMlL,OACxBkL,EAAMlL,IAAMoV,EAAcpV,KAE9BhiB,KAAK8hB,oBAAoBsV,EAAelK,GACxCltB,KAAK6jB,gBAAgBuT,GACrB,IAAIlJ,EAAO3kB,SAASoc,eAAeuH,EAAMvP,IAMzC,GALA3d,KAAKukB,YAAc2J,EACnBluB,KAAK0f,aAAewO,EAAKlgB,cAAc,sBACnCkgB,EAAKlgB,cAAc,sBACnBhO,KAAK4lB,iBAAiBwR,EAAchyB,SAAU8oB,EAAKvQ,GAAK,WAAYgC,GACxEuO,EAAKzc,YAAYzR,KAAK0f,cAClB0X,EAAcxX,OAAQ,CACtB,IAAI6G,EAAwByH,EAAKlgB,cAAc,mBAC3CkgB,EAAKlgB,cAAc,mBAAqBhO,KAAK4lB,iBAAiB,GAAIsI,EAAKvQ,GAAK,WAAY,IAC5FpV,YAAUke,IAAyB7G,IACnC6G,EAAsB9f,UAAY,GAClC,IAAIgX,EAAK3d,KAAKqD,QAAQsa,GAAK,iBAAmByZ,EAAczZ,GAC5D3d,KAAKimB,eAAemR,EAAcxX,OAAQ6G,EAAuB9I,GAAI,GACrE3d,KAAK0f,aAAajO,YAAYgV,QAG1ByH,EAAKlgB,cAAc,oBACnBV,SAAO4gB,EAAKlgB,cAAc,oBAGlC,GAAIopB,EAAcnqB,QAAS,CACvBjN,KAAK2mB,UAAYuH,EAAKlgB,cAAc,oBAAsBkgB,EAAKlgB,cAAc,oBACzEhO,KAAK4lB,iBAAiBwR,EAAchyB,SAAU8oB,EAAKvQ,GAAK,QAAS+B,GACrE1f,KAAK2mB,UAAUhgB,UAAY,GAC3B,IAEIigB,EAAqB,iBAFN5mB,KAAK0f,aAAa1R,cAAc,mBAC/CtE,OAAOmd,iBAAiB7mB,KAAK0f,aAAa1R,cAAc,oBAAoB/I,OAAS,OAC/B,IAC1D6hB,oBAAS9mB,KAAK2mB,WAAa1hB,OAAQ2hB,IAC/BjJ,EAAK3d,KAAKqD,QAAQsa,GAAK,kBAAoByZ,EAAczZ,GAC7D3d,KAAKimB,eAAemR,EAAcnqB,QAASjN,KAAK2mB,UAAWhJ,GAAI,GAC/D3d,KAAK0f,aAAajO,YAAYzR,KAAK2mB,gBAG/BuH,EAAKlgB,cAAc,qBACnBV,SAAO4gB,EAAKlgB,cAAc,qBAGlChO,KAAKgkB,gBAAgBkK,EAAMkJ,GAC3Bp3B,KAAKsjB,kBAAkB4K,EAAMkJ,GAC7Bp3B,KAAKqjB,iBAAiB6K,EAAMkJ,EAAcrV,IAAKqV,EAAcpV,KAC7DhiB,KAAKwkB,kBAAkB0J,EAAMkJ,GAC7Bp3B,KAAKukB,YAAc,KACnBvkB,KAAKilB,eACLjlB,KAAKklB,4BAETpF,EAAgB5f,UAAUglB,uBAAyB,WAC/CllB,KAAK+xB,WAAa/xB,KAAK8gB,YACvB9gB,KAAK6xB,YAAc+F,KAAKC,MAAMD,KAAKE,UAAU93B,KAAKwhB,aAMtD1B,EAAgB5f,UAAU04B,UAAY,WAGlC,IAAK,IAFDC,EAAa74B,KAAKuoB,YAAYvoB,KAAK6hB,QACnCiX,KACK93B,EAAI,EAAGA,EAAI63B,EAAWl4B,OAAQK,IACnC83B,EAAaxqB,MACTqP,GAAIkb,EAAW73B,GAAG2c,GAAIoE,IAAK8W,EAAW73B,GAAG+gB,IAAKC,IAAK6W,EAAW73B,GAAGghB,IAAKmB,MAAO0V,EAAW73B,GAAGmiB,MAC3FC,MAAOyV,EAAW73B,GAAGoiB,MAAO6D,SAAU4R,EAAW73B,GAAGimB,SAAUC,SAAU2R,EAAW73B,GAAGkmB,SACtFC,SAAU0R,EAAW73B,GAAGmmB,SAAUC,SAAUyR,EAAW73B,GAAGomB,WAGlE,UAKJtH,EAAgB5f,UAAU64B,UAAY,WAClC/4B,KAAK4gB,iBAAkB,EACvB,IAAK,IAAI5f,EAAI,EAAGA,EAAIhB,KAAK6gB,gBAAgBlgB,OAAQK,IAC7CsM,SAAOtN,KAAK6gB,gBAAgB7f,IAEhChB,KAAKg5B,iBACLh5B,KAAKyiB,wBACLziB,KAAK+f,KAAO,EACZ/f,KAAK+gB,uBACL/gB,KAAKwtB,iBACLxtB,KAAK+kB,cACL/kB,KAAK8gB,eACL9gB,KAAKihB,uBACLjhB,KAAKghB,kBACLhhB,KAAKkhB,0BACLlhB,KAAK6gB,mBACL7gB,KAAKwhB,aACLxhB,KAAK6xB,eACL,IAAIoH,EAAej5B,KAAKuoB,YAAYvoB,KAAK6hB,QACzC7hB,KAAK6N,eAAgBgU,YAAc,GACnC7hB,KAAKilB,eACLjlB,KAAKklB,yBACLllB,KAAKirB,iBAAgB,EAAO,KAAMgO,GAClCj5B,KAAK4gB,iBAAkB,GAO3Bd,EAAgB5f,UAAUg5B,YAAc,SAAUvb,GAC9C,IAAIra,EAAQtD,KACZA,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAEhD,IAAK,IADDsX,EACKn4B,EAAI,EAAGA,EAAIhB,KAAK6gB,gBAAgBlgB,OAAQK,IACzChB,KAAK6gB,gBAAgB7f,GAAG2c,KAAOA,IAC/BrQ,SAAOtN,KAAK6gB,gBAAgB7f,IAC5BhB,KAAK6gB,gBAAgB/B,OAAO9d,EAAG,IAE/BhB,KAAK6hB,OAAO7gB,GAAG2c,KAAOA,IACtBwb,EAAen5B,KAAK6hB,OAAO7gB,GAC3BhB,KAAK6hB,OAAO/C,OAAO9d,EAAG,GACtBhB,KAAKsoB,mBAAmBxJ,OAAO9d,EAAG,GAClChB,KAAK0kB,qBACL1kB,KAAK+kB,eAGb/kB,KAAKilB,eACLjlB,KAAKyiB,wBACLziB,KAAK+gB,oBAAoB3T,QAAQ,SAAUpB,GACnCA,EAAK2R,KAAOA,GACZra,EAAMyd,oBAAoBjC,OAAOxb,EAAMyd,oBAAoBvW,QAAQwB,GAAO,KAGlFhM,KAAKklB,yBACLllB,KAAKirB,iBAAgB,EAAO,MAAOkO,KASvCrZ,EAAgB5f,UAAUk5B,UAAY,SAAUzb,EAAIoE,EAAKC,GACrDhiB,KAAKigB,iBAAkB,EACvBjgB,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAChD,IAAIuV,EAAgBp3B,KAAKmpB,gBAAgBxL,GACzC,IAAK0b,MAAMtX,IAAgB,OAARA,IAAkBsX,MAAMrX,IAAgB,OAARA,GAAkBoV,EAArE,CAGIpV,EAAM,EACNA,EAAM,EAEDA,EAAMhiB,KAAKgjB,UAChBhB,EAAMhiB,KAAKgjB,QAAUoU,EAAcjU,OAEvCnjB,KAAK8hB,oBAAoBsV,GAAiBrV,IAAKA,EAAKC,IAAKA,IACzD,IAAItF,EAAMnT,SAASoc,eAAehI,GAClC3d,KAAKukB,YAAc7H,EACnB1c,KAAKowB,SAAW/pB,SAASqW,EAAIhQ,aAAa,YAAa,IACvD1M,KAAKg4B,SAAW3xB,SAASqW,EAAIhQ,aAAa,YAAa,IACvD1M,KAAKkjB,eAAgBpX,OAASkW,IAAKA,EAAIvJ,WAAYsJ,IAAKA,EAAItJ,aAAgBiE,GAC5E1c,KAAK0kB,qBACL1kB,KAAKqjB,iBAAiB3G,EAAKqF,EAAKC,GAChChiB,KAAKwkB,kBAAkB9H,EAAK0a,GAC5Bp3B,KAAKujB,kBACLvjB,KAAKilB,eACLjlB,KAAKyiB,wBACLziB,KAAKklB,yBACLllB,KAAKukB,YAAc,KACfvkB,KAAK+qB,eACL/qB,KAAKgrB,mBAEThrB,KAAKigB,iBAAkB,EACvBjgB,KAAKirB,iBAAgB,KAEzBnL,EAAgB5f,UAAUgjB,cAAgB,SAAUpX,EAAO4Q,GACvD,IAAK,IAAI1b,EAAI,EAAGA,EAAIvB,OAAOsF,KAAK+G,GAAOnL,OAAQK,IACvCvB,OAAOsF,KAAK+G,KACRA,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIghB,KAC7BtF,EAAI5K,aAAa,WAAYhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIghB,IAAIvJ,YAE9D3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAI+gB,KAC7BrF,EAAI5K,aAAa,WAAYhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAI+gB,IAAItJ,YAE9D3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAImiB,OAC7BzG,EAAI5K,aAAa,aAAchG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAImiB,MAAM1K,YAElE3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIoiB,OAC7B1G,EAAI5K,aAAa,aAAchG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIoiB,MAAM3K,YAElE3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIimB,UAC7BvK,EAAI5K,aAAa,gBAAiBhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIimB,SAASxO,YAExE3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIkmB,UAC7BxK,EAAI5K,aAAa,gBAAiBhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIkmB,SAASzO,YAExE3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAImmB,UAC7BzK,EAAI5K,aAAa,gBAAiBhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAImmB,SAAS1O,YAExE3M,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIomB,UAC7B1K,EAAI5K,aAAa,gBAAiBhG,EAAMrM,OAAOsF,KAAK+G,GAAO9K,IAAIomB,SAAS3O,cAWxFqH,EAAgB5f,UAAUo5B,YAAc,SAAU3b,EAAIwF,EAAOC,GACzDpjB,KAAKsoB,mBAAqBtoB,KAAKuoB,YAAYvoB,KAAK6hB,QAChD,IAAIuV,EAAgBp3B,KAAKmpB,gBAAgBxL,GACzC3d,KAAKkgB,cAAe,EACpB,IAAIxD,EAAMnT,SAASoc,eAAehI,GAC9B8K,GAASvd,MAAO,KAAM7H,QAASqZ,EAAKgM,cAAc,GACtD1oB,KAAKsM,QAAQ,cAAemc,GAC5BzoB,KAAK8hB,oBAAoBsV,GAAiBjU,MAAOA,EAAOC,MAAOA,IAC/DpjB,KAAK6jB,gBAAgBuT,GACrBp3B,KAAKguB,kBAAkBoJ,GACvBp3B,KAAKukB,YAAc7H,EACnB1c,KAAKkjB,eAAgBpX,OAASqX,MAAOiU,EAAcjU,MAAM1K,WAAY2K,MAAOgU,EAAchU,MAAM3K,aAAgBiE,GAChH1c,KAAKsjB,kBAAkB5G,EAAK0a,GAC5Bp3B,KAAKwkB,kBAAkB9H,EAAK0a,GAC5Bp3B,KAAKilB,eACLjlB,KAAKyiB,wBACLziB,KAAKujB,kBACLvjB,KAAKkgB,cAAe,EACpBlgB,KAAKsM,QAAQ,aAAcmc,GAC3BzoB,KAAKirB,iBAAgB,IAMzBnL,EAAgB5f,UAAU4d,QAAU,WAChCzV,eAAarI,KAAKqD,UAAW,oBAAqB,QAAS,eAAgB,cAC3ErD,KAAKqD,QAAQ+Z,gBAAgB,SAC7B,IAAK,IAAIpc,EAAI,EAAGA,EAAIhB,KAAKohB,eAAezgB,OAAQK,IAC5ChB,KAAKohB,eAAepgB,GAAG8c,UAE3B9d,KAAKg5B,iBACLj2B,EAAO7C,UAAU4d,QAAQva,KAAKvD,OAElC8f,EAAgB5f,UAAU84B,eAAiB,WACvC,KAAOh5B,KAAKqD,QAAQk2B,mBAChBjsB,SAAOtN,KAAKqD,QAAQk2B,oBAG5BzZ,EAAgB5f,UAAUmlB,aAAe,WACrCrlB,KAAKiG,UAAYsC,YAAUvI,KAAKqD,SAAU,SAAWgF,eAAarI,KAAKqD,SAAU,UAOrFyc,EAAgB5f,UAAUs5B,yBAA2B,WACjDx5B,KAAKolB,wBACLplB,KAAKwtB,iBACLxtB,KAAKutB,eACL,IAAK,IAAIvsB,EAAI,EAAGA,EAAIhB,KAAKqD,QAAQmP,iBAAiB,YAAY7R,OAAQK,IAAK,CACvE,IAAI0b,EAAM1c,KAAKqD,QAAQmP,iBAAiB,YAAYxR,GAChDslB,EAAatmB,KAAKmpB,gBAAgBzM,EAAIiB,IAC1C3d,KAAKsjB,kBAAkB5G,EAAK4J,GAC5BtmB,KAAKqjB,iBAAiB3G,EAAK4J,EAAWvE,IAAKuE,EAAWtE,OAG9DlC,EAAgB5f,UAAUu5B,wBAA0B,SAAU5X,GAC1D7hB,KAAK+4B,YACL/4B,KAAK6N,eAAgBgU,OAAQA,IAAU,GACvC7hB,KAAK0hB,eACD1hB,KAAK4iB,OACL5iB,KAAK4iB,MAAM3Y,SAEfjK,KAAKwN,UAAW,EAChBxN,KAAKmiB,aACLniB,KAAKwN,SAAYA,cAAcxN,KAAKyN,iBAChCzN,KAAKqiB,eACLriB,KAAKuiB,iBAGbzC,EAAgB5f,UAAUw5B,iBAAmB,SAAU7X,GACnD,IAAIve,EAAQtD,MACP0G,oBAAkBmb,IAAWA,EAAOlhB,OAAS,GAC9CX,KAAKggB,QAAU,EACf6B,EAAOzU,QAAQ,SAAU8f,GAChBA,EAAMvP,KACPra,EAAMwe,oBAAoBoL,GAASvP,GAAI,UAAYra,EAAM0c,QAAQvH,aACjEnV,EAAM0c,QAAU1c,EAAM0c,QAAU,MAKxChgB,KAAK25B,uBAAwB,GAQrC7Z,EAAgB5f,UAAUsE,kBAAoB,SAAUC,EAASC,GAC7D,IAAIpB,EAAQtD,KACRyE,EAAQod,QACR7hB,KAAK05B,iBAAiBj1B,EAAQod,QAElC,IAAK,IAAIhd,EAAK,EAAGC,EAAKrF,OAAOsF,KAAKN,GAAUI,EAAKC,EAAGnE,OAAQkE,IAAM,CAE9D,OADWC,EAAGD,IAEV,IAAK,YACD7E,KAAK6N,eAAgB5H,UAAWxB,EAAQwB,YAAa,GACrDjG,KAAKqlB,eACL,MACJ,IAAK,aACDrlB,KAAK6N,eAAgBuW,WAAY3f,EAAQ2f,aAAc,GACnDpkB,KAAKsiB,mBACLtiB,KAAK2kB,wBAET,MACJ,IAAK,gBACD3kB,KAAK6N,eAAgBgX,cAAepgB,EAAQogB,gBAAiB,GAC7D7kB,KAAKo1B,aACL,MACJ,IAAK,gBAED,GADAp1B,KAAK6N,eAAgB4Z,cAAehjB,EAAQgjB,gBAAiB,GACzDznB,KAAKynB,cACLznB,KAAKykB,WAAWzkB,KAAK6gB,iBACrB7gB,KAAKwnB,mBAEJ,CAED,IAAK,IADD/D,EAAgBzjB,KAAKqD,QAAQmP,iBAAiB,yCACzCxR,EAAI,EAAGA,EAAIyiB,EAAc9iB,OAAQK,IAAK,CAC3C,IAAIsR,EAAmC,SAAtB7J,UAAQC,KAAKC,KAAmB,wBAA0B,YACvEtF,EAAUogB,EAAcziB,GAC5BsI,eAAaW,OAAO5G,EAASiP,EAAWtS,KAAK0nB,mBACnB,SAAtBjf,UAAQC,KAAKC,MACbW,eAAaW,OAAO5G,EAAS,aAAcrD,KAAK2nB,wBAGxD3nB,KAAK2sB,oBAAoB3sB,KAAK6gB,iBAElC,MACJ,IAAK,cACD7gB,KAAK6N,eAAgB4X,YAAahhB,EAAQghB,cAAe,GACzDzlB,KAAKw5B,2BACLx5B,KAAKisB,kBACL,MACJ,IAAK,kBACDjsB,KAAK6N,eAAgB0nB,gBAAiB9wB,EAAQ8wB,kBAAmB,GACjEv1B,KAAKo1B,aACL,MACJ,IAAK,gBACDp1B,KAAK6N,eAAgBkd,cAAetmB,EAAQsmB,gBAAiB,GAC7D/qB,KAAKgrB,mBACL,MACJ,IAAK,gBACGhrB,KAAKqiB,eACLriB,KAAK6N,eAAgBwU,cAAe5d,EAAQ4d,gBAAiB,GAC7DriB,KAAKuiB,iBAGDviB,KAAK4iB,OACLtV,SAAOtN,KAAK4iB,OAGpB,MACJ,IAAK,eACD5iB,KAAK6N,eAAgB0d,aAAc9mB,EAAQ8mB,eAAgB,GAC3D,MACJ,IAAK,SACI9mB,EAAQue,SAAYhjB,KAAK25B,sBAM1B35B,KAAK25B,uBAAwB,GAL7B35B,KAAKoiB,kBAAmB,EACxBpiB,KAAKy5B,wBAAwBh1B,EAAQod,QACrC7hB,KAAKoiB,kBAAmB,GAK5B,MACJ,IAAK,UACDpiB,KAAKoiB,kBAAmB,EACpB3d,EAAQod,QACR7hB,KAAKy5B,wBAAwBh1B,EAAQod,QAEzC7hB,KAAK6N,eAAgBmV,QAASve,EAAQue,UAAW,GACjDhjB,KAAK6gB,mBACL7gB,KAAK8jB,eAAiB9jB,KAAKgjB,QAC3BhjB,KAAK2hB,oBACL3hB,KAAK6hB,OAAOzU,QAAQ,SAAU8f,GAE1B,GADA5pB,EAAMugB,gBAAgBqJ,GAClB5pB,EAAMwgB,eAAiBoJ,EAAMlL,KAAO1e,EAAMwgB,eAAkBoJ,EAAMlL,IAAMkL,EAAM/J,MAAQ,CACtF,IAAIY,EAAWzgB,EAAMwgB,eAAiBoJ,EAAM/J,MAC5C7f,EAAMwe,oBAAoBoL,GAASlL,IAAK+B,EAAW,EAAI,EAAIA,IAC3DzgB,EAAM0gB,gBAAgBza,SAASoc,eAAeuH,EAAMvP,IAAKuP,GAE7D5pB,EAAMggB,kBAAkB/Z,SAASoc,eAAeuH,EAAMvP,IAAKuP,GAC3D5pB,EAAMud,gBAAgBvS,KAAK/E,SAASoc,eAAeuH,EAAMvP,KACzDra,EAAM+f,iBAAiB9Z,SAASoc,eAAeuH,EAAMvP,IAAKuP,EAAMnL,IAAKmL,EAAMlL,KAC3E1e,EAAMihB,YAAchb,SAASoc,eAAeuH,EAAMvP,IAClDra,EAAMkhB,kBAAkBjb,SAASoc,eAAeuH,EAAMvP,IAAKuP,GAC3D5pB,EAAMihB,YAAc,OAExBvkB,KAAKilB,eACLjlB,KAAKklB,yBACLllB,KAAKoiB,kBAAmB,EACxBpiB,KAAKisB,qBAUrBnM,EAAgB5f,UAAU2I,eAAiB,WAEvC,OAAO7I,KAAK8I,cADK,YAQrBgX,EAAgB5f,UAAU6I,cAAgB,WACtC,MAAO,mBAEX3I,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,qBAAiB,GAC/CE,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,oBAAgB,GAC9CE,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,2BAAuB,GACrDE,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,IACV6c,EAAgB5f,UAAW,uBAAmB,GACjDE,GACI6C,YAAU,EAAG,KACd6c,EAAgB5f,UAAW,mBAAe,GAC7CE,GACI6C,WAAS,IACV6c,EAAgB5f,UAAW,eAAW,GACzCE,GACI6C,YAAS,IACV6c,EAAgB5f,UAAW,qBAAiB,GAC/CE,GACI6C,WAAS,OACV6c,EAAgB5f,UAAW,uBAAmB,GACjDE,GACI6C,WAAS,UACV6c,EAAgB5f,UAAW,cAAU,GACxCE,GACI6C,WAAS,qBACV6c,EAAgB5f,UAAW,kBAAc,GAC5CE,GACI8e,gBAAeW,IAChBC,EAAgB5f,UAAW,cAAU,GACxCE,GACI6C,YAAU,kBACX6c,EAAgB5f,UAAW,wBAAoB,GAClDE,GACI+e,WACDW,EAAgB5f,UAAW,cAAU,GACxCE,GACI+e,WACDW,EAAgB5f,UAAW,iBAAa,GAC3CE,GACI+e,WACDW,EAAgB5f,UAAW,YAAQ,GACtCE,GACI+e,WACDW,EAAgB5f,UAAW,gBAAY,GAC1CE,GACI+e,WACDW,EAAgB5f,UAAW,mBAAe,GAC7CE,GACI+e,WACDW,EAAgB5f,UAAW,cAAU,GACxCE,GACI+e,WACDW,EAAgB5f,UAAW,kBAAc,GAC5CE,GACI+e,WACDW,EAAgB5f,UAAW,eAAW,GACzCE,GACI+e,WACDW,EAAgB5f,UAAW,iBAAa,GAC3C4f,EAAkB1f,GACdgf,yBACDU,IAELT"}