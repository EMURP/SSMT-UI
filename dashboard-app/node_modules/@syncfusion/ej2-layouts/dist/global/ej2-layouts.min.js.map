{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function () {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        var diff = this.orientation === 'Horizontal' ? (this.element.offsetWidth -\n            (this.allBars[0].offsetWidth * this.allBars.length)) - totalWidth :\n            (this.element.offsetHeight - (this.allBars[0].offsetHeight * this.allBars.length)) - totalWidth;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        this.updateSplitterSize();\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","diff","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","drag","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","keyEntity"],"mappings":"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"}